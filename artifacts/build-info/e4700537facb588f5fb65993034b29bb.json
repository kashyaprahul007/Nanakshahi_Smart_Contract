{
	"id": "e4700537facb588f5fb65993034b29bb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"viaIR": true,
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/modules/ContestRoyalty.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.30;\r\n\r\n\r\nimport \"./Storage.sol\";\r\n\r\ncontract ContestRoyalty is Storage  {\r\n\r\n    \r\n    constructor() {\r\n        currentWeeklyStartTime = block.timestamp;\r\n        currentMonthlyStartTime = block.timestamp;\r\n\r\n        WeeklyTotalReward = 0;\r\n        currentWeeklyRound = 1;\r\n        monthlyTotalReward = 0;\r\n        currentMonthlyRound = 1;     \r\n    }\r\n\r\n     function _closeMonthlyContest() internal {\r\n        \r\n        if (block.timestamp >= (currentMonthlyStartTime + MONTH_DURATION)) {\r\n            uint currentRound = currentMonthlyRound;\r\n            monthlyRoyalty storage curentMonthRoyalty = monthlyRoyaltydtl[currentRound];\r\n\r\n            // Prevent double closing\r\n            // if (curentMonthRoyalty.endTime > 0 && block.timestamp < curentMonthRoyalty.endTime) {\r\n            //     return;\r\n            // }\r\n            if (curentMonthRoyalty.closed) return;\r\n            uint qualifiedCount = monthlyQualifiedUsers.length;\r\n            uint perUserReward;\r\n            uint distributedAmount;\r\n            uint leftover;\r\n\r\n            if (qualifiedCount > 0) {\r\n                // Calculate reward distribution\r\n                uint rawReward = monthlyTotalReward / qualifiedCount;\r\n                perUserReward = (rawReward > monthlyCapping) ? monthlyCapping : rawReward;\r\n                distributedAmount = perUserReward * qualifiedCount;\r\n                leftover = (monthlyTotalReward > distributedAmount) ? monthlyTotalReward - distributedAmount : 0;\r\n            } else {\r\n                // No qualified users → carry forward all\r\n                leftover = monthlyTotalReward;\r\n                distributedAmount = 0;\r\n                perUserReward = 0;\r\n            }\r\n\r\n            // Store round data\r\n            curentMonthRoyalty.roundId = currentRound;\r\n            curentMonthRoyalty.perUserReward = perUserReward;\r\n            curentMonthRoyalty.totalUsers = qualifiedCount;\r\n            curentMonthRoyalty.totalReward = monthlyTotalReward;//distributedAmount;\r\n            curentMonthRoyalty.carryForward = leftover;\r\n            curentMonthRoyalty.endTime = currentMonthlyStartTime + MONTH_DURATION;\r\n            curentMonthRoyalty.closed = true;\r\n\r\n            // Prepare next round\r\n            currentMonthlyStartTime = curentMonthRoyalty.endTime;\r\n            currentMonthlyRound = currentRound + 1;\r\n            monthlyTotalReward = leftover; // carry forward\r\n\r\n            emit MonthlyClosed(currentRound, qualifiedCount, perUserReward,  distributedAmount+leftover, distributedAmount, leftover, curentMonthRoyalty.endTime);\r\n        }\r\n    } \r\n\r\n    function canClaimMonthlyReward(uint _userId, uint _roundId) external view returns (bool) {\r\n    monthlyRoyaltyUser storage userRoyalty = monthlyRoyaltyUserdtl[_userId];\r\n    monthlyRoyalty storage royalty = monthlyRoyaltydtl[_roundId];\r\n\r\n    if (\r\n        !royalty.closed ||\r\n        _roundId >= currentMonthlyRound ||\r\n        !userRoyalty.isQualified ||\r\n        userRoyalty.qualifiedRoundId > _roundId ||\r\n        userRoyalty.isClaimed[_roundId] ||\r\n        royalty.perUserReward == 0\r\n    ) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\n    function claimMonthlyContestReward(uint _userId, uint _roundId) external nonReentrant {\r\n        \r\n        User storage user = users[_userId];\r\n        address userAddress = user.account ;\r\n        require(userAddress == msg.sender, \"Not your account\");\r\n        require(_userId > 0 && _roundId > 0 && monthlyRoyaltydtl[_roundId].closed == true && _roundId < currentMonthlyRound, \"Invalid userId or roundId or round or not closed\");\r\n        monthlyRoyaltyUser storage userRoyalty  = monthlyRoyaltyUserdtl[_userId];\r\n        monthlyRoyalty storage currentMonthRoyalty = monthlyRoyaltydtl[_roundId];\r\n\r\n        require(userRoyalty.isQualified == true, \"Not qualified \");\r\n        require(!userRoyalty.isClaimed[_roundId], \"Already claimed for this round\");\r\n        require(currentMonthRoyalty.perUserReward > 0, \"No reward to claim\");\r\n        require(currentMonthRoyalty.claimedCount < currentMonthRoyalty.totalUsers, \"All users claimed\");\r\n        require(userRoyalty.qualifiedRoundId <= _roundId, \"Not eligible to claim\");\r\n        uint amount = currentMonthRoyalty.perUserReward;\r\n  \r\n        currentMonthRoyalty.claimedCount += 1;\r\n        userRoyalty.isClaimed[_roundId] = true;\r\n        \r\n        _distributeIncome(_userId, _userId, amount, 0, 13);       \r\n       \r\n        emit MonthlyRewardClaim(_roundId, _userId, amount,  block.timestamp);\r\n    } \r\n\r\n    function _closeWeeklyContest() internal {\r\n        \r\n        if (block.timestamp >= (currentWeeklyStartTime + WEEK_DURATION)) {\r\n            uint currentRound = currentWeeklyRound;\r\n            WeeklyContest storage curentWeekContest = weeklyContestdtl[currentRound];\r\n\r\n            // Prevent double closing\r\n            // if (curentWeekContest.endTime > 0 && block.timestamp < curentWeekContest.endTime) {\r\n            //     return;\r\n            // }\r\n            if (curentWeekContest.closed) return;\r\n\r\n            uint qualifiedCount = weeklyQualifiedUsers[currentRound].length;\r\n            uint perUserReward;\r\n            uint distributedAmount;\r\n            uint leftover;\r\n\r\n            if (qualifiedCount > 0) {\r\n                // Calculate reward distribution\r\n                uint rawReward = WeeklyTotalReward / qualifiedCount;\r\n                perUserReward = (rawReward > WeeklyCapping) ? WeeklyCapping : rawReward;\r\n                distributedAmount = perUserReward * qualifiedCount;\r\n                leftover = (WeeklyTotalReward > distributedAmount) ? WeeklyTotalReward - distributedAmount : 0;\r\n            } else {\r\n                // No qualified users → carry forward all\r\n                leftover = WeeklyTotalReward;\r\n                distributedAmount = 0;\r\n                perUserReward = 0;\r\n            }\r\n\r\n            // Store round data\r\n            curentWeekContest.roundId = currentRound;\r\n            curentWeekContest.perUserReward = perUserReward;\r\n            curentWeekContest.totalUsers = qualifiedCount;\r\n            curentWeekContest.totalReward = WeeklyTotalReward;//distributedAmount;\r\n            curentWeekContest.carryForward = leftover;\r\n            curentWeekContest.endTime = currentWeeklyStartTime + WEEK_DURATION;\r\n            curentWeekContest.closed = true;\r\n\r\n            // Prepare next round\r\n            currentWeeklyStartTime = curentWeekContest.endTime;\r\n            currentWeeklyRound = currentRound + 1;\r\n            WeeklyTotalReward = leftover; // carry forward\r\n\r\n             emit WeeklyClosed(currentRound, qualifiedCount, perUserReward,  distributedAmount+leftover, distributedAmount, leftover, curentWeekContest.endTime);\r\n        }\r\n    }   \r\n\r\n    function claimWeeklyContestReward(uint _userId, uint _roundId) external nonReentrant {\r\n        \r\n        User storage user = users[_userId];\r\n        address userAddress = user.account ;\r\n        require(userAddress == msg.sender, \"Not your account\");\r\n        require(_userId > 0 && _roundId > 0 && weeklyContestdtl[_roundId].closed == true && _roundId < currentWeeklyRound, \"Invalid userId or roundId or round or not closed\");\r\n        weeklyUser storage weeklyuserdtl = weeklyUserdtl[_roundId][_userId];\r\n        WeeklyContest storage curentWeekContest = weeklyContestdtl[_roundId];\r\n        require(weeklyuserdtl.isQualified == true && weeklyuserdtl.isClaimed == false, \"Not qualified or already claimed\");\r\n        require(curentWeekContest.perUserReward > 0, \"No reward to claim\");\r\n        require(curentWeekContest.claimedCount < curentWeekContest.totalUsers, \"All users claimed\");\r\n\r\n        uint amount = curentWeekContest.perUserReward;\r\n  \r\n        curentWeekContest.claimedCount += 1;\r\n        weeklyuserdtl.isClaimed = true;\r\n        \r\n        _distributeIncome(_userId, _userId, amount, 0, 12);       \r\n       \r\n        emit WeeklyRewardClaim(_roundId, _userId, amount,  block.timestamp);\r\n    }   \r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n    // --- View helper (for frontend) ---\r\n    \r\n\r\n    // Deposit funds\r\n   // receive() external payable {}\r\n}\r\n"
			},
			"contracts/modules/Storage.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.30;\r\n\r\n//import \"../interfaces/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\n\r\ncontract Storage is ReentrancyGuard {\r\n    using SafeERC20 for IERC20;\r\n    IERC20 public usdt;\r\n    //address public owner;\r\n    address public creatorWallet;   \r\n    address public systemMaintance;\r\n    address public teamDevelopment;\r\n    uint public defaultRefId;\r\n    uint public totalUsers;\r\n    uint internal constant maxLayers = 15;\r\n\r\n    uint256 public constant PERCENTS_DIVIDER = 10000;\r\n    uint256 public constant TIME_STEP = 1 days;\r\n    uint256 public constant ROI_CAP_MULTIPLIER = 15; // 1.5x\r\n    uint256 public constant ROI_CAP_DIVIDER = 10;\r\n\r\n\r\n \r\n    uint[] public registeredUserIds;\r\n    uint private nonce; // add this at the top of your contract\r\n  \r\n    // Package prices in USDT (with 18 decimals)\r\n\r\n        // --- Community bonus accrual (pull-based) ---\r\n    uint256 public constant ACC_PRECISION = 1e18;\r\n    uint256 public communityAccPerUser;                 // global accumulator\r\n    mapping(uint => uint256) internal communityDebt;      // user snapshot\r\n\r\n    uint[] public packages = [\r\n        15 * 1e18,      // 15$\r\n        25 * 1e18,      // 25$\r\n        50 * 1e18,      // 50$\r\n        100 * 1e18,     // 100$\r\n        200 * 1e18,     // 200$\r\n        400 * 1e18,     // 400$\r\n        800 * 1e18,     // 800$\r\n        1600 * 1e18,    // 1600$\r\n        3200 * 1e18,    // 3200$\r\n        6400 * 1e18,    // 6400$\r\n        12800 * 1e18,   // 12800$\r\n        25600 * 1e18,   // 25600$\r\n        51200 * 1e18,   // 51200$\r\n        102400 * 1e18,  // 102400$\r\n        204800 * 1e18   // 204800$\r\n    ];\r\n\r\n        //  User struct into basic info and relationships\r\n\r\n        /*User main struct and mappings*/\r\n    struct Deposit {\r\n        uint256 amount;\r\n        uint256 withdrawn;\r\n        uint256 start; \r\n        uint8 depositType;  \r\n    }\r\n\r\n    struct User {\r\n        address account;\r\n        Deposit[] deposits;\r\n        uint256 checkpoint;\r\n        uint id;\r\n        uint sponsorId;  // Referrer\r\n        uint uplineId;   // Placement in matrix\r\n        uint level;      // Current package level (1-15)\r\n        uint directTeam; // Direct referrals count\r\n        uint directPoolQualified; // Direct referrals count in infinity pool\r\n        uint totalMatrixTeam; // Total users in matrix\r\n        uint totalDeposit;\r\n        uint poollevel;\r\n        uint poolDeposit;\r\n        uint boosterlevel;\r\n        uint boosterDeposit;\r\n        uint registrationTime;\r\n\r\n    }\r\n     // struct for bonus calc\r\n    struct UserIncome {\r\n        uint totalIncome;\r\n        uint sponsorIncome;\r\n        uint matrixIncome;\r\n        uint levelBoosterIncome;\r\n        uint levelIncome;\r\n        uint royaltyIncome;\r\n        uint royaltyIncomeClaimed; // Track claimed royalty for capping\r\n        uint communityIncome;        // <-- NEW: total community bonus claimed\r\n        uint poolIncome;        // <-- Infinity Pool Income\r\n        uint boosterIncome;        // <-- booster Income\r\n        uint weeklyContestIncome;        // <-- weekly contest Income\r\n        uint monthlyRoyalty;        // <-- weekly contest Income\r\n        uint monthlyTopRoyalty;        // <-- weekly contest Income\r\n    }\r\n\r\n    struct Income {\r\n        uint fromUserId;\r\n        uint amount;\r\n        uint packageLevel;\r\n        uint timestamp;\r\n        uint incomeType; // 1: Sponsor, 2: Matrix, 3: Level, 4: Level Booster, 5: Creator, 6: Royalty , 7 Lottery  , 8 Roi Income, 10 Infintiy Pool, 11 Booster Income,12 weekly contest\r\n    }\r\n\r\n\r\n\r\n    mapping(address => uint) internal addressToId;\r\n    mapping(uint => User) internal users;\r\n    mapping(uint => UserIncome) internal userIncomes; // New mapping for income data\r\n    mapping(uint => Income[]) internal incomeHistory;\r\n    mapping(uint => mapping(uint => uint[])) internal teams; // Matrix team structure by level\r\n    mapping(uint => uint) internal matrixDirect; // Count of direct matrix referrals\r\n    mapping(uint => uint[]) internal directReferrals;\r\n\r\n    event UserJoined(uint8 indexed matrixId, uint32 indexed userId, address indexed user, uint32 parentId, address parentAddr, uint8 position);\r\n    event RewardSent(address indexed to, uint256 amount, string level);\r\n\r\n     // Events\r\n    event Registration(address indexed user, address indexed sponsor, uint indexed userId, uint uplineId);\r\n    event Upgrade(address indexed user, uint indexed userId, uint packageLevel, string depositType);\r\n    event IncomeDistributed(address indexed to, address indexed from, uint amount, uint packageLevel, uint incomeType);\r\n    event LotteryReward(address indexed winner, uint indexed fromUserId, uint amount, uint timestamp);\r\n    event CommunityBonusDistributed(uint amount, uint usersCount, uint perUser);\r\n\r\n  \r\n    // Infinity Pool and booster bonus \r\n\r\n\r\n    uint[] public poolPackages = [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18];\r\n    uint[] public glbBoosterPackages = [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18];\r\n    uint[7] public minLevelForPool = [3, 5, 7, 9, 11, 13, 15];\r\n    uint[8] public minLevelForGlbBooster = [4, 5, 6, 7, 8, 9, 10,11];\r\n    uint[8] public minPoolForGlbBooster = [0, 1, 1, 1, 1, 1, 1,1];\r\n\r\n\r\n    struct UserPool {\r\n        uint id;               \r\n        uint mainid;\r\n        uint poolId;\r\n        uint parentId;  \r\n        uint bonusCount;            \r\n    }\r\n    \r\n    struct UserPoolTopup{\r\n         uint nextPoolAmt;       \r\n        uint reTopupAmt;     \r\n    }\r\n\r\n      // Golbal Booster\r\n    struct UserBooster {\r\n        uint id; \r\n        uint poolId;\r\n        uint parentId;  \r\n        uint bonusCount;\r\n         uint joinTime;            \r\n    }\r\n\r\n    /* mapping for Infinity Pool*/\r\n    mapping(uint =>  mapping(uint => UserPoolTopup)) internal userPooltopup;\r\n\r\n    mapping(uint =>  mapping(uint => UserPool)) internal userPooldtl;\r\n    mapping(uint => mapping(uint => uint[])) internal userChildren;// in each pool id wise\r\n    mapping(uint => mapping(uint => uint[])) internal userIdPerPool;// will store user ids pool wise\r\n    mapping(uint => uint[]) internal poolUsers; // store all users  pool wise\r\n    mapping(uint => mapping(uint => bool)) internal userHasPool; \r\n\r\n    /* mapping for Global Booster */\r\n    mapping(uint =>  mapping(uint => UserBooster)) internal userBoosterdtl;\r\n    mapping(uint =>  mapping(uint => uint[])) internal userBoosterChildren;\r\n    mapping(uint => uint[]) internal boosterUsers;  // store all users booster wise\r\n    mapping(uint => mapping(uint => bool)) internal userHasbooster; \r\n\r\n   \r\n    // weekly contest\r\n\r\n    uint public constant WEEK_DURATION = 7 days;   \r\n    uint public constant WeeklyCapping = 1000e18;\r\n \r\n\r\n    uint public currentWeeklyRound = 0;\r\n    uint public currentWeeklyStartTime = 0;  \r\n    uint public WeeklyTotalReward = 0;\r\n   \r\n\r\n\r\n    struct WeeklyContest {\r\n        uint roundId;    \r\n        uint totalReward;\r\n        uint totalUsers;\r\n        uint perUserReward;\r\n        uint claimedCount;\r\n        uint startTime;\r\n        uint endTime;\r\n        uint carryForward;\r\n        bool closed;\r\n    }\r\n   \r\n    struct weeklyUser{\r\n        uint id;\r\n        uint joinTime;\r\n        uint roundId ;\r\n        uint claimTime;\r\n        bool isClaimed; \r\n        bool isQualified;\r\n    }\r\n    mapping (uint => WeeklyContest) internal weeklyContestdtl;// details of weekly contest\r\n    mapping(uint=> uint[]) weeklyQualifiedUsers; // qualifieduserweekly\r\n    mapping(uint => mapping(uint => weeklyUser)) internal weeklyUserdtl;// details of weekly user))\r\n    mapping(uint => mapping(uint => uint[])) internal weeklyUserDirects;//details users direct in current weekly round\r\n    event WeeklyClosed(uint roundId, uint totalUsers, uint perUserReward, uint totalReward, uint totalDistributed, uint leftoverReward, uint endTime);\r\n    event WeeklyRewardClaim(uint roundId, uint userId, uint perUserReward,  uint claimTime);\r\n    event WeeklyContestQualified(uint roundId, uint userId, uint joinTime);\r\n\r\n    //, monthly royalty and top royalty\r\n\r\n    \r\n    uint public constant MONTH_DURATION = 30 days;\r\n    uint public constant monthlyCapping = 10000e18;\r\n\r\n  \r\n    uint public currentMonthlyRound = 1;\r\n    uint public currentMonthlyStartTime = 0;\r\n    uint public monthlyTotalReward = 0;\r\n\r\n    struct monthlyRoyalty {\r\n        uint roundId;    \r\n        uint totalReward;\r\n        uint totalUsers;\r\n        uint perUserReward;\r\n        uint claimedCount;\r\n        uint startTime;\r\n        uint endTime;\r\n        uint carryForward;\r\n        bool closed;\r\n    }\r\n\r\n    struct monthlyRoyaltyUser{\r\n        uint id;\r\n        uint joinTime;\r\n        uint qualifiedRoundId ;\r\n        uint claimTime;\r\n        mapping(uint => bool) isClaimed; \r\n        bool isQualified;\r\n    }\r\n    mapping (uint => monthlyRoyalty) internal monthlyRoyaltydtl;// details of weekly contest\r\n    uint[] monthlyQualifiedUsers; // qualifieduserweekly\r\n    mapping(uint => monthlyRoyaltyUser) internal monthlyRoyaltyUserdtl;\r\n    mapping(uint => uint[]) internal monthlyUserDirects;//details users direct in monthly Royalty\r\n\r\n    event MonthlyClosed(uint roundId, uint totalUsers, uint perUserReward, uint totalReward, uint totalDistributed, uint leftoverReward, uint endTime);\r\n    event MonthlyRewardClaim(uint roundId, uint userId, uint perUserReward,  uint claimTime);\r\n    event MonthlyContestQualified(uint roundId, uint userId, uint joinTime);\r\n   \r\n    constructor() {\r\n       \r\n    }\r\n      \r\n    \r\n\r\n    function _sendToCreator(uint _amount) internal {\r\n    require(creatorWallet != address(0),\"fee addrs not set\");\r\n    // 100% split to creator\r\n    \r\n    // Send dust to creator (you can pick any bucket)\r\n    usdt.safeTransfer(creatorWallet, _amount);\r\n  \r\n\r\n    // Bookkeeping for the full routed amount\r\n    UserIncome storage creatorIncome = userIncomes[defaultRefId];\r\n    creatorIncome.totalIncome += _amount;\r\n\r\n    incomeHistory[defaultRefId].push(Income({\r\n        fromUserId: 0,\r\n        amount: _amount,\r\n        packageLevel: 0,\r\n        timestamp: block.timestamp,\r\n        incomeType: 5\r\n    }));\r\n}\r\n\r\n\r\nfunction _distributeIncome(uint _userId,uint _fromUserId,uint _amount, uint _packageLevel, uint _incomeType) internal {\r\n    User storage user = users[_userId];\r\n    address userAddress = user.account;\r\n    require(userAddress != address(0), \"Invalid user\");\r\n    require(_amount > 0, \"Zero amount\");\r\n\r\n\r\n    // Transfer tokens\r\n    //usdt.safeTransfer(userAddress, _amount);\r\n   //( userAddress, _amount);\r\n\r\n    UserIncome storage income = userIncomes[_userId];\r\n    income.totalIncome += _amount;\r\n        // --- Update specific income field based on type ---\r\n    if      (_incomeType == 1) income.sponsorIncome += _amount;\r\n    else if (_incomeType == 2) income.matrixIncome += _amount;\r\n    else if (_incomeType == 3) income.levelBoosterIncome += _amount;\r\n    else if (_incomeType == 4) income.levelIncome += _amount;\r\n   // else if (_incomeType == 5) income.royaltyIncome += _amount;\r\n    //else if (_incomeType == 6) income.royaltyIncomeClaimed += _amount;\r\n    else if (_incomeType == 8) income.communityIncome += _amount;\r\n   \r\n    else if (_incomeType == 10) income.poolIncome += _amount;\r\n    else if (_incomeType == 11) income.boosterIncome += _amount;\r\n    else if (_incomeType == 12) income.weeklyContestIncome += _amount;\r\n    else if (_incomeType == 13) income.monthlyRoyalty += _amount;\r\n    else if (_incomeType == 14) income.monthlyTopRoyalty += _amount;\r\n    else revert(\"Unknown income type\");\r\n   \r\n        // --- Update total income ---\r\n    \r\n\r\n    // Record income in user history\r\n    incomeHistory[_userId].push(Income({\r\n        fromUserId: _fromUserId,\r\n        amount: _amount,\r\n        packageLevel: _packageLevel,\r\n        timestamp: block.timestamp,\r\n        incomeType: _incomeType\r\n    }));\r\n    //usdt.transfer(userAddress, _amount);\r\n  \r\n    usdt.safeTransfer(userAddress, _amount);\r\n\r\n    emit IncomeDistributed(userAddress, users[_fromUserId].account, _amount, _packageLevel, _incomeType);\r\n}\r\n\r\nfunction _tryWeeklyContestQualify(uint _userId, uint _roundId)internal {\r\n        if (!weeklyUserdtl[_roundId][_userId].isQualified) {\r\n                _weeklyContestQualifier(_userId, _roundId);\r\n        }\r\n    }\r\n    function _weeklyContestQualifier(uint _userId, uint _roundId)internal {\r\n       \r\n        uint currentRound = currentWeeklyRound;        \r\n        require(_roundId == currentWeeklyRound, \"Invalid round\");\r\n        require(!weeklyContestdtl[_roundId].closed, \"Round closed\");\r\n        UserBooster memory userBoosterJoinDtl = userBoosterdtl[1][_userId];\r\n\r\n        bool hasEnoughDirects = weeklyUserDirects[currentRound][_userId].length >= 5;\r\n        bool boosterEarlyJoin = (\r\n            userBoosterJoinDtl.id == _userId && \r\n            userBoosterJoinDtl.joinTime <= users[_userId].registrationTime + TIME_STEP\r\n        );\r\n        require(hasEnoughDirects || boosterEarlyJoin, \"Not eligible for weekly contest\");\r\n        //require(weeklyUserDirects[currentRound][_userId].length >=5 ||  (userBoosterJoinDtl.id == _userId && userBoosterJoinDtl.joinTime <= users[_userId].registrationTime + TIME_STEP), \"not eligible\"); // (userBoosterJoinDtl.id = _userId && userBoosterJoinDtl.joinTime <= users[_userId].registrationTime)\r\n        \r\n        weeklyUser storage weeklyuserdtl = weeklyUserdtl[currentRound][_userId];\r\n        if (weeklyuserdtl.isQualified) return;\r\n        require(!weeklyuserdtl.isQualified, \"already Qualified\");\r\n\r\n        weeklyuserdtl.id = _userId;\r\n        weeklyuserdtl.joinTime = block.timestamp;\r\n        weeklyuserdtl.roundId = currentRound;\r\n        weeklyuserdtl.isQualified = true;\r\n   \r\n        emit WeeklyContestQualified(currentRound, _userId, block.timestamp);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 100,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200f1e1f57fd7a408f714c9bcbfcfa134ecf359aced058bf4df923caed95d0ddf564736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea26469706673582212200f1e1f57fd7a408f714c9bcbfcfa134ecf359aced058bf4df923caed95d0ddf564736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF 0x1E 0x1F JUMPI REVERT PUSH27 0x408F714C9BCBFCFA134ECF359ACED058BF4DF923CAED95D0DDF564 PUSH20 0x6F6C634300081E00330000000000000000000000 ",
							"sourceMap": "698:9376:5:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "5f80fdfea26469706673582212200f1e1f57fd7a408f714c9bcbfcfa134ecf359aced058bf4df923caed95d0ddf564736f6c634300081e0033",
							"opcodes": "PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF 0x1E 0x1F JUMPI REVERT PUSH27 0x408F714C9BCBFCFA134ECF359ACED058BF4DF923CAED95D0DDF564 PUSH20 0x6F6C634300081E00330000000000000000000000 ",
							"sourceMap": "698:9376:5:-:0;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "11400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "library_deploy_address"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200f1e1f57fd7a408f714c9bcbfcfa134ecf359aced058bf4df923caed95d0ddf564736f6c634300081e0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/modules/ContestRoyalty.sol",
								"contracts/modules/Storage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/modules/ContestRoyalty.sol": {
				"ContestRoyalty": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "usersCount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUser",
									"type": "uint256"
								}
							],
							"name": "CommunityBonusDistributed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "packageLevel",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "incomeType",
									"type": "uint256"
								}
							],
							"name": "IncomeDistributed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "winner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromUserId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "LotteryReward",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalUsers",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUserReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalDistributed",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "leftoverReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								}
							],
							"name": "MonthlyClosed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "joinTime",
									"type": "uint256"
								}
							],
							"name": "MonthlyContestQualified",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUserReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "claimTime",
									"type": "uint256"
								}
							],
							"name": "MonthlyRewardClaim",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sponsor",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "uplineId",
									"type": "uint256"
								}
							],
							"name": "Registration",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "level",
									"type": "string"
								}
							],
							"name": "RewardSent",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "packageLevel",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "depositType",
									"type": "string"
								}
							],
							"name": "Upgrade",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint8",
									"name": "matrixId",
									"type": "uint8"
								},
								{
									"indexed": true,
									"internalType": "uint32",
									"name": "userId",
									"type": "uint32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint32",
									"name": "parentId",
									"type": "uint32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "parentAddr",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "position",
									"type": "uint8"
								}
							],
							"name": "UserJoined",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalUsers",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUserReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalDistributed",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "leftoverReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								}
							],
							"name": "WeeklyClosed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "joinTime",
									"type": "uint256"
								}
							],
							"name": "WeeklyContestQualified",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUserReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "claimTime",
									"type": "uint256"
								}
							],
							"name": "WeeklyRewardClaim",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ACC_PRECISION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MONTH_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERCENTS_DIVIDER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ROI_CAP_DIVIDER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ROI_CAP_MULTIPLIER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TIME_STEP",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WEEK_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WeeklyCapping",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WeeklyTotalReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_userId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_roundId",
									"type": "uint256"
								}
							],
							"name": "canClaimMonthlyReward",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_userId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_roundId",
									"type": "uint256"
								}
							],
							"name": "claimMonthlyContestReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_userId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_roundId",
									"type": "uint256"
								}
							],
							"name": "claimWeeklyContestReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "communityAccPerUser",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "creatorWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentMonthlyRound",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentMonthlyStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentWeeklyRound",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentWeeklyStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "defaultRefId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "glbBoosterPackages",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "minLevelForGlbBooster",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "minLevelForPool",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "minPoolForGlbBooster",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "monthlyCapping",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "monthlyTotalReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "packages",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "poolPackages",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "registeredUserIds",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "systemMaintance",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "teamDevelopment",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalUsers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdt",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore(0x40, 0x80)\n  jumpi(tag_4, callvalue)\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  sstore\n  mload(0x40)\n  0x01e0\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  dup3\n  dup3\n  lt\n  or\n  tag_6\n  jumpi\n  0x40\n  mstore\n    /* \"contracts/modules/Storage.sol\":1324:1333  15 * 1e18 */\n  0xd02ab486cedc0000\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  dup2\n  mstore\n    /* \"contracts/modules/Storage.sol\":1356:1365  25 * 1e18 */\n  0x015af1d78b58c40000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1388:1397  50 * 1e18 */\n  0x02b5e3af16b1880000\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1420:1430  100 * 1e18 */\n  0x056bc75e2d63100000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x60\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1453:1463  200 * 1e18 */\n  0x0ad78ebc5ac6200000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x80\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1486:1496  400 * 1e18 */\n  0x15af1d78b58c400000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xa0\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1519:1529  800 * 1e18 */\n  0x2b5e3af16b18800000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xc0\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1552:1563  1600 * 1e18 */\n  0x56bc75e2d631000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xe0\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1586:1597  3200 * 1e18 */\n  0xad78ebc5ac62000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0100\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1620:1631  6400 * 1e18 */\n  0x015af1d78b58c4000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0120\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1654:1666  12800 * 1e18 */\n  0x02b5e3af16b188000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0140\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1689:1701  25600 * 1e18 */\n  0x056bc75e2d6310000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0160\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1724:1736  51200 * 1e18 */\n  0x0ad78ebc5ac620000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0180\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1759:1772  102400 * 1e18 */\n  0x15af1d78b58c40000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x01a0\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1795:1808  204800 * 1e18 */\n  0x2b5e3af16b1880000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x01c0\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0b\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  sload\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0f\n  0x0b\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  sstore\n  dup1\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0f\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  lt\n  tag_8\n  jumpi\ntag_9:\n  pop\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0b\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  keccak256\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\ntag_10:\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0f\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  dup2\n  lt\n  tag_11\n  jumpi\n  tag_13\n  tag_1\n  jump\t// in\ntag_13:\n    /* \"contracts/modules/Storage.sol\":5058:5063  75e18 */\n  0x0410d586a20a4c0000\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  dup2\n  mstore\n    /* \"contracts/modules/Storage.sol\":5065:5071  300e18 */\n  0x1043561a8829300000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5073:5080  1200e18 */\n  0x410d586a20a4c00000\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5082:5089  4800e18 */\n  0x01043561a88293000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x60\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5091:5099  19200e18 */\n  0x0410d586a20a4c000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x80\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5101:5109  76800e18 */\n  0x1043561a882930000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xa0\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5111:5120  307200e18 */\n  0x410d586a20a4c0000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xc0\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x13\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  sload\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n  0x13\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  sstore\n  dup1\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  lt\n  tag_14\n  jumpi\ntag_15:\n  pop\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x13\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  keccak256\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\ntag_16:\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  dup2\n  lt\n  tag_17\n  jumpi\n  tag_19\n  tag_2\n  jump\t// in\ntag_19:\n    /* \"contracts/modules/Storage.sol\":1420:1430  100 * 1e18 */\n  0x056bc75e2d63100000\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  dup2\n  mstore\n    /* \"contracts/modules/Storage.sol\":1453:1463  200 * 1e18 */\n  0x0ad78ebc5ac6200000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1486:1496  400 * 1e18 */\n  0x15af1d78b58c400000\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1519:1529  800 * 1e18 */\n  0x2b5e3af16b18800000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x60\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1552:1563  1600 * 1e18 */\n  0x56bc75e2d631000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x80\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1586:1597  3200 * 1e18 */\n  0xad78ebc5ac62000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xa0\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1620:1631  6400 * 1e18 */\n  0x015af1d78b58c4000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xc0\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1654:1666  12800 * 1e18 */\n  0x02b5e3af16b188000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xe0\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x14\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  sload\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n  0x14\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  sstore\n  dup1\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  lt\n  tag_20\n  jumpi\ntag_21:\n  pop\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x14\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  keccak256\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\ntag_22:\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  dup2\n  lt\n  tag_23\n  jumpi\n  tag_25\n  tag_1\n  jump\t// in\ntag_25:\n    /* \"contracts/modules/Storage.sol\":5274:5275  3 */\n  0x03\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  dup2\n  mstore\n  0x05\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":5273:5297  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":5273:5297  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5283:5284  9 */\n  0x09\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x60\n    /* \"contracts/modules/Storage.sol\":5273:5297  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0b\n  0x80\n    /* \"contracts/modules/Storage.sol\":5273:5297  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5290:5292  13 */\n  0x0d\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xa0\n    /* \"contracts/modules/Storage.sol\":5273:5297  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0f\n  0xc0\n    /* \"contracts/modules/Storage.sol\":5273:5297  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\ntag_26:\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  dup2\n  lt\n  tag_27\n  jumpi\n  tag_29\n  tag_2\n  jump\t// in\ntag_29:\n    /* \"contracts/modules/Storage.sol\":5344:5345  4 */\n  0x04\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  dup2\n  mstore\n  0x05\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":5343:5368  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5350:5351  6 */\n  0x06\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":5343:5368  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x60\n    /* \"contracts/modules/Storage.sol\":5343:5368  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x80\n    /* \"contracts/modules/Storage.sol\":5343:5368  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5283:5284  9 */\n  0x09\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xa0\n    /* \"contracts/modules/Storage.sol\":5343:5368  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5362:5364  10 */\n  0x0a\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xc0\n    /* \"contracts/modules/Storage.sol\":5343:5368  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0b\n  0xe0\n    /* \"contracts/modules/Storage.sol\":5343:5368  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\ntag_30:\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  dup2\n  lt\n  tag_31\n  jumpi\n  tag_33\n  tag_2\n  jump\t// in\ntag_33:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":5413:5436  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":5413:5436  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x60\n    /* \"contracts/modules/Storage.sol\":5413:5436  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x80\n    /* \"contracts/modules/Storage.sol\":5413:5436  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xa0\n    /* \"contracts/modules/Storage.sol\":5413:5436  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xc0\n    /* \"contracts/modules/Storage.sol\":5413:5436  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xe0\n    /* \"contracts/modules/Storage.sol\":5413:5436  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\ntag_34:\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  dup2\n  lt\n  tag_35\n  jumpi\n    /* \"contracts/modules/ContestRoyalty.sol\":191:206  block.timestamp */\n  timestamp\n    /* \"contracts/modules/Storage.sol\":7011:7012  0 */\n  0x37\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  sstore\n    /* \"contracts/modules/ContestRoyalty.sol\":191:206  block.timestamp */\n  timestamp\n    /* \"contracts/modules/Storage.sol\":8471:8472  0 */\n  0x3e\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":7053:7054  0 */\n  0x38\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":6966:6967  0 */\n  0x36\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":8512:8513  0 */\n  0x3f\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":8425:8426  1 */\n  0x3d\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  sstore\n  mload(0x40)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_35:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  swap1\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  0xff\n  dup5\n  mload\n  and\n  swap4\n  add\n  swap3\n  dup2\n    /* \"contracts/modules/Storage.sol\":5413:5436  [0, 1, 1, 1, 1, 1, 1,1] */\n  0x24\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  add\n  sstore\n  add\n  jump(tag_34)\ntag_31:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  swap1\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  0xff\n  dup5\n  mload\n  and\n  swap4\n  add\n  swap3\n  dup2\n    /* \"contracts/modules/Storage.sol\":5343:5368  [4, 5, 6, 7, 8, 9, 10,11] */\n  0x1c\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  add\n  sstore\n  add\n  jump(tag_30)\ntag_27:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  swap1\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  0xff\n  dup5\n  mload\n  and\n  swap4\n  add\n  swap3\n  dup2\n    /* \"contracts/modules/Storage.sol\":5273:5297  [3, 5, 7, 9, 11, 13, 15] */\n  0x15\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  add\n  sstore\n  add\n  jump(tag_26)\ntag_23:\n  dup2\n  mload\n  sub(shl(0x50, 0x01), 0x01)\n  and\n  dup2\n  dup5\n  add\n  sstore\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  add\n  jump(tag_22)\ntag_20:\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x14\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n  tag_37\n  swap1\n  0xce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ec\n  add\n  0xce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4f4\n  tag_3\n  jump\t// in\ntag_37:\n  dup2\n  jump(tag_21)\ntag_17:\n  dup2\n  mload\n  sub(shl(0x50, 0x01), 0x01)\n  and\n  dup2\n  dup5\n  add\n  sstore\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  add\n  jump(tag_16)\ntag_14:\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x13\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n  tag_38\n  swap1\n  0x66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a090\n  add\n  0x66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a097\n  tag_3\n  jump\t// in\ntag_38:\n  dup2\n  jump(tag_15)\ntag_11:\n  dup2\n  mload\n  sub(shl(0x50, 0x01), 0x01)\n  and\n  dup2\n  dup5\n  add\n  sstore\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  add\n  jump(tag_10)\ntag_8:\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0b\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n  tag_39\n  swap1\n  0x0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9\n  add\n  0x0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01dc8\n  tag_3\n  jump\t// in\ntag_39:\n  0x00\n  jump(tag_9)\ntag_6:\n  shl(0xe0, 0x4e487b71)\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  mstore\n  mstore(0x04, 0x41)\n  0x24\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n  revert\ntag_4:\n  0x00\n  dup1\n  revert\ntag_1:\n  mload(0x40)\n  swap1\n  0xe0\n  dup3\n  add\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  dup4\n  dup3\n  lt\n  or\n  tag_6\n  jumpi\n  0x40\n  mstore\n  jump\t// out\ntag_2:\n  mload(0x40)\n  swap1\n  0x0100\n  dup3\n  add\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  dup4\n  dup3\n  lt\n  or\n  tag_6\n  jumpi\n  0x40\n  mstore\n  jump\t// out\ntag_3:\n  dup2\n  dup2\n  lt\n  tag_45\n  jumpi\n  pop\n  pop\n  jump\t// out\ntag_45:\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_3)\nstop\n\nsub_0: assembly {\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      0x80\n      dup1\n      0x40\n      mstore\n      jumpi(tag_12, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_12:\n      shr(0xe0, calldataload(0x00))\n      swap1\n      dup2\n      0x01c234a8\n      eq\n      tag_14\n      jumpi\n      pop\n      dup1\n      0x16298056\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x2132d204\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x2350268f\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x2a891534\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x2f48ab7d\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x3080b5bc\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x32bc298c\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x32fcd966\n      eq\n      tag_30\n      jumpi\n      dup1\n      0x375b43b4\n      eq\n      tag_32\n      jumpi\n      dup1\n      0x39ab3603\n      eq\n      tag_34\n      jumpi\n      dup1\n      0x4c2215e3\n      eq\n      tag_36\n      jumpi\n      dup1\n      0x58c7d352\n      eq\n      tag_38\n      jumpi\n      dup1\n      0x76f5f700\n      eq\n      tag_40\n      jumpi\n      dup1\n      0x78f6ad6d\n      eq\n      tag_42\n      jumpi\n      dup1\n      0x7cdc65f2\n      eq\n      tag_44\n      jumpi\n      dup1\n      0x7d846e38\n      eq\n      tag_46\n      jumpi\n      dup1\n      0x956a3228\n      eq\n      tag_48\n      jumpi\n      dup1\n      0xa59d17d1\n      eq\n      tag_50\n      jumpi\n      dup1\n      0xae4708dc\n      eq\n      tag_52\n      jumpi\n      dup1\n      0xbff1f9e1\n      eq\n      tag_54\n      jumpi\n      dup1\n      0xc216212a\n      eq\n      tag_56\n      jumpi\n      dup1\n      0xc8df2908\n      eq\n      tag_58\n      jumpi\n      dup1\n      0xc9ed0708\n      eq\n      tag_60\n      jumpi\n      dup1\n      0xca8e9121\n      eq\n      tag_62\n      jumpi\n      dup1\n      0xd0a2fd79\n      eq\n      tag_64\n      jumpi\n      dup1\n      0xe898fc38\n      eq\n      tag_66\n      jumpi\n      dup1\n      0xe9e34a16\n      eq\n      tag_68\n      jumpi\n      dup1\n      0xebe0ff15\n      eq\n      tag_70\n      jumpi\n      dup1\n      0xec597e6f\n      eq\n      tag_72\n      jumpi\n      dup1\n      0xf5d74d93\n      eq\n      tag_74\n      jumpi\n      0xfddc806f\n      eq\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      jumpi(tag_80, callvalue)\n      jumpi(tag_80, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":6974:7012  uint public currentWeeklyStartTime = 0 */\n      0x37\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_80:\n      0x00\n      dup1\n      revert\n    tag_74:\n      jumpi(tag_80, callvalue)\n      jumpi(tag_80, slt(add(not(0x03), calldatasize), 0x00))\n      sload(0x04)\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_72:\n      jumpi(tag_80, callvalue)\n      jumpi(tag_80, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":534:558  uint public defaultRefId */\n      0x05\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_70:\n      jumpi(tag_80, callvalue)\n      jumpi(tag_80, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":6914:6921  1000e18 */\n      0x3635c9adc5dea00000\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      dup2\n      mstore\n      return\n    tag_68:\n      jumpi(tag_80, callvalue)\n      jumpi(tag_80, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"contracts/modules/Storage.sol\":460:490  address public systemMaintance */\n      0x03\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      sload\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_66:\n      jumpi(tag_80, callvalue)\n      jumpi(tag_80, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":8433:8472  uint public currentMonthlyStartTime = 0 */\n      0x3e\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_64:\n      jumpi(tag_80, callvalue)\n      jumpi(tag_80, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      0x08\n        /* \"contracts/modules/Storage.sol\":5304:5368  uint[8] public minLevelForGlbBooster = [4, 5, 6, 7, 8, 9, 10,11] */\n      dup2\n      lt\n      iszero\n      tag_80\n      jumpi\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      0x20\n      swap1\n        /* \"contracts/modules/Storage.sol\":5304:5368  uint[8] public minLevelForGlbBooster = [4, 5, 6, 7, 8, 9, 10,11] */\n      0x1c\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_62:\n      jumpi(tag_80, callvalue)\n      jumpi(tag_80, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":6933:6967  uint public currentWeeklyRound = 0 */\n      0x36\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_60:\n      jumpi(tag_80, callvalue)\n      jumpi(tag_80, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":8391:8426  uint public currentMonthlyRound = 1 */\n      0x3d\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_58:\n      jumpi(tag_80, callvalue)\n      jumpi(tag_80, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":8370:8378  10000e18 */\n      0x021e19e0c9bab2400000\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      dup2\n      mstore\n      return\n    tag_56:\n      jumpi(tag_80, callvalue)\n      jumpi(tag_80, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \"contracts/modules/Storage.sol\":1288:1828  uint[] public packages = [... */\n      0x0b\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      sload\n        /* \"contracts/modules/Storage.sol\":1288:1828  uint[] public packages = [... */\n      dup2\n      lt\n      iszero\n      tag_80\n      jumpi\n      0x0b\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      sload\n      dup2\n      lt\n      iszero\n      tag_126\n      jumpi\n        /* \"contracts/modules/Storage.sol\":1288:1828  uint[] public packages = [... */\n      0x0b\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      0x00\n      mstore\n      0x0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_126:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_54:\n      jumpi(tag_80, callvalue)\n      jumpi(tag_80, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":565:587  uint public totalUsers */\n      0x06\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_52:\n      jumpi(tag_80, callvalue)\n      jumpi(tag_80, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \"contracts/modules/Storage.sol\":5028:5121  uint[] public poolPackages = [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n      0x13\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      sload\n        /* \"contracts/modules/Storage.sol\":5028:5121  uint[] public poolPackages = [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n      dup2\n      lt\n      iszero\n      tag_80\n      jumpi\n      0x13\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      sload\n      dup2\n      lt\n      iszero\n      tag_126\n      jumpi\n        /* \"contracts/modules/Storage.sol\":5028:5121  uint[] public poolPackages = [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n      0x13\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      0x00\n      mstore\n      0x66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a090\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_50:\n      jumpi(tag_80, callvalue)\n      jumpi(tag_80, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":8479:8513  uint public monthlyTotalReward = 0 */\n      0x3f\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_48:\n      jumpi(tag_80, callvalue)\n      jumpi(tag_80, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      0x08\n        /* \"contracts/modules/Storage.sol\":5375:5436  uint[8] public minPoolForGlbBooster = [0, 1, 1, 1, 1, 1, 1,1] */\n      dup2\n      lt\n      iszero\n      tag_80\n      jumpi\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      0x20\n      swap1\n        /* \"contracts/modules/Storage.sol\":5375:5436  uint[8] public minPoolForGlbBooster = [0, 1, 1, 1, 1, 1, 1,1] */\n      0x24\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_46:\n      jumpi(tag_80, callvalue)\n      0x20\n      tag_152\n      tag_153\n      calldatasize\n      tag_1\n      jump\t// in\n    tag_153:\n      swap1\n      tag_8\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_44:\n      jumpi(tag_80, callvalue)\n      jumpi(tag_80, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"contracts/modules/Storage.sol\":422:450  address public creatorWallet */\n      0x02\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      sload\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_42:\n      jumpi(tag_80, callvalue)\n      jumpi(tag_80, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":1131:1165  uint256 public communityAccPerUser */\n      0x09\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_40:\n      jumpi(tag_80, callvalue)\n      jumpi(tag_80, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":6861:6867  7 days */\n      0x093a80\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      dup2\n      mstore\n      return\n    tag_38:\n      jumpi(tag_80, callvalue)\n      jumpi(tag_80, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":848:850  10 */\n      0x0a\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      dup2\n      mstore\n      return\n    tag_36:\n      jumpi(tag_80, callvalue)\n      tag_172\n      calldatasize\n      tag_1\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      swap1\n      tag_173\n      tag_9\n      jump\t// in\n    tag_173:\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      dup1\n      0x00\n      mstore\n        /* \"contracts/modules/ContestRoyalty.sol\":3335:3340  users */\n      0x0d\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      0x20\n      mstore\n        /* \"contracts/modules/ContestRoyalty.sol\":3406:3460  require(userAddress == msg.sender, \"Not your account\") */\n      tag_174\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      sload(keccak256(0x00, 0x40))\n      and\n        /* \"contracts/modules/ContestRoyalty.sol\":3429:3439  msg.sender */\n      caller\n        /* \"contracts/modules/ContestRoyalty.sol\":3414:3439  userAddress == msg.sender */\n      eq\n        /* \"contracts/modules/ContestRoyalty.sol\":3406:3460  require(userAddress == msg.sender, \"Not your account\") */\n      tag_2\n      jump\t// in\n    tag_174:\n        /* \"contracts/modules/ContestRoyalty.sol\":3479:3490  _userId > 0 */\n      dup1\n      iszero\n      iszero\n        /* \"contracts/modules/ContestRoyalty.sol\":3479:3506  _userId > 0 && _roundId > 0 */\n      dup1\n      tag_175\n      jumpi\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n    tag_176:\n        /* \"contracts/modules/ContestRoyalty.sol\":3479:3552  _userId > 0 && _roundId > 0 && monthlyRoyaltydtl[_roundId].closed == true */\n      dup1\n      tag_177\n      jumpi\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n    tag_178:\n        /* \"contracts/modules/ContestRoyalty.sol\":3479:3586  _userId > 0 && _roundId > 0 && monthlyRoyaltydtl[_roundId].closed == true && _roundId < currentMonthlyRound */\n      dup1\n      tag_179\n      jumpi\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n    tag_180:\n        /* \"contracts/modules/ContestRoyalty.sol\":3471:3639  require(_userId > 0 && _roundId > 0 && monthlyRoyaltydtl[_roundId].closed == true && _roundId < currentMonthlyRound, \"Invalid userId or roundId or round or not closed\") */\n      tag_181\n      swap1\n      tag_3\n      jump\t// in\n    tag_181:\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      dup1\n      0x00\n      mstore\n        /* \"contracts/modules/ContestRoyalty.sol\":3692:3713  monthlyRoyaltyUserdtl */\n      0x42\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      swap1\n      dup3\n      0x00\n      mstore\n      mstore(0x20, 0x40)\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/ContestRoyalty.sol\":3826:3849  userRoyalty.isQualified */\n      swap2\n        /* \"contracts/modules/ContestRoyalty.sol\":3853:3857  true */\n      0x01\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      0xff\n        /* \"contracts/modules/ContestRoyalty.sol\":3826:3849  userRoyalty.isQualified */\n      0x05\n      dup4\n      add\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      sload\n      and\n      iszero\n      iszero\n        /* \"contracts/modules/ContestRoyalty.sol\":3826:3857  userRoyalty.isQualified == true */\n      sub\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      tag_182\n      jumpi\n      0x04\n        /* \"contracts/modules/ContestRoyalty.sol\":3896:3917  userRoyalty.isClaimed */\n      dup2\n      add\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      dup5\n      0x00\n      mstore\n      dup1\n      0x20\n      mstore\n      jumpi(tag_184, and(sload(keccak256(0x00, 0x40)), 0xff))\n        /* \"contracts/modules/ContestRoyalty.sol\":3981:4014  currentMonthRoyalty.perUserReward */\n      0x03\n      dup5\n      add\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      sload\n        /* \"contracts/modules/ContestRoyalty.sol\":3981:4018  currentMonthRoyalty.perUserReward > 0 */\n      swap4\n      dup5\n      iszero\n      swap3\n        /* \"contracts/modules/ContestRoyalty.sol\":3973:4041  require(currentMonthRoyalty.perUserReward > 0, \"No reward to claim\") */\n      tag_186\n        /* \"contracts/modules/ContestRoyalty.sol\":3981:4018  currentMonthRoyalty.perUserReward > 0 */\n      dup5\n      iszero\n        /* \"contracts/modules/ContestRoyalty.sol\":3973:4041  require(currentMonthRoyalty.perUserReward > 0, \"No reward to claim\") */\n      tag_4\n      jump\t// in\n    tag_186:\n        /* \"contracts/modules/ContestRoyalty.sol\":4060:4092  currentMonthRoyalty.claimedCount */\n      dup7\n        /* \"contracts/modules/ContestRoyalty.sol\":4095:4125  currentMonthRoyalty.totalUsers */\n      0x02\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      0x04\n        /* \"contracts/modules/ContestRoyalty.sol\":4060:4092  currentMonthRoyalty.claimedCount */\n      dup5\n      add\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      swap3\n        /* \"contracts/modules/ContestRoyalty.sol\":4052:4147  require(currentMonthRoyalty.claimedCount < currentMonthRoyalty.totalUsers, \"All users claimed\") */\n      tag_187\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      dup3\n      dup6\n      sload\n        /* \"contracts/modules/ContestRoyalty.sol\":4095:4125  currentMonthRoyalty.totalUsers */\n      swap7\n      add\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      sload\n        /* \"contracts/modules/ContestRoyalty.sol\":4060:4125  currentMonthRoyalty.claimedCount < currentMonthRoyalty.totalUsers */\n      dup7\n      lt\n        /* \"contracts/modules/ContestRoyalty.sol\":4052:4147  require(currentMonthRoyalty.claimedCount < currentMonthRoyalty.totalUsers, \"All users claimed\") */\n      tag_5\n      jump\t// in\n    tag_187:\n        /* \"contracts/modules/ContestRoyalty.sol\":4166:4194  userRoyalty.qualifiedRoundId */\n      add\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      sload\n        /* \"contracts/modules/ContestRoyalty.sol\":4166:4206  userRoyalty.qualifiedRoundId <= _roundId */\n      gt\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      tag_188\n      jumpi\n        /* \"contracts/modules/ContestRoyalty.sol\":3853:3857  true */\n      0x01\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_190\n      jumpi\n      sstore\n      0x00\n      dup6\n      dup2\n      mstore\n      0x20\n      swap2\n      dup3\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/modules/ContestRoyalty.sol\":3853:3857  true */\n      0x01\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      or\n      swap1\n      sstore\n      dup5\n      dup3\n      mstore\n        /* \"contracts/modules/ContestRoyalty.sol\":3335:3340  users */\n      0x0d\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      swap1\n      swap3\n      mstore\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/modules/Storage.sol\":10546:10571  userAddress != address(0) */\n      dup2\n      iszero\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      tag_192\n      jumpi\n      tag_194\n      jumpi\n      dup2\n      0x00\n      mstore\n        /* \"contracts/modules/Storage.sol\":10774:10785  userIncomes */\n      0x0e\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      0x20\n      mstore\n        /* \"contracts/modules/Storage.sol\":11462:11464  11 */\n      0x0b\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/Storage.sol\":10801:10830  income.totalIncome += _amount */\n      tag_196\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      dup6\n      dup3\n      sload\n        /* \"contracts/modules/Storage.sol\":10801:10830  income.totalIncome += _amount */\n      tag_6\n      jump\t// in\n    tag_196:\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      dup2\n      sstore\n        /* \"contracts/modules/Storage.sol\":11604:11625  income.monthlyRoyalty */\n      add\n        /* \"contracts/modules/Storage.sol\":11604:11636  income.monthlyRoyalty += _amount */\n      tag_197\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      dup5\n      dup3\n      sload\n        /* \"contracts/modules/Storage.sol\":11604:11636  income.monthlyRoyalty += _amount */\n      tag_6\n      jump\t// in\n    tag_197:\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      swap1\n      sstore\n      dup2\n      0x00\n      mstore\n        /* \"contracts/modules/Storage.sol\":11845:11858  incomeHistory */\n      0x0f\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      mload(0x40)\n      swap1\n      tag_198\n      dup3\n      tag_10\n      jump\t// in\n    tag_198:\n      dup4\n      dup3\n      mstore\n      0x20\n        /* \"contracts/modules/Storage.sol\":11873:12057  Income({... */\n      dup3\n      add\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      dup6\n      dup2\n      mstore\n      0x40\n        /* \"contracts/modules/Storage.sol\":11873:12057  Income({... */\n      dup4\n      add\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      0x00\n      dup2\n      mstore\n        /* \"contracts/modules/Storage.sol\":11873:12057  Income({... */\n      0x60\n      dup5\n      add\n        /* \"contracts/modules/Storage.sol\":12000:12015  block.timestamp */\n      swap1\n      timestamp\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      dup3\n      mstore\n        /* \"contracts/modules/Storage.sol\":11873:12057  Income({... */\n      0x80\n      dup6\n      add\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      swap3\n        /* \"contracts/modules/ContestRoyalty.sol\":3335:3340  users */\n      0x0d\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      dup5\n      mstore\n      dup5\n      sload\n      shl(0x40, 0x01)\n      dup2\n      lt\n      iszero\n      tag_199\n      jumpi\n        /* \"contracts/modules/ContestRoyalty.sol\":3853:3857  true */\n      0x01\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      dup2\n      add\n      dup1\n      dup8\n      sstore\n      dup2\n      lt\n      iszero\n      tag_126\n      jumpi\n      0x04\n      swap6\n      0x00\n      mstore\n        /* \"contracts/modules/ContestRoyalty.sol\":3826:3849  userRoyalty.isQualified */\n      0x05\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      keccak256(0x00, 0x20)\n      swap2\n      mul\n      add\n      swap6\n      mload\n      dup7\n      sstore\n      mload\n        /* \"contracts/modules/ContestRoyalty.sol\":3853:3857  true */\n      0x01\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      dup7\n      add\n      sstore\n      mload\n        /* \"contracts/modules/ContestRoyalty.sol\":4095:4125  currentMonthRoyalty.totalUsers */\n      0x02\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      dup6\n      add\n      sstore\n      mload\n        /* \"contracts/modules/ContestRoyalty.sol\":3981:4014  currentMonthRoyalty.perUserReward */\n      0x03\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      dup5\n      add\n      sstore\n      mload\n      swap2\n      add\n      sstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n        /* \"contracts/modules/ContestRoyalty.sol\":3853:3857  true */\n      0x01\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      sload\n      and\n      0x20\n      0x00\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      dup3\n      dup2\n      add\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      swap1\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      dup3\n      mstore\n      dup6\n      0x24\n      dup3\n      add\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      mstore\n      dup8\n      0x44\n      dup3\n      add\n      mstore\n      0x44\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      dup2\n      mstore\n      tag_203\n      0x64\n      dup3\n      tag_11\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8507:8928  assembly (\"memory-safe\") {... */\n      mload\n      swap1\n      dup3\n      dup6\n      gas\n      call\n      iszero\n      tag_204\n      jumpi\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8507:8928  assembly (\"memory-safe\") {... */\n      mload\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      tag_206\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      pop\n      dup1\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      tag_209\n      jumpi\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      pop\n        /* \"contracts/modules/ContestRoyalty.sol\":4494:4557  MonthlyRewardClaim(_roundId, _userId, amount,  block.timestamp) */\n      0x8211032682f8fd8be8ff252e0a106cdb6ad4b10427152b4d93c2bc9a1f11c3c2\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      swap4\n        /* \"contracts/modules/ContestRoyalty.sol\":4494:4557  MonthlyRewardClaim(_roundId, _userId, amount,  block.timestamp) */\n      tag_211\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      swap2\n      dup4\n      0x00\n      mstore\n        /* \"contracts/modules/ContestRoyalty.sol\":3335:3340  users */\n      0x0d\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      0x20\n      mstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      sload(keccak256(0x00, 0x40))\n      and\n      swap1\n        /* \"contracts/modules/Storage.sol\":12166:12261  IncomeDistributed(userAddress, users[_fromUserId].account, _amount, _packageLevel, _incomeType) */\n      0xe17b61d324ce17328f433d0ab62581c0f0aa997312bae80fbdfcd2aa9b91d6e3\n        /* \"contracts/modules/Storage.sol\":11873:12057  Income({... */\n      0x60\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      mload(0x40)\n      dup9\n      dup2\n      mstore\n      0x00\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/modules/ContestRoyalty.sol\":3335:3340  users */\n      0x0d\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      0x40\n      dup3\n      add\n      mstore\n        /* \"contracts/modules/Storage.sol\":12166:12261  IncomeDistributed(userAddress, users[_fromUserId].account, _amount, _packageLevel, _incomeType) */\n      log3\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":12000:12015  block.timestamp */\n      swap4\n      dup5\n      swap4\n      timestamp\n        /* \"contracts/modules/ContestRoyalty.sol\":4494:4557  MonthlyRewardClaim(_roundId, _userId, amount,  block.timestamp) */\n      swap3\n      dup6\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      swap1\n      swap5\n      swap4\n      swap3\n      0x60\n      swap3\n      0x80\n      dup4\n      add\n      swap7\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      mstore\n      0x40\n      dup3\n      add\n      mstore\n      add\n      mstore\n      jump\n        /* \"contracts/modules/ContestRoyalty.sol\":4494:4557  MonthlyRewardClaim(_roundId, _userId, amount,  block.timestamp) */\n    tag_211:\n      sub\n      swap1\n      log1\n        /* \"contracts/modules/ContestRoyalty.sol\":3853:3857  true */\n      0x01\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      0x00\n      sstore\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      shl(0xe0, 0x5274afe7)\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mstore\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      0x04\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x24\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_206:\n        /* \"contracts/modules/ContestRoyalty.sol\":3853:3857  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_208)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8507:8928  assembly (\"memory-safe\") {... */\n    tag_204:\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8507:8928  assembly (\"memory-safe\") {... */\n      mload\n      returndatasize\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8507:8928  assembly (\"memory-safe\") {... */\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n    tag_199:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_194:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0b\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xaa, 0x16995c9bc8185b5bdd5b9d)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_192:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa1, 0x24b73b30b634b2103ab9b2b9)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_190:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x11)\n      revert(0x00, 0x24)\n    tag_188:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x15\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x58, 0x4e6f7420656c696769626c6520746f20636c61696d)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_184:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1e\n      0x24\n      dup3\n      add\n      mstore\n      0x416c726561647920636c61696d656420666f72207468697320726f756e640000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_182:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0e\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x95, 0x02737ba1038bab0b634b334b2b21)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"contracts/modules/ContestRoyalty.sol\":3479:3586  _userId > 0 && _roundId > 0 && monthlyRoyaltydtl[_roundId].closed == true && _roundId < currentMonthlyRound */\n    tag_179:\n      pop\n        /* \"contracts/modules/ContestRoyalty.sol\":3567:3586  currentMonthlyRound */\n      0x3d\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      sload\n        /* \"contracts/modules/ContestRoyalty.sol\":3556:3586  _roundId < currentMonthlyRound */\n      dup3\n      lt\n        /* \"contracts/modules/ContestRoyalty.sol\":3479:3586  _userId > 0 && _roundId > 0 && monthlyRoyaltydtl[_roundId].closed == true && _roundId < currentMonthlyRound */\n      jump(tag_180)\n        /* \"contracts/modules/ContestRoyalty.sol\":3479:3552  _userId > 0 && _roundId > 0 && monthlyRoyaltydtl[_roundId].closed == true */\n    tag_177:\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      pop\n      dup2\n      0x00\n      mstore\n      mstore(0x20, 0x40)\n        /* \"contracts/modules/ContestRoyalty.sol\":3548:3552  true */\n      0x01\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      0xff\n        /* \"contracts/modules/ContestRoyalty.sol\":3510:3544  monthlyRoyaltydtl[_roundId].closed */\n      0x08\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/ContestRoyalty.sol\":3510:3544  monthlyRoyaltydtl[_roundId].closed */\n      add\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      sload\n      and\n      iszero\n      iszero\n        /* \"contracts/modules/ContestRoyalty.sol\":3510:3552  monthlyRoyaltydtl[_roundId].closed == true */\n      eq\n        /* \"contracts/modules/ContestRoyalty.sol\":3479:3552  _userId > 0 && _roundId > 0 && monthlyRoyaltydtl[_roundId].closed == true */\n      jump(tag_178)\n        /* \"contracts/modules/ContestRoyalty.sol\":3479:3506  _userId > 0 && _roundId > 0 */\n    tag_175:\n        /* \"contracts/modules/ContestRoyalty.sol\":3494:3506  _roundId > 0 */\n      pop\n      dup2\n      iszero\n      iszero\n        /* \"contracts/modules/ContestRoyalty.sol\":3479:3506  _userId > 0 && _roundId > 0 */\n      jump(tag_176)\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n    tag_34:\n      jumpi(tag_80, callvalue)\n      jumpi(tag_80, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \"contracts/modules/Storage.sol\":864:895  uint[] public registeredUserIds */\n      0x07\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      sload\n        /* \"contracts/modules/Storage.sol\":864:895  uint[] public registeredUserIds */\n      dup2\n      lt\n      iszero\n      tag_80\n      jumpi\n      0x07\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      sload\n      dup2\n      lt\n      iszero\n      tag_126\n      jumpi\n        /* \"contracts/modules/Storage.sol\":864:895  uint[] public registeredUserIds */\n      0x07\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      0x00\n      mstore\n      0xa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_32:\n      jumpi(tag_80, callvalue)\n      jumpi(tag_80, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":789:791  15 */\n      0x0f\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      dup2\n      mstore\n      return\n    tag_30:\n      jumpi(tag_80, callvalue)\n      jumpi(tag_80, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":1120:1124  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      dup2\n      mstore\n      return\n    tag_28:\n      jumpi(tag_80, callvalue)\n      jumpi(tag_80, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":731:737  1 days */\n      0x015180\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      dup2\n      mstore\n      return\n    tag_26:\n      jumpi(tag_80, callvalue)\n      jumpi(tag_80, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":7021:7054  uint public WeeklyTotalReward = 0 */\n      0x38\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_24:\n      jumpi(tag_80, callvalue)\n      jumpi(tag_80, slt(add(not(0x03), calldatasize), 0x00))\n      sload(0x01)\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_22:\n      jumpi(tag_80, callvalue)\n      jumpi(tag_80, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":8318:8325  30 days */\n      0x278d00\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      dup2\n      mstore\n      return\n    tag_20:\n      jumpi(tag_80, callvalue)\n      jumpi(tag_80, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \"contracts/modules/Storage.sol\":5128:5233  uint[] public glbBoosterPackages = [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n      0x14\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      sload\n        /* \"contracts/modules/Storage.sol\":5128:5233  uint[] public glbBoosterPackages = [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n      dup2\n      lt\n      iszero\n      tag_80\n      jumpi\n      0x14\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      sload\n      dup2\n      lt\n      iszero\n      tag_126\n      jumpi\n        /* \"contracts/modules/Storage.sol\":5128:5233  uint[] public glbBoosterPackages = [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n      0x14\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      0x00\n      mstore\n      0xce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ec\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_18:\n      jumpi(tag_80, callvalue)\n      jumpi(tag_80, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      0x07\n        /* \"contracts/modules/Storage.sol\":5240:5297  uint[7] public minLevelForPool = [3, 5, 7, 9, 11, 13, 15] */\n      dup2\n      lt\n      iszero\n      tag_80\n      jumpi\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      0x20\n      swap1\n        /* \"contracts/modules/Storage.sol\":5240:5297  uint[7] public minLevelForPool = [3, 5, 7, 9, 11, 13, 15] */\n      0x15\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_16:\n      jumpi(tag_80, callvalue)\n      tag_260\n      calldatasize\n      tag_1\n      jump\t// in\n    tag_260:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      swap1\n      tag_261\n      tag_9\n      jump\t// in\n    tag_261:\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      dup1\n      0x00\n      mstore\n        /* \"contracts/modules/ContestRoyalty.sol\":6924:6929  users */\n      0x0d\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      0x20\n      mstore\n        /* \"contracts/modules/ContestRoyalty.sol\":6995:7049  require(userAddress == msg.sender, \"Not your account\") */\n      tag_262\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      sload(keccak256(0x00, 0x40))\n      and\n        /* \"contracts/modules/ContestRoyalty.sol\":7018:7028  msg.sender */\n      caller\n        /* \"contracts/modules/ContestRoyalty.sol\":7003:7028  userAddress == msg.sender */\n      eq\n        /* \"contracts/modules/ContestRoyalty.sol\":6995:7049  require(userAddress == msg.sender, \"Not your account\") */\n      tag_2\n      jump\t// in\n    tag_262:\n        /* \"contracts/modules/ContestRoyalty.sol\":7068:7079  _userId > 0 */\n      dup1\n      iszero\n      iszero\n        /* \"contracts/modules/ContestRoyalty.sol\":7068:7095  _userId > 0 && _roundId > 0 */\n      dup1\n      tag_263\n      jumpi\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n    tag_264:\n        /* \"contracts/modules/ContestRoyalty.sol\":7068:7140  _userId > 0 && _roundId > 0 && weeklyContestdtl[_roundId].closed == true */\n      dup1\n      tag_265\n      jumpi\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n    tag_266:\n        /* \"contracts/modules/ContestRoyalty.sol\":7068:7173  _userId > 0 && _roundId > 0 && weeklyContestdtl[_roundId].closed == true && _roundId < currentWeeklyRound */\n      dup1\n      tag_267\n      jumpi\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n    tag_268:\n        /* \"contracts/modules/ContestRoyalty.sol\":7060:7226  require(_userId > 0 && _roundId > 0 && weeklyContestdtl[_roundId].closed == true && _roundId < currentWeeklyRound, \"Invalid userId or roundId or round or not closed\") */\n      tag_269\n      swap1\n      tag_3\n      jump\t// in\n    tag_269:\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      dup2\n      0x00\n      mstore\n        /* \"contracts/modules/ContestRoyalty.sol\":7272:7285  weeklyUserdtl */\n      0x3b\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      0x00\n      mstore\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      swap1\n      dup3\n      0x00\n      mstore\n        /* \"contracts/modules/ContestRoyalty.sol\":7357:7373  weeklyContestdtl */\n      0x39\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      0x20\n      mstore\n      0x04\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/ContestRoyalty.sol\":7402:7427  weeklyuserdtl.isQualified */\n      swap3\n      add\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      swap2\n      dup3\n      sload\n        /* \"contracts/modules/ContestRoyalty.sol\":7431:7435  true */\n      0x01\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      0xff\n      dup3\n      0x08\n      shr\n      and\n      iszero\n      iszero\n        /* \"contracts/modules/ContestRoyalty.sol\":7402:7435  weeklyuserdtl.isQualified == true */\n      eq\n        /* \"contracts/modules/ContestRoyalty.sol\":7402:7471  weeklyuserdtl.isQualified == true && weeklyuserdtl.isClaimed == false */\n      swap1\n      dup2\n      tag_270\n      jumpi\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n    tag_271:\n      pop\n      iszero\n      tag_272\n      jumpi\n        /* \"contracts/modules/ContestRoyalty.sol\":7527:7558  curentWeekContest.perUserReward */\n      0x03\n      dup2\n      add\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      sload\n        /* \"contracts/modules/ContestRoyalty.sol\":7527:7562  curentWeekContest.perUserReward > 0 */\n      swap3\n      dup4\n      iszero\n      swap2\n        /* \"contracts/modules/ContestRoyalty.sol\":7519:7585  require(curentWeekContest.perUserReward > 0, \"No reward to claim\") */\n      tag_274\n        /* \"contracts/modules/ContestRoyalty.sol\":7527:7562  curentWeekContest.perUserReward > 0 */\n      dup4\n      iszero\n        /* \"contracts/modules/ContestRoyalty.sol\":7519:7585  require(curentWeekContest.perUserReward > 0, \"No reward to claim\") */\n      tag_4\n      jump\t// in\n    tag_274:\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      0x04\n        /* \"contracts/modules/ContestRoyalty.sol\":7604:7634  curentWeekContest.claimedCount */\n      dup2\n      add\n        /* \"contracts/modules/ContestRoyalty.sol\":7596:7687  require(curentWeekContest.claimedCount < curentWeekContest.totalUsers, \"All users claimed\") */\n      tag_275\n        /* \"contracts/modules/ContestRoyalty.sol\":7637:7665  curentWeekContest.totalUsers */\n      0x02\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      dup3\n      sload\n        /* \"contracts/modules/ContestRoyalty.sol\":7637:7665  curentWeekContest.totalUsers */\n      swap4\n      add\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      sload\n        /* \"contracts/modules/ContestRoyalty.sol\":7604:7665  curentWeekContest.claimedCount < curentWeekContest.totalUsers */\n      dup4\n      lt\n        /* \"contracts/modules/ContestRoyalty.sol\":7596:7687  require(curentWeekContest.claimedCount < curentWeekContest.totalUsers, \"All users claimed\") */\n      tag_5\n      jump\t// in\n    tag_275:\n        /* \"contracts/modules/ContestRoyalty.sol\":7431:7435  true */\n      0x01\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_190\n      jumpi\n      sstore\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/modules/ContestRoyalty.sol\":7431:7435  true */\n      0x01\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      or\n      swap1\n      sstore\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/modules/ContestRoyalty.sol\":6924:6929  users */\n      0x0d\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/modules/Storage.sol\":10546:10571  userAddress != address(0) */\n      dup2\n      iszero\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      tag_192\n      jumpi\n      tag_194\n      jumpi\n      dup2\n      0x00\n      mstore\n        /* \"contracts/modules/Storage.sol\":10774:10785  userIncomes */\n      0x0e\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      0x20\n      mstore\n        /* \"contracts/modules/Storage.sol\":11399:11401  10 */\n      0x0a\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/Storage.sol\":10801:10830  income.totalIncome += _amount */\n      tag_282\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      dup6\n      dup3\n      sload\n        /* \"contracts/modules/Storage.sol\":10801:10830  income.totalIncome += _amount */\n      tag_6\n      jump\t// in\n    tag_282:\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      dup2\n      sstore\n        /* \"contracts/modules/Storage.sol\":11532:11558  income.weeklyContestIncome */\n      add\n        /* \"contracts/modules/Storage.sol\":11532:11569  income.weeklyContestIncome += _amount */\n      tag_283\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      dup5\n      dup3\n      sload\n        /* \"contracts/modules/Storage.sol\":11532:11569  income.weeklyContestIncome += _amount */\n      tag_6\n      jump\t// in\n    tag_283:\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      swap1\n      sstore\n      dup2\n      0x00\n      mstore\n        /* \"contracts/modules/Storage.sol\":11845:11858  incomeHistory */\n      0x0f\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      mload(0x40)\n      swap1\n      tag_284\n      dup3\n      tag_10\n      jump\t// in\n    tag_284:\n      dup4\n      dup3\n      mstore\n      0x20\n        /* \"contracts/modules/Storage.sol\":11873:12057  Income({... */\n      dup3\n      add\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      dup6\n      dup2\n      mstore\n      0x40\n        /* \"contracts/modules/Storage.sol\":11873:12057  Income({... */\n      dup4\n      add\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      0x00\n      dup2\n      mstore\n        /* \"contracts/modules/Storage.sol\":11873:12057  Income({... */\n      0x60\n      dup5\n      add\n        /* \"contracts/modules/Storage.sol\":12000:12015  block.timestamp */\n      swap1\n      timestamp\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      dup3\n      mstore\n        /* \"contracts/modules/Storage.sol\":11873:12057  Income({... */\n      0x80\n      dup6\n      add\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      swap3\n        /* \"contracts/modules/ContestRoyalty.sol\":7904:7906  12 */\n      0x0c\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      dup5\n      mstore\n      dup5\n      sload\n      shl(0x40, 0x01)\n      dup2\n      lt\n      iszero\n      tag_199\n      jumpi\n        /* \"contracts/modules/ContestRoyalty.sol\":7431:7435  true */\n      0x01\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      dup2\n      add\n      dup1\n      dup8\n      sstore\n      dup2\n      lt\n      iszero\n      tag_126\n      jumpi\n      0x04\n      swap6\n      0x00\n      mstore\n      0x05\n      keccak256(0x00, 0x20)\n      swap2\n      mul\n      add\n      swap6\n      mload\n      dup7\n      sstore\n      mload\n        /* \"contracts/modules/ContestRoyalty.sol\":7431:7435  true */\n      0x01\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      dup7\n      add\n      sstore\n      mload\n        /* \"contracts/modules/ContestRoyalty.sol\":7637:7665  curentWeekContest.totalUsers */\n      0x02\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      dup6\n      add\n      sstore\n      mload\n        /* \"contracts/modules/ContestRoyalty.sol\":7527:7558  curentWeekContest.perUserReward */\n      0x03\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      dup5\n      add\n      sstore\n      mload\n      swap2\n      add\n      sstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n        /* \"contracts/modules/ContestRoyalty.sol\":7431:7435  true */\n      0x01\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      sload\n      and\n      0x20\n      0x00\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      dup3\n      dup2\n      add\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      swap1\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      dup3\n      mstore\n      dup6\n      0x24\n      dup3\n      add\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      mstore\n      dup8\n      0x44\n      dup3\n      add\n      mstore\n      0x44\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      dup2\n      mstore\n      tag_289\n      0x64\n      dup3\n      tag_11\n      jump\t// in\n    tag_289:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8507:8928  assembly (\"memory-safe\") {... */\n      mload\n      swap1\n      dup3\n      dup6\n      gas\n      call\n      iszero\n      tag_204\n      jumpi\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8507:8928  assembly (\"memory-safe\") {... */\n      mload\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      tag_292\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      pop\n      dup1\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_294:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      tag_209\n      jumpi\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      pop\n        /* \"contracts/modules/ContestRoyalty.sol\":7939:8001  WeeklyRewardClaim(_roundId, _userId, amount,  block.timestamp) */\n      0x96ee4f374d0394c5383b347dc3b7ec04a1eceddcd2e25521157bce21c42b24d5\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      swap4\n        /* \"contracts/modules/ContestRoyalty.sol\":7939:8001  WeeklyRewardClaim(_roundId, _userId, amount,  block.timestamp) */\n      tag_211\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      swap2\n      dup4\n      0x00\n      mstore\n        /* \"contracts/modules/ContestRoyalty.sol\":6924:6929  users */\n      0x0d\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      0x20\n      mstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      sload(keccak256(0x00, 0x40))\n      and\n      swap1\n        /* \"contracts/modules/Storage.sol\":12166:12261  IncomeDistributed(userAddress, users[_fromUserId].account, _amount, _packageLevel, _incomeType) */\n      0xe17b61d324ce17328f433d0ab62581c0f0aa997312bae80fbdfcd2aa9b91d6e3\n        /* \"contracts/modules/Storage.sol\":11873:12057  Income({... */\n      0x60\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      mload(0x40)\n      dup9\n      dup2\n      mstore\n      0x00\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/modules/ContestRoyalty.sol\":7904:7906  12 */\n      0x0c\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      0x40\n      dup3\n      add\n      mstore\n        /* \"contracts/modules/Storage.sol\":12166:12261  IncomeDistributed(userAddress, users[_fromUserId].account, _amount, _packageLevel, _incomeType) */\n      log3\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":12000:12015  block.timestamp */\n      swap4\n      dup5\n      swap4\n      timestamp\n        /* \"contracts/modules/ContestRoyalty.sol\":7939:8001  WeeklyRewardClaim(_roundId, _userId, amount,  block.timestamp) */\n      swap3\n      dup6\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      swap1\n      swap5\n      swap4\n      swap3\n      0x60\n      swap3\n      0x80\n      dup4\n      add\n      swap7\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      mstore\n      0x40\n      dup3\n      add\n      mstore\n      add\n      mstore\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_292:\n        /* \"contracts/modules/ContestRoyalty.sol\":7431:7435  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_294)\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n    tag_272:\n      0x64\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x20\n      0x24\n      dup3\n      add\n      mstore\n      0x4e6f74207175616c6966696564206f7220616c726561647920636c61696d6564\n      0x44\n      dup3\n      add\n      mstore\n      revert\n        /* \"contracts/modules/ContestRoyalty.sol\":7402:7471  weeklyuserdtl.isQualified == true && weeklyuserdtl.isClaimed == false */\n    tag_270:\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      0xff\n      swap2\n      pop\n      and\n      iszero\n        /* \"contracts/modules/ContestRoyalty.sol\":7402:7471  weeklyuserdtl.isQualified == true && weeklyuserdtl.isClaimed == false */\n      dup6\n      jump(tag_271)\n        /* \"contracts/modules/ContestRoyalty.sol\":7068:7173  _userId > 0 && _roundId > 0 && weeklyContestdtl[_roundId].closed == true && _roundId < currentWeeklyRound */\n    tag_267:\n      pop\n        /* \"contracts/modules/ContestRoyalty.sol\":7155:7173  currentWeeklyRound */\n      0x36\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      sload\n        /* \"contracts/modules/ContestRoyalty.sol\":7144:7173  _roundId < currentWeeklyRound */\n      dup3\n      lt\n        /* \"contracts/modules/ContestRoyalty.sol\":7068:7173  _userId > 0 && _roundId > 0 && weeklyContestdtl[_roundId].closed == true && _roundId < currentWeeklyRound */\n      jump(tag_268)\n        /* \"contracts/modules/ContestRoyalty.sol\":7068:7140  _userId > 0 && _roundId > 0 && weeklyContestdtl[_roundId].closed == true */\n    tag_265:\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      pop\n      dup2\n      0x00\n      mstore\n        /* \"contracts/modules/ContestRoyalty.sol\":7099:7115  weeklyContestdtl */\n      0x39\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      0x20\n      mstore\n        /* \"contracts/modules/ContestRoyalty.sol\":7136:7140  true */\n      0x01\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      0xff\n        /* \"contracts/modules/ContestRoyalty.sol\":7099:7132  weeklyContestdtl[_roundId].closed */\n      0x08\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/ContestRoyalty.sol\":7099:7132  weeklyContestdtl[_roundId].closed */\n      add\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      sload\n      and\n      iszero\n      iszero\n        /* \"contracts/modules/ContestRoyalty.sol\":7099:7140  weeklyContestdtl[_roundId].closed == true */\n      eq\n        /* \"contracts/modules/ContestRoyalty.sol\":7068:7140  _userId > 0 && _roundId > 0 && weeklyContestdtl[_roundId].closed == true */\n      jump(tag_266)\n        /* \"contracts/modules/ContestRoyalty.sol\":7068:7095  _userId > 0 && _roundId > 0 */\n    tag_263:\n        /* \"contracts/modules/ContestRoyalty.sol\":7083:7095  _roundId > 0 */\n      pop\n      dup2\n      iszero\n      iszero\n        /* \"contracts/modules/ContestRoyalty.sol\":7068:7095  _userId > 0 && _roundId > 0 */\n      jump(tag_264)\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n    tag_14:\n      jumpi(tag_80, callvalue)\n      jumpi(tag_80, slt(add(not(0x03), calldatasize), 0x00))\n      dup1\n        /* \"contracts/modules/Storage.sol\":683:688  10000 */\n      0x2710\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      0x20\n      swap3\n      mstore\n      return\n    tag_1:\n      0x40\n      swap1\n      not(0x03)\n      add\n      slt\n      tag_80\n      jumpi\n      calldataload(0x04)\n      swap1\n      calldataload(0x24)\n      swap1\n      jump\t// out\n    tag_2:\n      iszero\n      tag_304\n      jumpi\n      jump\t// out\n    tag_304:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x10\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x82, 0x139bdd081e5bdd5c881858d8dbdd5b9d)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_3:\n      iszero\n      tag_306\n      jumpi\n      jump\t// out\n    tag_306:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x30\n      0x24\n      dup3\n      add\n      mstore\n      0x496e76616c696420757365724964206f7220726f756e644964206f7220726f75\n      0x44\n      dup3\n      add\n      mstore\n      shl(0x82, 0x1b99081bdc881b9bdd0818db1bdcd959)\n      0x64\n      dup3\n      add\n      mstore\n      0x84\n      swap1\n      revert\n    tag_4:\n      iszero\n      tag_308\n      jumpi\n      jump\t// out\n    tag_308:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x12\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x70, 0x4e6f2072657761726420746f20636c61696d)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_5:\n      iszero\n      tag_310\n      jumpi\n      jump\t// out\n    tag_310:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x11\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x7a, 0x105b1b081d5cd95c9cc818db185a5b5959)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_6:\n      swap2\n      swap1\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_190\n      jumpi\n      jump\t// out\n        /* \"contracts/modules/ContestRoyalty.sol\":2652:3200  function canClaimMonthlyReward(uint _userId, uint _roundId) external view returns (bool) {... */\n    tag_8:\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      0x00\n      mstore\n        /* \"contracts/modules/ContestRoyalty.sol\":2789:2810  monthlyRoyaltyUserdtl */\n      0x42\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, 0x40)\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/ContestRoyalty.sol\":2910:2924  royalty.closed */\n      swap1\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      0xff\n        /* \"contracts/modules/ContestRoyalty.sol\":2910:2924  royalty.closed */\n      0x08\n      dup4\n      add\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      sload\n      and\n        /* \"contracts/modules/ContestRoyalty.sol\":2909:2924  !royalty.closed */\n      iszero\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      swap3\n      dup4\n      iszero\n        /* \"contracts/modules/ContestRoyalty.sol\":2909:2968  !royalty.closed ||... */\n      tag_314\n      jumpi\n        /* \"contracts/modules/ContestRoyalty.sol\":2652:3200  function canClaimMonthlyReward(uint _userId, uint _roundId) external view returns (bool) {... */\n    tag_315:\n        /* \"contracts/modules/ContestRoyalty.sol\":2909:3005  !royalty.closed ||... */\n      dup4\n      iszero\n      tag_316\n      jumpi\n        /* \"contracts/modules/ContestRoyalty.sol\":2652:3200  function canClaimMonthlyReward(uint _userId, uint _roundId) external view returns (bool) {... */\n    tag_317:\n        /* \"contracts/modules/ContestRoyalty.sol\":2909:3057  !royalty.closed ||... */\n      dup4\n      iszero\n      tag_318\n      jumpi\n        /* \"contracts/modules/ContestRoyalty.sol\":2652:3200  function canClaimMonthlyReward(uint _userId, uint _roundId) external view returns (bool) {... */\n    tag_319:\n        /* \"contracts/modules/ContestRoyalty.sol\":2909:3101  !royalty.closed ||... */\n      dup4\n      iszero\n      tag_320\n      jumpi\n        /* \"contracts/modules/ContestRoyalty.sol\":2652:3200  function canClaimMonthlyReward(uint _userId, uint _roundId) external view returns (bool) {... */\n    tag_321:\n        /* \"contracts/modules/ContestRoyalty.sol\":2909:3140  !royalty.closed ||... */\n      pop\n      pop\n      dup2\n      iszero\n      tag_322\n      jumpi\n        /* \"contracts/modules/ContestRoyalty.sol\":2652:3200  function canClaimMonthlyReward(uint _userId, uint _roundId) external view returns (bool) {... */\n    tag_323:\n        /* \"contracts/modules/ContestRoyalty.sol\":2895:3179  if (... */\n      pop\n      tag_324\n      jumpi\n        /* \"contracts/modules/ContestRoyalty.sol\":3192:3196  true */\n      0x01\n        /* \"contracts/modules/ContestRoyalty.sol\":2652:3200  function canClaimMonthlyReward(uint _userId, uint _roundId) external view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/modules/ContestRoyalty.sol\":2895:3179  if (... */\n    tag_324:\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      0x00\n        /* \"contracts/modules/ContestRoyalty.sol\":3159:3171  return false */\n      swap1\n      jump\t// out\n        /* \"contracts/modules/ContestRoyalty.sol\":2909:3140  !royalty.closed ||... */\n    tag_322:\n        /* \"contracts/modules/ContestRoyalty.sol\":3114:3135  royalty.perUserReward */\n      0x03\n      swap2\n      pop\n      add\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      sload\n        /* \"contracts/modules/ContestRoyalty.sol\":3114:3140  royalty.perUserReward == 0 */\n      iszero\n        /* \"contracts/modules/ContestRoyalty.sol\":2909:3140  !royalty.closed ||... */\n      0x00\n      jump(tag_323)\n        /* \"contracts/modules/ContestRoyalty.sol\":2909:3101  !royalty.closed ||... */\n    tag_320:\n        /* \"contracts/modules/ContestRoyalty.sol\":3070:3091  userRoyalty.isClaimed */\n      0x04\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      swap3\n      swap4\n      pop\n      0x00\n      mstore\n        /* \"contracts/modules/ContestRoyalty.sol\":3070:3091  userRoyalty.isClaimed */\n      add\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      0x20\n      mstore\n      and(sload(keccak256(0x00, 0x40)), 0xff)\n        /* \"contracts/modules/ContestRoyalty.sol\":2909:3101  !royalty.closed ||... */\n      swap1\n      0x00\n      dup1\n      jump(tag_321)\n        /* \"contracts/modules/ContestRoyalty.sol\":2909:3057  !royalty.closed ||... */\n    tag_318:\n        /* \"contracts/modules/ContestRoyalty.sol\":3018:3046  userRoyalty.qualifiedRoundId */\n      dup1\n      swap4\n      pop\n      0x02\n      dup3\n      add\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      sload\n        /* \"contracts/modules/ContestRoyalty.sol\":3018:3057  userRoyalty.qualifiedRoundId > _roundId */\n      gt\n        /* \"contracts/modules/ContestRoyalty.sol\":2909:3057  !royalty.closed ||... */\n      swap3\n      jump(tag_319)\n        /* \"contracts/modules/ContestRoyalty.sol\":2909:3005  !royalty.closed ||... */\n    tag_316:\n        /* \"contracts/modules/ContestRoyalty.sol\":2982:3005  userRoyalty.isQualified */\n      0x05\n      dup3\n      add\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      sload\n      0xff\n      and\n        /* \"contracts/modules/ContestRoyalty.sol\":2981:3005  !userRoyalty.isQualified */\n      iszero\n      swap4\n      pop\n        /* \"contracts/modules/ContestRoyalty.sol\":2909:3005  !royalty.closed ||... */\n      jump(tag_317)\n        /* \"contracts/modules/ContestRoyalty.sol\":2909:2968  !royalty.closed ||... */\n    tag_314:\n        /* \"contracts/modules/ContestRoyalty.sol\":2949:2968  currentMonthlyRound */\n      0x3d\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      sload\n        /* \"contracts/modules/ContestRoyalty.sol\":2937:2968  _roundId >= currentMonthlyRound */\n      dup2\n      lt\n      iszero\n      swap4\n      pop\n        /* \"contracts/modules/ContestRoyalty.sol\":2909:2968  !royalty.closed ||... */\n      jump(tag_315)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_9:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      0x00\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      sload\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      eq\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      tag_326\n      jumpi\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      0x00\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n    tag_326:\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      mstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n      0x44\n      dup3\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"contracts/modules/ContestRoyalty.sol\":90:8143  contract ContestRoyalty is Storage  {... */\n    tag_10:\n      0xa0\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_199\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_11:\n      swap1\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_199\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220747e67fed5dc5a9e9b70a1d55783bd7a20f5c4120c674ca013b676efa1b871ec64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"allocate_memory": {
									"entryPoint": 1315,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"allocate_memory_4571": {
									"entryPoint": 1346,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"clear_storage_range_uint256": {
									"entryPoint": 1378,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040523461051f5760015f556040516101e081016001600160401b0381118282101761050b5760405267d02ab486cedc0000815268015af1d78b58c4000060208201526802b5e3af16b1880000604082015268056bc75e2d631000006060820152680ad78ebc5ac620000060808201526815af1d78b58c40000060a0820152682b5e3af16b1880000060c08201526856bc75e2d63100000060e082015268ad78ebc5ac6200000061010082015269015af1d78b58c40000006101208201526902b5e3af16b18800000061014082015269056bc75e2d6310000000610160820152690ad78ebc5ac6200000006101808201526915af1d78b58c400000006101a0820152692b5e3af16b18800000006101c0820152600b54600f600b5580600f106104b5575b50600b5f5260205f20905f5b600f811061049857610141610523565b680410d586a20a4c00008152681043561a8829300000602082015268410d586a20a4c0000060408201526901043561a882930000006060820152690410d586a20a4c0000006080820152691043561a88293000000060a082015269410d586a20a4c000000060c0820152601354600760135580600710610442575b5060135f5260205f20905f5b60078110610425576101d8610542565b68056bc75e2d631000008152680ad78ebc5ac620000060208201526815af1d78b58c4000006040820152682b5e3af16b1880000060608201526856bc75e2d631000000608082015268ad78ebc5ac6200000060a082015269015af1d78b58c400000060c08201526902b5e3af16b18800000060e08201526014546008601455806008106103cf575b5060145f5260205f20905f5b600881106103b25761027c610523565b60038152600560208201526007604082015260096060820152600b6080820152600d60a0820152600f60c08201525f5b6007811061039a576102bc610542565b6004815260056020820152600660408201526007606082015260086080820152600960a0820152600a60c0820152600b60e08201525f5b6008811061038257610303610542565b5f815260016020820152600160408201526001606082015260016080820152600160a0820152600160c0820152600160e08201525f5b6008811061036a574260375542603e555f60385560016036555f603f556001603d5560405161107390816105798239f35b600190602060ff845116930192816024015501610339565b600190602060ff84511693019281601c0155016102f3565b600190602060ff8451169301928160150155016102ac565b81516001600160501b03168184015560209091019060010161026c565b60145f5261041f907fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ec017fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4f4610562565b81610260565b81516001600160501b0316818401556020909101906001016101c8565b60135f52610492907f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a090017f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a097610562565b816101bc565b81516001600160501b031681840155602090910190600101610131565b600b5f52610505907f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9017f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01dc8610562565b5f610125565b634e487b7160e01b5f52604160045260245ffd5b5f80fd5b6040519060e082016001600160401b0381118382101761050b57604052565b6040519061010082016001600160401b0381118382101761050b57604052565b81811061056d575050565b5f815560010161056256fe6080806040526004361015610012575f80fd5b5f3560e01c90816301c234a814610da0575080631629805614610a875780632132d20414610a5b5780632350268f14610a015780632a891534146109e45780632f48ab7d146109bc5780633080b5bc1461099f57806332bc298c1461098257806332fcd96614610960578063375b43b41461094557806339ab3603146108eb5780634c2215e3146104a257806358c7d3521461048757806376f5f7001461046a57806378f6ad6d1461044d5780637cdc65f2146104255780637d846e3814610402578063956a3228146103d6578063a59d17d1146103b9578063ae4708dc1461035f578063bff1f9e114610342578063c216212a146102d4578063c8df2908146102b0578063c9ed070814610293578063ca8e912114610276578063d0a2fd791461024a578063e898fc381461022d578063e9e34a1614610205578063ebe0ff15146101e2578063ec597e6f146101c5578063f5d74d931461019d5763fddc806f1461017c575f80fd5b34610199575f366003190112610199576020603754604051908152f35b5f80fd5b34610199575f366003190112610199576004546040516001600160a01b039091168152602090f35b34610199575f366003190112610199576020600554604051908152f35b34610199575f366003190112610199576020604051683635c9adc5dea000008152f35b34610199575f366003190112610199576003546040516001600160a01b039091168152602090f35b34610199575f366003190112610199576020603e54604051908152f35b3461019957602036600319011261019957600435600881101561019957602090601c0154604051908152f35b34610199575f366003190112610199576020603654604051908152f35b34610199575f366003190112610199576020603d54604051908152f35b34610199575f36600319011261019957602060405169021e19e0c9bab24000008152f35b3461019957602036600319011261019957600435600b5481101561019957600b5481101561032e57600b5f527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90154604051908152602090f35b634e487b7160e01b5f52603260045260245ffd5b34610199575f366003190112610199576020600654604051908152f35b34610199576020366003190112610199576004356013548110156101995760135481101561032e5760135f527f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a0900154604051908152602090f35b34610199575f366003190112610199576020603f54604051908152f35b346101995760203660031901126101995760043560088110156101995760209060240154604051908152f35b3461019957602061041b61041536610dba565b90610f02565b6040519015158152f35b34610199575f366003190112610199576002546040516001600160a01b039091168152602090f35b34610199575f366003190112610199576020600954604051908152f35b34610199575f36600319011261019957602060405162093a808152f35b34610199575f366003190112610199576020604051600a8152f35b34610199576104b036610dba565b906104b9610fab565b805f52600d6020526104d860018060a01b0360405f2054163314610dd0565b801515806108e2575b806108c4575b806108b9575b6104f690610e0f565b805f52604260205260405f2090825f52604060205260405f2091600160ff6005830154161515036108835760048101845f528060205260ff60405f20541661083e5760038401549384159261054b8415610e74565b86600260048401926105638285549601548610610eb5565b01541161080157600182018092116107ed57555f85815260209182526040808220805460ff19166001179055848252600d90925220546001600160a01b03169081156107b95761078657815f52600e602052600b60405f206105c6858254610ef5565b8155016105d4848254610ef5565b9055815f52600f60205260405f20604051906105ef82610fff565b83825260208201858152604083015f815260608401904282526080850192600d84528454600160401b811015610772576001810180875581101561032e576004955f52600560205f20910201955186555160018601555160028501555160038401555191015560018060a01b036001541660205f6040518281019063a9059cbb60e01b82528560248201528760448201526044815261068f60648261101b565b519082855af115610767575f513d61075e5750803b155b61074c57507f8211032682f8fd8be8ff252e0a106cdb6ad4b10427152b4d93c2bc9a1f11c3c29361074391835f52600d60205260018060a01b0360405f205416907fe17b61d324ce17328f433d0ab62581c0f0aa997312bae80fbdfcd2aa9b91d6e360606040518881525f6020820152600d6040820152a36040519384934292859094939260609260808301968352602083015260408201520152565b0390a160015f55005b635274afe760e01b5f5260045260245ffd5b600114156106a6565b6040513d5f823e3d90fd5b634e487b7160e01b5f52604160045260245ffd5b60405162461bcd60e51b815260206004820152600b60248201526a16995c9bc8185b5bdd5b9d60aa1b6044820152606490fd5b60405162461bcd60e51b815260206004820152600c60248201526b24b73b30b634b2103ab9b2b960a11b6044820152606490fd5b634e487b7160e01b5f52601160045260245ffd5b60405162461bcd60e51b81526020600482015260156024820152744e6f7420656c696769626c6520746f20636c61696d60581b6044820152606490fd5b60405162461bcd60e51b815260206004820152601e60248201527f416c726561647920636c61696d656420666f72207468697320726f756e6400006044820152606490fd5b60405162461bcd60e51b815260206004820152600e60248201526d02737ba1038bab0b634b334b2b2160951b6044820152606490fd5b50603d5482106104ed565b50815f526040602052600160ff600860405f200154161515146104e7565b508115156104e1565b34610199576020366003190112610199576004356007548110156101995760075481101561032e5760075f527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880154604051908152602090f35b34610199575f366003190112610199576020604051600f8152f35b34610199575f366003190112610199576020604051670de0b6b3a76400008152f35b34610199575f366003190112610199576020604051620151808152f35b34610199575f366003190112610199576020603854604051908152f35b34610199575f366003190112610199576001546040516001600160a01b039091168152602090f35b34610199575f36600319011261019957602060405162278d008152f35b34610199576020366003190112610199576004356014548110156101995760145481101561032e5760145f527fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ec0154604051908152602090f35b346101995760203660031901126101995760043560078110156101995760209060150154604051908152f35b3461019957610a9536610dba565b90610a9e610fab565b805f52600d602052610abd60018060a01b0360405f2054163314610dd0565b80151580610d97575b80610d79575b80610d6e575b610adb90610e0f565b815f52603b60205260405f20815f5260205260405f2090825f526039602052600460405f209201918254600160ff8260081c161515149081610d62575b5015610d1e57600381015492831591610b318315610e74565b60048101610b46600282549301548310610eb5565b600182018092116107ed5755805460ff191660011790555f828152600d60205260409020546001600160a01b03169081156107b95761078657815f52600e602052600a60405f20610b98858254610ef5565b815501610ba6848254610ef5565b9055815f52600f60205260405f2060405190610bc182610fff565b83825260208201858152604083015f815260608401904282526080850192600c84528454600160401b811015610772576001810180875581101561032e576004955f52600560205f20910201955186555160018601555160028501555160038401555191015560018060a01b036001541660205f6040518281019063a9059cbb60e01b825285602482015287604482015260448152610c6160648261101b565b519082855af115610767575f513d610d155750803b155b61074c57507f96ee4f374d0394c5383b347dc3b7ec04a1eceddcd2e25521157bce21c42b24d59361074391835f52600d60205260018060a01b0360405f205416907fe17b61d324ce17328f433d0ab62581c0f0aa997312bae80fbdfcd2aa9b91d6e360606040518881525f6020820152600c6040820152a36040519384934292859094939260609260808301968352602083015260408201520152565b60011415610c78565b606460405162461bcd60e51b815260206004820152602060248201527f4e6f74207175616c6966696564206f7220616c726561647920636c61696d65646044820152fd5b60ff9150161585610b18565b506036548210610ad2565b50815f526039602052600160ff600860405f20015416151514610acc565b50811515610ac6565b34610199575f366003190112610199578061271060209252f35b6040906003190112610199576004359060243590565b15610dd757565b60405162461bcd60e51b815260206004820152601060248201526f139bdd081e5bdd5c881858d8dbdd5b9d60821b6044820152606490fd5b15610e1657565b60405162461bcd60e51b815260206004820152603060248201527f496e76616c696420757365724964206f7220726f756e644964206f7220726f7560448201526f1b99081bdc881b9bdd0818db1bdcd95960821b6064820152608490fd5b15610e7b57565b60405162461bcd60e51b81526020600482015260126024820152714e6f2072657761726420746f20636c61696d60701b6044820152606490fd5b15610ebc57565b60405162461bcd60e51b8152602060048201526011602482015270105b1b081d5cd95c9cc818db185a5b5959607a1b6044820152606490fd5b919082018092116107ed57565b5f52604260205260405f20815f52604060205260405f209060ff60088301541615928315610f9e575b8315610f8e575b8315610f7f575b8315610f64575b50508115610f57575b50610f5357600190565b5f90565b600391500154155f610f49565b60049293505f520160205260ff60405f205416905f80610f40565b80935060028201541192610f39565b600582015460ff16159350610f32565b603d548110159350610f2b565b60025f5414610fba5760025f55565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b60a0810190811067ffffffffffffffff82111761077257604052565b90601f8019910116810190811067ffffffffffffffff8211176107725760405256fea2646970667358221220747e67fed5dc5a9e9b70a1d55783bd7a20f5c4120c674ca013b676efa1b871ec64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x51F JUMPI PUSH1 0x1 PUSH0 SSTORE PUSH1 0x40 MLOAD PUSH2 0x1E0 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR PUSH2 0x50B JUMPI PUSH1 0x40 MSTORE PUSH8 0xD02AB486CEDC0000 DUP2 MSTORE PUSH9 0x15AF1D78B58C40000 PUSH1 0x20 DUP3 ADD MSTORE PUSH9 0x2B5E3AF16B1880000 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x56BC75E2D63100000 PUSH1 0x60 DUP3 ADD MSTORE PUSH9 0xAD78EBC5AC6200000 PUSH1 0x80 DUP3 ADD MSTORE PUSH9 0x15AF1D78B58C400000 PUSH1 0xA0 DUP3 ADD MSTORE PUSH9 0x2B5E3AF16B18800000 PUSH1 0xC0 DUP3 ADD MSTORE PUSH9 0x56BC75E2D631000000 PUSH1 0xE0 DUP3 ADD MSTORE PUSH9 0xAD78EBC5AC62000000 PUSH2 0x100 DUP3 ADD MSTORE PUSH10 0x15AF1D78B58C4000000 PUSH2 0x120 DUP3 ADD MSTORE PUSH10 0x2B5E3AF16B188000000 PUSH2 0x140 DUP3 ADD MSTORE PUSH10 0x56BC75E2D6310000000 PUSH2 0x160 DUP3 ADD MSTORE PUSH10 0xAD78EBC5AC620000000 PUSH2 0x180 DUP3 ADD MSTORE PUSH10 0x15AF1D78B58C40000000 PUSH2 0x1A0 DUP3 ADD MSTORE PUSH10 0x2B5E3AF16B1880000000 PUSH2 0x1C0 DUP3 ADD MSTORE PUSH1 0xB SLOAD PUSH1 0xF PUSH1 0xB SSTORE DUP1 PUSH1 0xF LT PUSH2 0x4B5 JUMPI JUMPDEST POP PUSH1 0xB PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH0 JUMPDEST PUSH1 0xF DUP2 LT PUSH2 0x498 JUMPI PUSH2 0x141 PUSH2 0x523 JUMP JUMPDEST PUSH9 0x410D586A20A4C0000 DUP2 MSTORE PUSH9 0x1043561A8829300000 PUSH1 0x20 DUP3 ADD MSTORE PUSH9 0x410D586A20A4C00000 PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x1043561A88293000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH10 0x410D586A20A4C000000 PUSH1 0x80 DUP3 ADD MSTORE PUSH10 0x1043561A882930000000 PUSH1 0xA0 DUP3 ADD MSTORE PUSH10 0x410D586A20A4C0000000 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x13 SLOAD PUSH1 0x7 PUSH1 0x13 SSTORE DUP1 PUSH1 0x7 LT PUSH2 0x442 JUMPI JUMPDEST POP PUSH1 0x13 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH0 JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x425 JUMPI PUSH2 0x1D8 PUSH2 0x542 JUMP JUMPDEST PUSH9 0x56BC75E2D63100000 DUP2 MSTORE PUSH9 0xAD78EBC5AC6200000 PUSH1 0x20 DUP3 ADD MSTORE PUSH9 0x15AF1D78B58C400000 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x2B5E3AF16B18800000 PUSH1 0x60 DUP3 ADD MSTORE PUSH9 0x56BC75E2D631000000 PUSH1 0x80 DUP3 ADD MSTORE PUSH9 0xAD78EBC5AC62000000 PUSH1 0xA0 DUP3 ADD MSTORE PUSH10 0x15AF1D78B58C4000000 PUSH1 0xC0 DUP3 ADD MSTORE PUSH10 0x2B5E3AF16B188000000 PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x14 SLOAD PUSH1 0x8 PUSH1 0x14 SSTORE DUP1 PUSH1 0x8 LT PUSH2 0x3CF JUMPI JUMPDEST POP PUSH1 0x14 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH0 JUMPDEST PUSH1 0x8 DUP2 LT PUSH2 0x3B2 JUMPI PUSH2 0x27C PUSH2 0x523 JUMP JUMPDEST PUSH1 0x3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0xC0 DUP3 ADD MSTORE PUSH0 JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x39A JUMPI PUSH2 0x2BC PUSH2 0x542 JUMP JUMPDEST PUSH1 0x4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0xE0 DUP3 ADD MSTORE PUSH0 JUMPDEST PUSH1 0x8 DUP2 LT PUSH2 0x382 JUMPI PUSH2 0x303 PUSH2 0x542 JUMP JUMPDEST PUSH0 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 DUP3 ADD MSTORE PUSH0 JUMPDEST PUSH1 0x8 DUP2 LT PUSH2 0x36A JUMPI TIMESTAMP PUSH1 0x37 SSTORE TIMESTAMP PUSH1 0x3E SSTORE PUSH0 PUSH1 0x38 SSTORE PUSH1 0x1 PUSH1 0x36 SSTORE PUSH0 PUSH1 0x3F SSTORE PUSH1 0x1 PUSH1 0x3D SSTORE PUSH1 0x40 MLOAD PUSH2 0x1073 SWAP1 DUP2 PUSH2 0x579 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH1 0xFF DUP5 MLOAD AND SWAP4 ADD SWAP3 DUP2 PUSH1 0x24 ADD SSTORE ADD PUSH2 0x339 JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH1 0xFF DUP5 MLOAD AND SWAP4 ADD SWAP3 DUP2 PUSH1 0x1C ADD SSTORE ADD PUSH2 0x2F3 JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH1 0xFF DUP5 MLOAD AND SWAP4 ADD SWAP3 DUP2 PUSH1 0x15 ADD SSTORE ADD PUSH2 0x2AC JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND DUP2 DUP5 ADD SSTORE PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x26C JUMP JUMPDEST PUSH1 0x14 PUSH0 MSTORE PUSH2 0x41F SWAP1 PUSH32 0xCE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4EC ADD PUSH32 0xCE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4F4 PUSH2 0x562 JUMP JUMPDEST DUP2 PUSH2 0x260 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND DUP2 DUP5 ADD SSTORE PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1C8 JUMP JUMPDEST PUSH1 0x13 PUSH0 MSTORE PUSH2 0x492 SWAP1 PUSH32 0x66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A090 ADD PUSH32 0x66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A097 PUSH2 0x562 JUMP JUMPDEST DUP2 PUSH2 0x1BC JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND DUP2 DUP5 ADD SSTORE PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x131 JUMP JUMPDEST PUSH1 0xB PUSH0 MSTORE PUSH2 0x505 SWAP1 PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 ADD PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DC8 PUSH2 0x562 JUMP JUMPDEST PUSH0 PUSH2 0x125 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0xE0 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x50B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x100 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x50B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x56D JUMPI POP POP JUMP JUMPDEST PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x562 JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1C234A8 EQ PUSH2 0xDA0 JUMPI POP DUP1 PUSH4 0x16298056 EQ PUSH2 0xA87 JUMPI DUP1 PUSH4 0x2132D204 EQ PUSH2 0xA5B JUMPI DUP1 PUSH4 0x2350268F EQ PUSH2 0xA01 JUMPI DUP1 PUSH4 0x2A891534 EQ PUSH2 0x9E4 JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0x9BC JUMPI DUP1 PUSH4 0x3080B5BC EQ PUSH2 0x99F JUMPI DUP1 PUSH4 0x32BC298C EQ PUSH2 0x982 JUMPI DUP1 PUSH4 0x32FCD966 EQ PUSH2 0x960 JUMPI DUP1 PUSH4 0x375B43B4 EQ PUSH2 0x945 JUMPI DUP1 PUSH4 0x39AB3603 EQ PUSH2 0x8EB JUMPI DUP1 PUSH4 0x4C2215E3 EQ PUSH2 0x4A2 JUMPI DUP1 PUSH4 0x58C7D352 EQ PUSH2 0x487 JUMPI DUP1 PUSH4 0x76F5F700 EQ PUSH2 0x46A JUMPI DUP1 PUSH4 0x78F6AD6D EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0x7CDC65F2 EQ PUSH2 0x425 JUMPI DUP1 PUSH4 0x7D846E38 EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0x956A3228 EQ PUSH2 0x3D6 JUMPI DUP1 PUSH4 0xA59D17D1 EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0xAE4708DC EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0xBFF1F9E1 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0xC216212A EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xC8DF2908 EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0xC9ED0708 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0xCA8E9121 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0xD0A2FD79 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0xE898FC38 EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0xE9E34A16 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0xEBE0FF15 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0xEC597E6F EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0xF5D74D93 EQ PUSH2 0x19D JUMPI PUSH4 0xFDDC806F EQ PUSH2 0x17C JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x20 PUSH1 0x37 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH9 0x3635C9ADC5DEA00000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x20 PUSH1 0x3E SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x199 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1C ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x20 PUSH1 0x36 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x20 PUSH1 0x3D SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH10 0x21E19E0C9BAB2400000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x199 JUMPI PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x32E JUMPI PUSH1 0xB PUSH0 MSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x13 SLOAD DUP2 LT ISZERO PUSH2 0x199 JUMPI PUSH1 0x13 SLOAD DUP2 LT ISZERO PUSH2 0x32E JUMPI PUSH1 0x13 PUSH0 MSTORE PUSH32 0x66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A090 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x20 PUSH1 0x3F SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x199 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x24 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x20 PUSH2 0x41B PUSH2 0x415 CALLDATASIZE PUSH2 0xDBA JUMP JUMPDEST SWAP1 PUSH2 0xF02 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x20 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x93A80 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xA DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH2 0x4B0 CALLDATASIZE PUSH2 0xDBA JUMP JUMPDEST SWAP1 PUSH2 0x4B9 PUSH2 0xFAB JUMP JUMPDEST DUP1 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH2 0x4D8 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND CALLER EQ PUSH2 0xDD0 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP1 PUSH2 0x8E2 JUMPI JUMPDEST DUP1 PUSH2 0x8C4 JUMPI JUMPDEST DUP1 PUSH2 0x8B9 JUMPI JUMPDEST PUSH2 0x4F6 SWAP1 PUSH2 0xE0F JUMP JUMPDEST DUP1 PUSH0 MSTORE PUSH1 0x42 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 DUP3 PUSH0 MSTORE PUSH1 0x40 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP2 PUSH1 0x1 PUSH1 0xFF PUSH1 0x5 DUP4 ADD SLOAD AND ISZERO ISZERO SUB PUSH2 0x883 JUMPI PUSH1 0x4 DUP2 ADD DUP5 PUSH0 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH2 0x83E JUMPI PUSH1 0x3 DUP5 ADD SLOAD SWAP4 DUP5 ISZERO SWAP3 PUSH2 0x54B DUP5 ISZERO PUSH2 0xE74 JUMP JUMPDEST DUP7 PUSH1 0x2 PUSH1 0x4 DUP5 ADD SWAP3 PUSH2 0x563 DUP3 DUP6 SLOAD SWAP7 ADD SLOAD DUP7 LT PUSH2 0xEB5 JUMP JUMPDEST ADD SLOAD GT PUSH2 0x801 JUMPI PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x7ED JUMPI SSTORE PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP5 DUP3 MSTORE PUSH1 0xD SWAP1 SWAP3 MSTORE KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x7B9 JUMPI PUSH2 0x786 JUMPI DUP2 PUSH0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0xB PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x5C6 DUP6 DUP3 SLOAD PUSH2 0xEF5 JUMP JUMPDEST DUP2 SSTORE ADD PUSH2 0x5D4 DUP5 DUP3 SLOAD PUSH2 0xEF5 JUMP JUMPDEST SWAP1 SSTORE DUP2 PUSH0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x5EF DUP3 PUSH2 0xFFF JUMP JUMPDEST DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP6 DUP2 MSTORE PUSH1 0x40 DUP4 ADD PUSH0 DUP2 MSTORE PUSH1 0x60 DUP5 ADD SWAP1 TIMESTAMP DUP3 MSTORE PUSH1 0x80 DUP6 ADD SWAP3 PUSH1 0xD DUP5 MSTORE DUP5 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x772 JUMPI PUSH1 0x1 DUP2 ADD DUP1 DUP8 SSTORE DUP2 LT ISZERO PUSH2 0x32E JUMPI PUSH1 0x4 SWAP6 PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 PUSH0 KECCAK256 SWAP2 MUL ADD SWAP6 MLOAD DUP7 SSTORE MLOAD PUSH1 0x1 DUP7 ADD SSTORE MLOAD PUSH1 0x2 DUP6 ADD SSTORE MLOAD PUSH1 0x3 DUP5 ADD SSTORE MLOAD SWAP2 ADD SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND PUSH1 0x20 PUSH0 PUSH1 0x40 MLOAD DUP3 DUP2 ADD SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP3 MSTORE DUP6 PUSH1 0x24 DUP3 ADD MSTORE DUP8 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x44 DUP2 MSTORE PUSH2 0x68F PUSH1 0x64 DUP3 PUSH2 0x101B JUMP JUMPDEST MLOAD SWAP1 DUP3 DUP6 GAS CALL ISZERO PUSH2 0x767 JUMPI PUSH0 MLOAD RETURNDATASIZE PUSH2 0x75E JUMPI POP DUP1 EXTCODESIZE ISZERO JUMPDEST PUSH2 0x74C JUMPI POP PUSH32 0x8211032682F8FD8BE8FF252E0A106CDB6AD4B10427152B4D93C2BC9A1F11C3C2 SWAP4 PUSH2 0x743 SWAP2 DUP4 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND SWAP1 PUSH32 0xE17B61D324CE17328F433D0AB62581C0F0AA997312BAE80FBDFCD2AA9B91D6E3 PUSH1 0x60 PUSH1 0x40 MLOAD DUP9 DUP2 MSTORE PUSH0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x40 DUP3 ADD MSTORE LOG3 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 TIMESTAMP SWAP3 DUP6 SWAP1 SWAP5 SWAP4 SWAP3 PUSH1 0x60 SWAP3 PUSH1 0x80 DUP4 ADD SWAP7 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG1 PUSH1 0x1 PUSH0 SSTORE STOP JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x6A6 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x16995C9BC8185B5BDD5B9D PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x24B73B30B634B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4E6F7420656C696769626C6520746F20636C61696D PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C726561647920636C61696D656420666F72207468697320726F756E640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x2737BA1038BAB0B634B334B2B21 PUSH1 0x95 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x3D SLOAD DUP3 LT PUSH2 0x4ED JUMP JUMPDEST POP DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD AND ISZERO ISZERO EQ PUSH2 0x4E7 JUMP JUMPDEST POP DUP2 ISZERO ISZERO PUSH2 0x4E1 JUMP JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x199 JUMPI PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x32E JUMPI PUSH1 0x7 PUSH0 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xF DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH8 0xDE0B6B3A7640000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x15180 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x20 PUSH1 0x38 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x278D00 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x14 SLOAD DUP2 LT ISZERO PUSH2 0x199 JUMPI PUSH1 0x14 SLOAD DUP2 LT ISZERO PUSH2 0x32E JUMPI PUSH1 0x14 PUSH0 MSTORE PUSH32 0xCE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4EC ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x199 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x15 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH2 0xA95 CALLDATASIZE PUSH2 0xDBA JUMP JUMPDEST SWAP1 PUSH2 0xA9E PUSH2 0xFAB JUMP JUMPDEST DUP1 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH2 0xABD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND CALLER EQ PUSH2 0xDD0 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP1 PUSH2 0xD97 JUMPI JUMPDEST DUP1 PUSH2 0xD79 JUMPI JUMPDEST DUP1 PUSH2 0xD6E JUMPI JUMPDEST PUSH2 0xADB SWAP1 PUSH2 0xE0F JUMP JUMPDEST DUP2 PUSH0 MSTORE PUSH1 0x3B PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 DUP3 PUSH0 MSTORE PUSH1 0x39 PUSH1 0x20 MSTORE PUSH1 0x4 PUSH1 0x40 PUSH0 KECCAK256 SWAP3 ADD SWAP2 DUP3 SLOAD PUSH1 0x1 PUSH1 0xFF DUP3 PUSH1 0x8 SHR AND ISZERO ISZERO EQ SWAP1 DUP2 PUSH2 0xD62 JUMPI JUMPDEST POP ISZERO PUSH2 0xD1E JUMPI PUSH1 0x3 DUP2 ADD SLOAD SWAP3 DUP4 ISZERO SWAP2 PUSH2 0xB31 DUP4 ISZERO PUSH2 0xE74 JUMP JUMPDEST PUSH1 0x4 DUP2 ADD PUSH2 0xB46 PUSH1 0x2 DUP3 SLOAD SWAP4 ADD SLOAD DUP4 LT PUSH2 0xEB5 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x7ED JUMPI SSTORE DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH0 DUP3 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x7B9 JUMPI PUSH2 0x786 JUMPI DUP2 PUSH0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0xA PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0xB98 DUP6 DUP3 SLOAD PUSH2 0xEF5 JUMP JUMPDEST DUP2 SSTORE ADD PUSH2 0xBA6 DUP5 DUP3 SLOAD PUSH2 0xEF5 JUMP JUMPDEST SWAP1 SSTORE DUP2 PUSH0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0xBC1 DUP3 PUSH2 0xFFF JUMP JUMPDEST DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP6 DUP2 MSTORE PUSH1 0x40 DUP4 ADD PUSH0 DUP2 MSTORE PUSH1 0x60 DUP5 ADD SWAP1 TIMESTAMP DUP3 MSTORE PUSH1 0x80 DUP6 ADD SWAP3 PUSH1 0xC DUP5 MSTORE DUP5 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x772 JUMPI PUSH1 0x1 DUP2 ADD DUP1 DUP8 SSTORE DUP2 LT ISZERO PUSH2 0x32E JUMPI PUSH1 0x4 SWAP6 PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 PUSH0 KECCAK256 SWAP2 MUL ADD SWAP6 MLOAD DUP7 SSTORE MLOAD PUSH1 0x1 DUP7 ADD SSTORE MLOAD PUSH1 0x2 DUP6 ADD SSTORE MLOAD PUSH1 0x3 DUP5 ADD SSTORE MLOAD SWAP2 ADD SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND PUSH1 0x20 PUSH0 PUSH1 0x40 MLOAD DUP3 DUP2 ADD SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP3 MSTORE DUP6 PUSH1 0x24 DUP3 ADD MSTORE DUP8 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x44 DUP2 MSTORE PUSH2 0xC61 PUSH1 0x64 DUP3 PUSH2 0x101B JUMP JUMPDEST MLOAD SWAP1 DUP3 DUP6 GAS CALL ISZERO PUSH2 0x767 JUMPI PUSH0 MLOAD RETURNDATASIZE PUSH2 0xD15 JUMPI POP DUP1 EXTCODESIZE ISZERO JUMPDEST PUSH2 0x74C JUMPI POP PUSH32 0x96EE4F374D0394C5383B347DC3B7EC04A1ECEDDCD2E25521157BCE21C42B24D5 SWAP4 PUSH2 0x743 SWAP2 DUP4 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND SWAP1 PUSH32 0xE17B61D324CE17328F433D0AB62581C0F0AA997312BAE80FBDFCD2AA9B91D6E3 PUSH1 0x60 PUSH1 0x40 MLOAD DUP9 DUP2 MSTORE PUSH0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x40 DUP3 ADD MSTORE LOG3 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 TIMESTAMP SWAP3 DUP6 SWAP1 SWAP5 SWAP4 SWAP3 PUSH1 0x60 SWAP3 PUSH1 0x80 DUP4 ADD SWAP7 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0xC78 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F74207175616C6966696564206F7220616C726561647920636C61696D6564 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0xFF SWAP2 POP AND ISZERO DUP6 PUSH2 0xB18 JUMP JUMPDEST POP PUSH1 0x36 SLOAD DUP3 LT PUSH2 0xAD2 JUMP JUMPDEST POP DUP2 PUSH0 MSTORE PUSH1 0x39 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD AND ISZERO ISZERO EQ PUSH2 0xACC JUMP JUMPDEST POP DUP2 ISZERO ISZERO PUSH2 0xAC6 JUMP JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI DUP1 PUSH2 0x2710 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xDD7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x139BDD081E5BDD5C881858D8DBDD5B9D PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xE16 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420757365724964206F7220726F756E644964206F7220726F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x1B99081BDC881B9BDD0818DB1BDCD959 PUSH1 0x82 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xE7B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4E6F2072657761726420746F20636C61696D PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xEBC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x105B1B081D5CD95C9CC818DB185A5B5959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x7ED JUMPI JUMP JUMPDEST PUSH0 MSTORE PUSH1 0x42 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0xFF PUSH1 0x8 DUP4 ADD SLOAD AND ISZERO SWAP3 DUP4 ISZERO PUSH2 0xF9E JUMPI JUMPDEST DUP4 ISZERO PUSH2 0xF8E JUMPI JUMPDEST DUP4 ISZERO PUSH2 0xF7F JUMPI JUMPDEST DUP4 ISZERO PUSH2 0xF64 JUMPI JUMPDEST POP POP DUP2 ISZERO PUSH2 0xF57 JUMPI JUMPDEST POP PUSH2 0xF53 JUMPI PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x3 SWAP2 POP ADD SLOAD ISZERO PUSH0 PUSH2 0xF49 JUMP JUMPDEST PUSH1 0x4 SWAP3 SWAP4 POP PUSH0 MSTORE ADD PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND SWAP1 PUSH0 DUP1 PUSH2 0xF40 JUMP JUMPDEST DUP1 SWAP4 POP PUSH1 0x2 DUP3 ADD SLOAD GT SWAP3 PUSH2 0xF39 JUMP JUMPDEST PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0xFF AND ISZERO SWAP4 POP PUSH2 0xF32 JUMP JUMPDEST PUSH1 0x3D SLOAD DUP2 LT ISZERO SWAP4 POP PUSH2 0xF2B JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD EQ PUSH2 0xFBA JUMPI PUSH1 0x2 PUSH0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x772 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x772 JUMPI PUSH1 0x40 MSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x7E67FED5DC5A9E9B70A1D55783BD7A20F5C4120C67 0x4C LOG0 SGT 0xB6 PUSH23 0xEFA1B871EC64736F6C634300081E003300000000000000 ",
							"sourceMap": "90:8053:7:-:0;;;;;;1716:1:3;1821:22;90:8053:7;;;;;;-1:-1:-1;;;;;90:8053:7;;;;;;;;;;1324:9:8;90:8053:7;;1356:9:8;1313:515;;;90:8053:7;1388:9:8;90:8053:7;1313:515:8;;90:8053:7;1420:10:8;1313:515;;;90:8053:7;1453:10:8;1313:515;;;90:8053:7;1486:10:8;1313:515;;;90:8053:7;1519:10:8;1313:515;;;90:8053:7;1552:11:8;1313:515;;;90:8053:7;1586:11:8;1313:515;;;90:8053:7;1620:11:8;1313:515;;;90:8053:7;1654:12:8;1313:515;;;90:8053:7;1689:12:8;1313:515;;;90:8053:7;1724:12:8;1313:515;;;90:8053:7;1759:13:8;1313:515;;;90:8053:7;1795:13:8;1313:515;;;90:8053:7;1313:515:8;90:8053:7;1313:515:8;;90:8053:7;;1313:515:8;90:8053:7;;;-1:-1:-1;90:8053:7;1313:515:8;1821:22:3;90:8053:7;1313:515:8;1821:22:3;90:8053:7;;1821:22:3;90:8053:7;1313:515:8;90:8053:7;;;;;;:::i;:::-;5058:5:8;90:8053:7;;5065:6:8;1313:515;5057:64;;90:8053:7;5073:7:8;90:8053:7;5057:64:8;;90:8053:7;5082:7:8;1313:515;5057:64;;90:8053:7;5091:8:8;1313:515;5057:64;;90:8053:7;5101:8:8;1313:515;5057:64;;90:8053:7;5111:9:8;1313:515;5057:64;;90:8053:7;5057:64:8;90:8053:7;5057:64:8;;90:8053:7;;5057:64:8;90:8053:7;;;;;5057:64:8;1821:22:3;90:8053:7;1313:515:8;1821:22:3;90:8053:7;;1821:22:3;90:8053:7;5057:64:8;90:8053:7;;;;;;:::i;:::-;1420:10:8;90:8053:7;;1453:10:8;1313:515;5163:70;;90:8053:7;1486:10:8;90:8053:7;5163:70:8;;90:8053:7;1519:10:8;1313:515;5163:70;;90:8053:7;1552:11:8;1313:515;5163:70;;90:8053:7;1586:11:8;1313:515;5163:70;;90:8053:7;1620:11:8;1313:515;5163:70;;90:8053:7;1654:12:8;1313:515;5163:70;;90:8053:7;5163:70:8;90:8053:7;5163:70:8;;90:8053:7;;5163:70:8;90:8053:7;;;;;5163:70:8;1821:22:3;90:8053:7;1313:515:8;1821:22:3;90:8053:7;;1821:22:3;90:8053:7;5163:70:8;90:8053:7;;;;;;:::i;:::-;5274:1:8;90:8053:7;;;1313:515:8;5273:24;;90:8053:7;5057:64:8;90:8053:7;5273:24:8;;90:8053:7;5283:1:8;1313:515;5273:24;;90:8053:7;1313:515:8;;5273:24;;90:8053:7;5290:2:8;1313:515;5273:24;;90:8053:7;1313:515:8;;5273:24;;90:8053:7;1821:22:3;90:8053:7;5057:64:8;90:8053:7;;;;;;:::i;:::-;5344:1:8;90:8053:7;;;1313:515:8;5343:25;;90:8053:7;5350:1:8;90:8053:7;5343:25:8;;90:8053:7;5057:64:8;1313:515;5343:25;;90:8053:7;5163:70:8;1313:515;5343:25;;90:8053:7;5283:1:8;1313:515;5343:25;;90:8053:7;5362:2:8;1313:515;5343:25;;90:8053:7;1313:515:8;;5343:25;;90:8053:7;1821:22:3;90:8053:7;5163:70:8;90:8053:7;;;;;;:::i;:::-;1821:22:3;90:8053:7;;1716:1:3;1313:515:8;5413:23;;90:8053:7;1716:1:3;90:8053:7;5413:23:8;;90:8053:7;1716:1:3;1313:515:8;5413:23;;90:8053:7;1716:1:3;1313:515:8;5413:23;;90:8053:7;1716:1:3;1313:515:8;5413:23;;90:8053:7;1716:1:3;1313:515:8;5413:23;;90:8053:7;1716:1:3;1313:515:8;5413:23;;90:8053:7;1821:22:3;90:8053:7;5163:70:8;90:8053:7;;;;191:15;7011:1:8;90:8053:7;191:15;8471:1:8;90:8053:7;1821:22:3;7053:1:8;90:8053:7;1716:1:3;6966::8;90:8053:7;1821:22:3;8512:1:8;90:8053:7;1716:1:3;8425::8;90:8053:7;;;;;;;;;;;1716:1:3;90:8053:7;1313:515:8;90:8053:7;;;;;;;;5413:23:8;90:8053:7;;;;;;1716:1:3;90:8053:7;1313:515:8;90:8053:7;;;;;;;;5343:25:8;90:8053:7;;;;;;1716:1:3;90:8053:7;1313:515:8;90:8053:7;;;;;;;;5273:24:8;90:8053:7;;;;;;;;-1:-1:-1;;;;;90:8053:7;;;;;1313:515:8;90:8053:7;;;;1716:1:3;90:8053:7;;;;5163:70:8;1821:22:3;90:8053:7;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;90:8053:7;;;;;1313:515:8;90:8053:7;;;;1716:1:3;90:8053:7;;;;5057:64:8;1821:22:3;90:8053:7;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;90:8053:7;;;;;1313:515:8;90:8053:7;;;;1716:1:3;90:8053:7;;;;1313:515:8;1821:22:3;90:8053:7;;;;;;;:::i;:::-;;;;;;;;1821:22:3;90:8053:7;;;;;1821:22:3;90:8053:7;;;;;;;;;;;;-1:-1:-1;;;;;90:8053:7;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;90:8053:7;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_uint256t_uint256": {
									"entryPoint": 3514,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"abi_encode_uint256_uint256_uint256_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"checked_add_uint256": {
									"entryPoint": 3829,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 4123,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"finalize_allocation_10898": {
									"entryPoint": 4095,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_canClaimMonthlyReward": {
									"entryPoint": 3842,
									"id": 965,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_nonReentrantBefore": {
									"entryPoint": 4011,
									"id": 134,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"require_helper_stringliteral_1beb": {
									"entryPoint": 3599,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_d2be": {
									"entryPoint": 3536,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_e4c6": {
									"entryPoint": 3700,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_ef17": {
									"entryPoint": 3765,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1C234A8 EQ PUSH2 0xDA0 JUMPI POP DUP1 PUSH4 0x16298056 EQ PUSH2 0xA87 JUMPI DUP1 PUSH4 0x2132D204 EQ PUSH2 0xA5B JUMPI DUP1 PUSH4 0x2350268F EQ PUSH2 0xA01 JUMPI DUP1 PUSH4 0x2A891534 EQ PUSH2 0x9E4 JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0x9BC JUMPI DUP1 PUSH4 0x3080B5BC EQ PUSH2 0x99F JUMPI DUP1 PUSH4 0x32BC298C EQ PUSH2 0x982 JUMPI DUP1 PUSH4 0x32FCD966 EQ PUSH2 0x960 JUMPI DUP1 PUSH4 0x375B43B4 EQ PUSH2 0x945 JUMPI DUP1 PUSH4 0x39AB3603 EQ PUSH2 0x8EB JUMPI DUP1 PUSH4 0x4C2215E3 EQ PUSH2 0x4A2 JUMPI DUP1 PUSH4 0x58C7D352 EQ PUSH2 0x487 JUMPI DUP1 PUSH4 0x76F5F700 EQ PUSH2 0x46A JUMPI DUP1 PUSH4 0x78F6AD6D EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0x7CDC65F2 EQ PUSH2 0x425 JUMPI DUP1 PUSH4 0x7D846E38 EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0x956A3228 EQ PUSH2 0x3D6 JUMPI DUP1 PUSH4 0xA59D17D1 EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0xAE4708DC EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0xBFF1F9E1 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0xC216212A EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xC8DF2908 EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0xC9ED0708 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0xCA8E9121 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0xD0A2FD79 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0xE898FC38 EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0xE9E34A16 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0xEBE0FF15 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0xEC597E6F EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0xF5D74D93 EQ PUSH2 0x19D JUMPI PUSH4 0xFDDC806F EQ PUSH2 0x17C JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x20 PUSH1 0x37 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH9 0x3635C9ADC5DEA00000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x20 PUSH1 0x3E SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x199 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1C ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x20 PUSH1 0x36 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x20 PUSH1 0x3D SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH10 0x21E19E0C9BAB2400000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x199 JUMPI PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x32E JUMPI PUSH1 0xB PUSH0 MSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x13 SLOAD DUP2 LT ISZERO PUSH2 0x199 JUMPI PUSH1 0x13 SLOAD DUP2 LT ISZERO PUSH2 0x32E JUMPI PUSH1 0x13 PUSH0 MSTORE PUSH32 0x66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A090 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x20 PUSH1 0x3F SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x199 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x24 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x20 PUSH2 0x41B PUSH2 0x415 CALLDATASIZE PUSH2 0xDBA JUMP JUMPDEST SWAP1 PUSH2 0xF02 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x20 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x93A80 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xA DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH2 0x4B0 CALLDATASIZE PUSH2 0xDBA JUMP JUMPDEST SWAP1 PUSH2 0x4B9 PUSH2 0xFAB JUMP JUMPDEST DUP1 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH2 0x4D8 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND CALLER EQ PUSH2 0xDD0 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP1 PUSH2 0x8E2 JUMPI JUMPDEST DUP1 PUSH2 0x8C4 JUMPI JUMPDEST DUP1 PUSH2 0x8B9 JUMPI JUMPDEST PUSH2 0x4F6 SWAP1 PUSH2 0xE0F JUMP JUMPDEST DUP1 PUSH0 MSTORE PUSH1 0x42 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 DUP3 PUSH0 MSTORE PUSH1 0x40 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP2 PUSH1 0x1 PUSH1 0xFF PUSH1 0x5 DUP4 ADD SLOAD AND ISZERO ISZERO SUB PUSH2 0x883 JUMPI PUSH1 0x4 DUP2 ADD DUP5 PUSH0 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH2 0x83E JUMPI PUSH1 0x3 DUP5 ADD SLOAD SWAP4 DUP5 ISZERO SWAP3 PUSH2 0x54B DUP5 ISZERO PUSH2 0xE74 JUMP JUMPDEST DUP7 PUSH1 0x2 PUSH1 0x4 DUP5 ADD SWAP3 PUSH2 0x563 DUP3 DUP6 SLOAD SWAP7 ADD SLOAD DUP7 LT PUSH2 0xEB5 JUMP JUMPDEST ADD SLOAD GT PUSH2 0x801 JUMPI PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x7ED JUMPI SSTORE PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP5 DUP3 MSTORE PUSH1 0xD SWAP1 SWAP3 MSTORE KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x7B9 JUMPI PUSH2 0x786 JUMPI DUP2 PUSH0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0xB PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x5C6 DUP6 DUP3 SLOAD PUSH2 0xEF5 JUMP JUMPDEST DUP2 SSTORE ADD PUSH2 0x5D4 DUP5 DUP3 SLOAD PUSH2 0xEF5 JUMP JUMPDEST SWAP1 SSTORE DUP2 PUSH0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x5EF DUP3 PUSH2 0xFFF JUMP JUMPDEST DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP6 DUP2 MSTORE PUSH1 0x40 DUP4 ADD PUSH0 DUP2 MSTORE PUSH1 0x60 DUP5 ADD SWAP1 TIMESTAMP DUP3 MSTORE PUSH1 0x80 DUP6 ADD SWAP3 PUSH1 0xD DUP5 MSTORE DUP5 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x772 JUMPI PUSH1 0x1 DUP2 ADD DUP1 DUP8 SSTORE DUP2 LT ISZERO PUSH2 0x32E JUMPI PUSH1 0x4 SWAP6 PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 PUSH0 KECCAK256 SWAP2 MUL ADD SWAP6 MLOAD DUP7 SSTORE MLOAD PUSH1 0x1 DUP7 ADD SSTORE MLOAD PUSH1 0x2 DUP6 ADD SSTORE MLOAD PUSH1 0x3 DUP5 ADD SSTORE MLOAD SWAP2 ADD SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND PUSH1 0x20 PUSH0 PUSH1 0x40 MLOAD DUP3 DUP2 ADD SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP3 MSTORE DUP6 PUSH1 0x24 DUP3 ADD MSTORE DUP8 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x44 DUP2 MSTORE PUSH2 0x68F PUSH1 0x64 DUP3 PUSH2 0x101B JUMP JUMPDEST MLOAD SWAP1 DUP3 DUP6 GAS CALL ISZERO PUSH2 0x767 JUMPI PUSH0 MLOAD RETURNDATASIZE PUSH2 0x75E JUMPI POP DUP1 EXTCODESIZE ISZERO JUMPDEST PUSH2 0x74C JUMPI POP PUSH32 0x8211032682F8FD8BE8FF252E0A106CDB6AD4B10427152B4D93C2BC9A1F11C3C2 SWAP4 PUSH2 0x743 SWAP2 DUP4 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND SWAP1 PUSH32 0xE17B61D324CE17328F433D0AB62581C0F0AA997312BAE80FBDFCD2AA9B91D6E3 PUSH1 0x60 PUSH1 0x40 MLOAD DUP9 DUP2 MSTORE PUSH0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x40 DUP3 ADD MSTORE LOG3 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 TIMESTAMP SWAP3 DUP6 SWAP1 SWAP5 SWAP4 SWAP3 PUSH1 0x60 SWAP3 PUSH1 0x80 DUP4 ADD SWAP7 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG1 PUSH1 0x1 PUSH0 SSTORE STOP JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x6A6 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x16995C9BC8185B5BDD5B9D PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x24B73B30B634B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4E6F7420656C696769626C6520746F20636C61696D PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C726561647920636C61696D656420666F72207468697320726F756E640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x2737BA1038BAB0B634B334B2B21 PUSH1 0x95 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x3D SLOAD DUP3 LT PUSH2 0x4ED JUMP JUMPDEST POP DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD AND ISZERO ISZERO EQ PUSH2 0x4E7 JUMP JUMPDEST POP DUP2 ISZERO ISZERO PUSH2 0x4E1 JUMP JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x199 JUMPI PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x32E JUMPI PUSH1 0x7 PUSH0 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xF DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH8 0xDE0B6B3A7640000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x15180 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x20 PUSH1 0x38 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x278D00 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x14 SLOAD DUP2 LT ISZERO PUSH2 0x199 JUMPI PUSH1 0x14 SLOAD DUP2 LT ISZERO PUSH2 0x32E JUMPI PUSH1 0x14 PUSH0 MSTORE PUSH32 0xCE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4EC ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x199 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x15 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH2 0xA95 CALLDATASIZE PUSH2 0xDBA JUMP JUMPDEST SWAP1 PUSH2 0xA9E PUSH2 0xFAB JUMP JUMPDEST DUP1 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH2 0xABD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND CALLER EQ PUSH2 0xDD0 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP1 PUSH2 0xD97 JUMPI JUMPDEST DUP1 PUSH2 0xD79 JUMPI JUMPDEST DUP1 PUSH2 0xD6E JUMPI JUMPDEST PUSH2 0xADB SWAP1 PUSH2 0xE0F JUMP JUMPDEST DUP2 PUSH0 MSTORE PUSH1 0x3B PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 DUP3 PUSH0 MSTORE PUSH1 0x39 PUSH1 0x20 MSTORE PUSH1 0x4 PUSH1 0x40 PUSH0 KECCAK256 SWAP3 ADD SWAP2 DUP3 SLOAD PUSH1 0x1 PUSH1 0xFF DUP3 PUSH1 0x8 SHR AND ISZERO ISZERO EQ SWAP1 DUP2 PUSH2 0xD62 JUMPI JUMPDEST POP ISZERO PUSH2 0xD1E JUMPI PUSH1 0x3 DUP2 ADD SLOAD SWAP3 DUP4 ISZERO SWAP2 PUSH2 0xB31 DUP4 ISZERO PUSH2 0xE74 JUMP JUMPDEST PUSH1 0x4 DUP2 ADD PUSH2 0xB46 PUSH1 0x2 DUP3 SLOAD SWAP4 ADD SLOAD DUP4 LT PUSH2 0xEB5 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x7ED JUMPI SSTORE DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH0 DUP3 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x7B9 JUMPI PUSH2 0x786 JUMPI DUP2 PUSH0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0xA PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0xB98 DUP6 DUP3 SLOAD PUSH2 0xEF5 JUMP JUMPDEST DUP2 SSTORE ADD PUSH2 0xBA6 DUP5 DUP3 SLOAD PUSH2 0xEF5 JUMP JUMPDEST SWAP1 SSTORE DUP2 PUSH0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0xBC1 DUP3 PUSH2 0xFFF JUMP JUMPDEST DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP6 DUP2 MSTORE PUSH1 0x40 DUP4 ADD PUSH0 DUP2 MSTORE PUSH1 0x60 DUP5 ADD SWAP1 TIMESTAMP DUP3 MSTORE PUSH1 0x80 DUP6 ADD SWAP3 PUSH1 0xC DUP5 MSTORE DUP5 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x772 JUMPI PUSH1 0x1 DUP2 ADD DUP1 DUP8 SSTORE DUP2 LT ISZERO PUSH2 0x32E JUMPI PUSH1 0x4 SWAP6 PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 PUSH0 KECCAK256 SWAP2 MUL ADD SWAP6 MLOAD DUP7 SSTORE MLOAD PUSH1 0x1 DUP7 ADD SSTORE MLOAD PUSH1 0x2 DUP6 ADD SSTORE MLOAD PUSH1 0x3 DUP5 ADD SSTORE MLOAD SWAP2 ADD SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND PUSH1 0x20 PUSH0 PUSH1 0x40 MLOAD DUP3 DUP2 ADD SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP3 MSTORE DUP6 PUSH1 0x24 DUP3 ADD MSTORE DUP8 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x44 DUP2 MSTORE PUSH2 0xC61 PUSH1 0x64 DUP3 PUSH2 0x101B JUMP JUMPDEST MLOAD SWAP1 DUP3 DUP6 GAS CALL ISZERO PUSH2 0x767 JUMPI PUSH0 MLOAD RETURNDATASIZE PUSH2 0xD15 JUMPI POP DUP1 EXTCODESIZE ISZERO JUMPDEST PUSH2 0x74C JUMPI POP PUSH32 0x96EE4F374D0394C5383B347DC3B7EC04A1ECEDDCD2E25521157BCE21C42B24D5 SWAP4 PUSH2 0x743 SWAP2 DUP4 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND SWAP1 PUSH32 0xE17B61D324CE17328F433D0AB62581C0F0AA997312BAE80FBDFCD2AA9B91D6E3 PUSH1 0x60 PUSH1 0x40 MLOAD DUP9 DUP2 MSTORE PUSH0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x40 DUP3 ADD MSTORE LOG3 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 TIMESTAMP SWAP3 DUP6 SWAP1 SWAP5 SWAP4 SWAP3 PUSH1 0x60 SWAP3 PUSH1 0x80 DUP4 ADD SWAP7 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0xC78 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F74207175616C6966696564206F7220616C726561647920636C61696D6564 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0xFF SWAP2 POP AND ISZERO DUP6 PUSH2 0xB18 JUMP JUMPDEST POP PUSH1 0x36 SLOAD DUP3 LT PUSH2 0xAD2 JUMP JUMPDEST POP DUP2 PUSH0 MSTORE PUSH1 0x39 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD AND ISZERO ISZERO EQ PUSH2 0xACC JUMP JUMPDEST POP DUP2 ISZERO ISZERO PUSH2 0xAC6 JUMP JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI DUP1 PUSH2 0x2710 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xDD7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x139BDD081E5BDD5C881858D8DBDD5B9D PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xE16 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420757365724964206F7220726F756E644964206F7220726F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x1B99081BDC881B9BDD0818DB1BDCD959 PUSH1 0x82 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xE7B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4E6F2072657761726420746F20636C61696D PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xEBC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x105B1B081D5CD95C9CC818DB185A5B5959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x7ED JUMPI JUMP JUMPDEST PUSH0 MSTORE PUSH1 0x42 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0xFF PUSH1 0x8 DUP4 ADD SLOAD AND ISZERO SWAP3 DUP4 ISZERO PUSH2 0xF9E JUMPI JUMPDEST DUP4 ISZERO PUSH2 0xF8E JUMPI JUMPDEST DUP4 ISZERO PUSH2 0xF7F JUMPI JUMPDEST DUP4 ISZERO PUSH2 0xF64 JUMPI JUMPDEST POP POP DUP2 ISZERO PUSH2 0xF57 JUMPI JUMPDEST POP PUSH2 0xF53 JUMPI PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x3 SWAP2 POP ADD SLOAD ISZERO PUSH0 PUSH2 0xF49 JUMP JUMPDEST PUSH1 0x4 SWAP3 SWAP4 POP PUSH0 MSTORE ADD PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND SWAP1 PUSH0 DUP1 PUSH2 0xF40 JUMP JUMPDEST DUP1 SWAP4 POP PUSH1 0x2 DUP3 ADD SLOAD GT SWAP3 PUSH2 0xF39 JUMP JUMPDEST PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0xFF AND ISZERO SWAP4 POP PUSH2 0xF32 JUMP JUMPDEST PUSH1 0x3D SLOAD DUP2 LT ISZERO SWAP4 POP PUSH2 0xF2B JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD EQ PUSH2 0xFBA JUMPI PUSH1 0x2 PUSH0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x772 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x772 JUMPI PUSH1 0x40 MSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x7E67FED5DC5A9E9B70A1D55783BD7A20F5C4120C67 0x4C LOG0 SGT 0xB6 PUSH23 0xEFA1B871EC64736F6C634300081E003300000000000000 ",
							"sourceMap": "90:8053:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;90:8053:7;;;;;6974:38:8;90:8053:7;;;;;;;;;;;;;;;;;-1:-1:-1;;90:8053:7;;;;;;;;-1:-1:-1;;;;;90:8053:7;;;;;;;;;;;;;;-1:-1:-1;;90:8053:7;;;;;534:24:8;90:8053:7;;;;;;;;;;;;;-1:-1:-1;;90:8053:7;;;;;;;6914:7:8;90:8053:7;;;;;;;;;-1:-1:-1;;90:8053:7;;;;460:30:8;90:8053:7;;;-1:-1:-1;;;;;90:8053:7;;;;;;;;;;;;;;-1:-1:-1;;90:8053:7;;;;;8433:39:8;90:8053:7;;;;;;;;;;;;;-1:-1:-1;;90:8053:7;;;;;;;5304:64:8;;;;;90:8053:7;;5304:64:8;90:8053:7;;;;;;;;;;;;;;-1:-1:-1;;90:8053:7;;;;;6933:34:8;90:8053:7;;;;;;;;;;;;;-1:-1:-1;;90:8053:7;;;;;8391:35:8;90:8053:7;;;;;;;;;;;;;-1:-1:-1;;90:8053:7;;;;;;;8370:8:8;90:8053:7;;;;;;;;;-1:-1:-1;;90:8053:7;;;;;;1288:540:8;90:8053:7;1288:540:8;;;;;;90:8053:7;;;;;;1288:540:8;90:8053:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;90:8053:7;;;;;565:22:8;90:8053:7;;;;;;;;;;;;;-1:-1:-1;;90:8053:7;;;;;;5028:93:8;90:8053:7;5028:93:8;;;;;;90:8053:7;;;;;;5028:93:8;90:8053:7;;;;;;;;;;;;;;;;;;;-1:-1:-1;;90:8053:7;;;;;8479:34:8;90:8053:7;;;;;;;;;;;;;-1:-1:-1;;90:8053:7;;;;;;;5375:61:8;;;;;90:8053:7;;5375:61:8;90:8053:7;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;90:8053:7;;;;422:28:8;90:8053:7;;;-1:-1:-1;;;;;90:8053:7;;;;;;;;;;;;;;-1:-1:-1;;90:8053:7;;;;;1131:34:8;90:8053:7;;;;;;;;;;;;;-1:-1:-1;;90:8053:7;;;;;;;6861:6:8;90:8053:7;;;;;;;;;-1:-1:-1;;90:8053:7;;;;;;;848:2:8;90:8053:7;;;;;;;;;;:::i;:::-;2227:103:3;;;:::i;:::-;90:8053:7;;;3335:5;90:8053;;3406:54;90:8053;;;;;;;;;;3429:10;3414:25;3406:54;:::i;:::-;3479:11;;;:27;;;90:8053;3479:73;;;90:8053;3479:107;;;90:8053;3471:168;;;:::i;:::-;90:8053;;;3692:21;90:8053;;;;;;;;;;;;;;;3826:23;3853:4;90:8053;3826:23;;;90:8053;;;;3826:31;90:8053;;;3896:21;;90:8053;;;;;;;;;;;;;;3981:33;;;90:8053;3981:37;;;;3973:68;3981:37;;3973:68;:::i;:::-;4060:32;4095:30;90:8053;4060:32;;90:8053;4052:95;90:8053;;;4095:30;;90:8053;4060:65;;4052:95;:::i;:::-;4166:28;90:8053;4166:40;90:8053;;3853:4;90:8053;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;90:8053:7;3853:4;90:8053;;;;;;3335:5;90:8053;;;;;-1:-1:-1;;;;;90:8053:7;;10546:25:8;;90:8053:7;;;;;;;10774:11:8;90:8053:7;;11462:2:8;90:8053:7;;;10801:29:8;90:8053:7;;;10801:29:8;:::i;:::-;90:8053:7;;11604:21:8;:32;90:8053:7;;;11604:32:8;:::i;:::-;90:8053:7;;;;;11845:13:8;90:8053:7;;;;;;;;;;;:::i;:::-;;;;;11873:184:8;;90:8053:7;;;;11873:184:8;;90:8053:7;;;11873:184:8;;;12000:15;;90:8053:7;;11873:184:8;;;90:8053:7;3335:5;90:8053;;;;-1:-1:-1;;;90:8053:7;;;;;3853:4;90:8053;;;;;;;;;;;;;;3826:23;90:8053;;;;;;;;;;;3853:4;90:8053;;;;4095:30;90:8053;;;;3981:33;90:8053;;;;;;;;;;;;3853:4;90:8053;;;;;;1328:43:5;;;90:8053:7;;;;1328:43:5;;;;;;90:8053:7;;;;;;;1328:43:5;;;;;;:::i;:::-;8507:421;;;;;;;;;90:8053:7;8507:421:5;;8942:15;;8960:26;;;:31;8942:68;8938:146;;90:8053:7;4494:63;90:8053;4494:63;90:8053;;;;3335:5;90:8053;;;;;;;;;;;;;12166:95:8;11873:184;90:8053:7;;;;;;;;;;3335:5;90:8053;;;;12166:95:8;90:8053:7;;12000:15:8;;;;4494:63:7;;90:8053;;;;;;;;;;;;;;;;;;;;;;;4494:63;;;;3853:4;90:8053;;;8938:146:5;9033:40;;;90:8053:7;9033:40:5;90:8053:7;;1328:43:5;90:8053:7;9033:40:5;8942:68;3853:4:7;8994:16:5;;8942:68;;8507:421;90:8053:7;8507:421:5;;90:8053:7;8507:421:5;;;;;90:8053:7;;;;;;;;;;;;;;;-1:-1:-1;;;90:8053:7;;;;;;;;;;;;-1:-1:-1;;;90:8053:7;;;;;;;;;;-1:-1:-1;;;90:8053:7;;;;;;;;;;;;-1:-1:-1;;;90:8053:7;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;90:8053:7;;;;;;;;;;;;-1:-1:-1;;;90:8053:7;;;;;;;;;;-1:-1:-1;;;90:8053:7;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;90:8053:7;;;;;;;;;;;;-1:-1:-1;;;90:8053:7;;;;;;;3479:107;-1:-1:-1;3567:19:7;90:8053;3556:30;;3479:107;;:73;90:8053;;;;;;;3548:4;90:8053;3510:34;90:8053;;;3510:34;90:8053;;;;3510:42;3479:73;;:27;3494:12;;;;3479:27;;90:8053;;;;;;-1:-1:-1;;90:8053:7;;;;;;864:31:8;90:8053:7;864:31:8;;;;;;90:8053:7;;;;;;864:31:8;90:8053:7;;;;;;;;;;;;;;;;;;;-1:-1:-1;;90:8053:7;;;;;;;789:2:8;90:8053:7;;;;;;;;;-1:-1:-1;;90:8053:7;;;;;;;1120:4:8;90:8053:7;;;;;;;;;-1:-1:-1;;90:8053:7;;;;;;;731:6:8;90:8053:7;;;;;;;;;-1:-1:-1;;90:8053:7;;;;;7021:33:8;90:8053:7;;;;;;;;;;;;;-1:-1:-1;;90:8053:7;;;;;;;;-1:-1:-1;;;;;90:8053:7;;;;;;;;;;;;;;-1:-1:-1;;90:8053:7;;;;;;;8318:7:8;90:8053:7;;;;;;;;;-1:-1:-1;;90:8053:7;;;;;;5128:105:8;90:8053:7;5128:105:8;;;;;;90:8053:7;;;;;;5128:105:8;90:8053:7;;;;;;;;;;;;;;;;;;;-1:-1:-1;;90:8053:7;;;;;;;5240:57:8;;;;;90:8053:7;;5240:57:8;90:8053:7;;;;;;;;;;;;;;;:::i;:::-;2227:103:3;;;:::i;:::-;90:8053:7;;;6924:5;90:8053;;6995:54;90:8053;;;;;;;;;;7018:10;7003:25;6995:54;:::i;:::-;7068:11;;;:27;;;90:8053;7068:72;;;90:8053;7068:105;;;90:8053;7060:166;;;:::i;:::-;90:8053;;;7272:13;90:8053;;;;;;;;;;;;;;;;;7357:16;90:8053;;;;;;7402:25;;90:8053;;;7431:4;90:8053;;;;;;;7402:33;:69;;;;90:8053;;;;;7527:31;;;90:8053;7527:35;;;;7519:66;7527:35;;7519:66;:::i;:::-;90:8053;7604:30;;7596:91;7637:28;90:8053;;7637:28;;90:8053;7604:61;;7596:91;:::i;:::-;7431:4;90:8053;;;;;;;;;;-1:-1:-1;;90:8053:7;7431:4;90:8053;;;-1:-1:-1;90:8053:7;;;6924:5;90:8053;;;;;;-1:-1:-1;;;;;90:8053:7;;10546:25:8;;90:8053:7;;;;;;;10774:11:8;90:8053:7;;11399:2:8;90:8053:7;;;10801:29:8;90:8053:7;;;10801:29:8;:::i;:::-;90:8053:7;;11532:26:8;:37;90:8053:7;;;11532:37:8;:::i;:::-;90:8053:7;;;;;11845:13:8;90:8053:7;;;;;;;;;;;:::i;:::-;;;;;11873:184:8;;90:8053:7;;;;11873:184:8;;90:8053:7;;;11873:184:8;;;12000:15;;90:8053:7;;11873:184:8;;;90:8053:7;7904:2;90:8053;;;;-1:-1:-1;;;90:8053:7;;;;;7431:4;90:8053;;;;;;;;;;;;;;;;;;;;;;;;;;7431:4;90:8053;;;;7637:28;90:8053;;;;7527:31;90:8053;;;;;;;;;;;;7431:4;90:8053;;;;;;1328:43:5;;;90:8053:7;;;;1328:43:5;;;;;;90:8053:7;;;;;;;1328:43:5;;;;;;:::i;:::-;8507:421;;;;;;;;;90:8053:7;8507:421:5;;8942:15;;8960:26;;;:31;8942:68;8938:146;;90:8053:7;7939:62;90:8053;7939:62;90:8053;;;;6924:5;90:8053;;;;;;;;;;;;;12166:95:8;11873:184;90:8053:7;;;;;;;;;;7904:2;90:8053;;;;12166:95:8;90:8053:7;;12000:15:8;;;;7939:62:7;;90:8053;;;;;;;;;;;;;;;;;;;;;;;8942:68:5;7431:4:7;8994:16:5;;8942:68;;90:8053:7;;;;;;;;;;;;;;;;;;;;;;;;;7402:69;90:8053;;;;;7402:69;;;7068:105;-1:-1:-1;7155:18:7;90:8053;7144:29;;7068:105;;:72;90:8053;;;;7099:16;90:8053;;7136:4;90:8053;7099:33;90:8053;;;7099:33;90:8053;;;;7099:41;7068:72;;:27;7083:12;;;;7068:27;;90:8053;;;;;;-1:-1:-1;;90:8053:7;;;;;683:5:8;90:8053:7;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;90:8053:7;;;;;;;;;;;;-1:-1:-1;;;90:8053:7;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;90:8053:7;;;;;;;;;;;;;;;;;-1:-1:-1;;;90:8053:7;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;90:8053:7;;;;;;;;;;;;-1:-1:-1;;;90:8053:7;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;90:8053:7;;;;;;;;;;;;-1:-1:-1;;;90:8053:7;;;;;;;;;;;;;;;;;:::o;2652:548::-;90:8053;;2789:21;90:8053;;;;;;;;;;;;;;2910:14;90:8053;2910:14;;;90:8053;;2909:15;90:8053;;;2909:59;;2652:548;2909:96;;;;2652:548;2909:148;;;;2652:548;2909:192;;;;2652:548;2909:231;;;;;;2652:548;2895:284;;;3192:4;2652:548;:::o;2895:284::-;90:8053;3159:12;:::o;2909:231::-;3114:21;;;;90:8053;3114:26;2909:231;;;:192;3070:21;90:8053;;;;;3070:21;90:8053;;;;;;;;2909:192;;;;;:148;3018:28;;;;;;90:8053;3018:39;2909:148;;;:96;2982:23;;;90:8053;;;2981:24;;-1:-1:-1;2909:96:7;;:59;2949:19;90:8053;2937:31;;;;-1:-1:-1;2909:59:7;;2336:287:3;1759:1;2468:7;90:8053:7;2468:19:3;1759:1;;;2468:7;90:8053:7;2336:287:3:o;1759:1::-;90:8053:7;;-1:-1:-1;;;1759:1:3;;;;;;;;;;;90:8053:7;1759:1:3;90:8053:7;;;1759:1:3;;;;90:8053:7;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "842200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ACC_PRECISION()": "329",
								"MONTH_DURATION()": "241",
								"PERCENTS_DIVIDER()": "148",
								"ROI_CAP_DIVIDER()": "417",
								"ROI_CAP_MULTIPLIER()": "351",
								"TIME_STEP()": "307",
								"WEEK_DURATION()": "439",
								"WeeklyCapping()": "769",
								"WeeklyTotalReward()": "2388",
								"canClaimMonthlyReward(uint256,uint256)": "13683",
								"claimMonthlyContestReward(uint256,uint256)": "infinite",
								"claimWeeklyContestReward(uint256,uint256)": "infinite",
								"communityAccPerUser()": "2564",
								"creatorWallet()": "2610",
								"currentMonthlyRound()": "2762",
								"currentMonthlyStartTime()": "2828",
								"currentWeeklyRound()": "2784",
								"currentWeeklyStartTime()": "2935",
								"defaultRefId()": "2894",
								"glbBoosterPackages(uint256)": "6593",
								"minLevelForGlbBooster(uint256)": "2844",
								"minLevelForPool(uint256)": "2338",
								"minPoolForGlbBooster(uint256)": "2668",
								"monthlyCapping()": "637",
								"monthlyTotalReward()": "2652",
								"packages(uint256)": "6989",
								"poolPackages(uint256)": "6945",
								"registeredUserIds(uint256)": "6747",
								"systemMaintance()": "2874",
								"teamDevelopment()": "2940",
								"totalUsers()": "2696",
								"usdt()": "2390"
							},
							"internal": {
								"_closeMonthlyContest()": "infinite",
								"_closeWeeklyContest()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH",
									"source": 7,
									"value": "1E0"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1324,
									"end": 1333,
									"name": "PUSH",
									"source": 8,
									"value": "D02AB486CEDC0000"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1356,
									"end": 1365,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C40000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1388,
									"end": 1397,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B1880000"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1420,
									"end": 1430,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D63100000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1453,
									"end": 1463,
									"name": "PUSH",
									"source": 8,
									"value": "AD78EBC5AC6200000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1486,
									"end": 1496,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C400000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1519,
									"end": 1529,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B18800000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1552,
									"end": 1563,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D631000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1586,
									"end": 1597,
									"name": "PUSH",
									"source": 8,
									"value": "AD78EBC5AC62000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1620,
									"end": 1631,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C4000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1654,
									"end": 1666,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B188000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "140"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1689,
									"end": 1701,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D6310000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1724,
									"end": 1736,
									"name": "PUSH",
									"source": 8,
									"value": "AD78EBC5AC620000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "180"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1759,
									"end": 1772,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C40000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "1A0"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1795,
									"end": 1808,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B1880000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "1C0"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "F"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "F"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "tag",
									"source": -1,
									"value": "9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "F"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 90,
									"end": 8143,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5058,
									"end": 5063,
									"name": "PUSH",
									"source": 8,
									"value": "410D586A20A4C0000"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5065,
									"end": 5071,
									"name": "PUSH",
									"source": 8,
									"value": "1043561A8829300000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5073,
									"end": 5080,
									"name": "PUSH",
									"source": 8,
									"value": "410D586A20A4C00000"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5082,
									"end": 5089,
									"name": "PUSH",
									"source": 8,
									"value": "1043561A88293000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5091,
									"end": 5099,
									"name": "PUSH",
									"source": 8,
									"value": "410D586A20A4C000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5101,
									"end": 5109,
									"name": "PUSH",
									"source": 8,
									"value": "1043561A882930000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5111,
									"end": 5120,
									"name": "PUSH",
									"source": 8,
									"value": "410D586A20A4C0000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "PUSH",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "PUSH",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "PUSH",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "tag",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 90,
									"end": 8143,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1420,
									"end": 1430,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D63100000"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1453,
									"end": 1463,
									"name": "PUSH",
									"source": 8,
									"value": "AD78EBC5AC6200000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1486,
									"end": 1496,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C400000"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1519,
									"end": 1529,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B18800000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1552,
									"end": 1563,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D631000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1586,
									"end": 1597,
									"name": "PUSH",
									"source": 8,
									"value": "AD78EBC5AC62000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1620,
									"end": 1631,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C4000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1654,
									"end": 1666,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B188000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "PUSH",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "PUSH",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "PUSH",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 90,
									"end": 8143,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5274,
									"end": 5275,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5283,
									"end": 5284,
									"name": "PUSH",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5290,
									"end": 5292,
									"name": "PUSH",
									"source": 8,
									"value": "D"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "F"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 90,
									"end": 8143,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5344,
									"end": 5345,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5350,
									"end": 5351,
									"name": "PUSH",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5283,
									"end": 5284,
									"name": "PUSH",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5362,
									"end": 5364,
									"name": "PUSH",
									"source": 8,
									"value": "A"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 90,
									"end": 8143,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 191,
									"end": 206,
									"name": "TIMESTAMP",
									"source": 7
								},
								{
									"begin": 7011,
									"end": 7012,
									"name": "PUSH",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 191,
									"end": 206,
									"name": "TIMESTAMP",
									"source": 7
								},
								{
									"begin": 8471,
									"end": 8472,
									"name": "PUSH",
									"source": 8,
									"value": "3E"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7053,
									"end": 7054,
									"name": "PUSH",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 6966,
									"end": 6967,
									"name": "PUSH",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 8512,
									"end": 8513,
									"name": "PUSH",
									"source": 8,
									"value": "3F"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 8425,
									"end": 8426,
									"name": "PUSH",
									"source": 8,
									"value": "3D"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "RETURN",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "PUSH",
									"source": 8,
									"value": "1C"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "PUSH",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "50"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "PUSH",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH",
									"source": 7,
									"value": "CE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4EC"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH",
									"source": 7,
									"value": "CE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4F4"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 90,
									"end": 8143,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "tag",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "50"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "PUSH",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH",
									"source": 7,
									"value": "66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A090"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH",
									"source": 7,
									"value": "66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A097"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 90,
									"end": 8143,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "50"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH",
									"source": 7,
									"value": "175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH",
									"source": 7,
									"value": "175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DC8"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 90,
									"end": 8143,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "tag",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "tag",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 90,
									"end": 8143,
									"name": "JUMP",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220747e67fed5dc5a9e9b70a1d55783bd7a20f5c4120c674ca013b676efa1b871ec64736f6c634300081e0033",
									".code": [
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "1C234A8"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "16298056"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "2132D204"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "2350268F"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "2A891534"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "2F48AB7D"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "3080B5BC"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "32BC298C"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "32FCD966"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "375B43B4"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "39AB3603"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "4C2215E3"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "58C7D352"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "76F5F700"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "78F6AD6D"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "7CDC65F2"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "7D846E38"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "956A3228"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "A59D17D1"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "AE4708DC"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "BFF1F9E1"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "C216212A"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "C8DF2908"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "C9ED0708"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "CA8E9121"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "D0A2FD79"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "E898FC38"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "E9E34A16"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "EBE0FF15"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "EC597E6F"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "F5D74D93"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "FDDC806F"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6974,
											"end": 7012,
											"name": "PUSH",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 534,
											"end": 558,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6914,
											"end": 6921,
											"name": "PUSH",
											"source": 8,
											"value": "3635C9ADC5DEA00000"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 460,
											"end": 490,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8433,
											"end": 8472,
											"name": "PUSH",
											"source": 8,
											"value": "3E"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 5304,
											"end": 5368,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5304,
											"end": 5368,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5304,
											"end": 5368,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5304,
											"end": 5368,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 5304,
											"end": 5368,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5304,
											"end": 5368,
											"name": "PUSH",
											"source": 8,
											"value": "1C"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6933,
											"end": 6967,
											"name": "PUSH",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8391,
											"end": 8426,
											"name": "PUSH",
											"source": 8,
											"value": "3D"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8370,
											"end": 8378,
											"name": "PUSH",
											"source": 8,
											"value": "21E19E0C9BAB2400000"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1288,
											"end": 1828,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1288,
											"end": 1828,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1288,
											"end": 1828,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1288,
											"end": 1828,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1288,
											"end": 1828,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1288,
											"end": 1828,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1288,
											"end": 1828,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1288,
											"end": 1828,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5028,
											"end": 5121,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5028,
											"end": 5121,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5028,
											"end": 5121,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5028,
											"end": 5121,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5028,
											"end": 5121,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 5028,
											"end": 5121,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5028,
											"end": 5121,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5028,
											"end": 5121,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A090"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8479,
											"end": 8513,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 5375,
											"end": 5436,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5375,
											"end": 5436,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5375,
											"end": 5436,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5375,
											"end": 5436,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 5375,
											"end": 5436,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5375,
											"end": 5436,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 8143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 90,
											"end": 8143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 422,
											"end": 450,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1131,
											"end": 1165,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6861,
											"end": 6867,
											"name": "PUSH",
											"source": 8,
											"value": "93A80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 848,
											"end": 850,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 8143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3335,
											"end": 3340,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3406,
											"end": 3460,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3429,
											"end": 3439,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3414,
											"end": 3439,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3406,
											"end": 3460,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3406,
											"end": 3460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3406,
											"end": 3460,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 3406,
											"end": 3460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3479,
											"end": 3490,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3479,
											"end": 3490,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3479,
											"end": 3490,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3479,
											"end": 3506,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3479,
											"end": 3506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 3479,
											"end": 3506,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3479,
											"end": 3552,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3479,
											"end": 3552,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 3479,
											"end": 3552,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3479,
											"end": 3586,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3479,
											"end": 3586,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 3479,
											"end": 3586,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3471,
											"end": 3639,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 3471,
											"end": 3639,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3471,
											"end": 3639,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3471,
											"end": 3639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3471,
											"end": 3639,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 3471,
											"end": 3639,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3692,
											"end": 3713,
											"name": "PUSH",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3849,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3853,
											"end": 3857,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3826,
											"end": 3849,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 3826,
											"end": 3849,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3849,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3857,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3896,
											"end": 3917,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3896,
											"end": 3917,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3981,
											"end": 4014,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3981,
											"end": 4014,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3981,
											"end": 4014,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3981,
											"end": 4018,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3981,
											"end": 4018,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3981,
											"end": 4018,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3981,
											"end": 4018,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3973,
											"end": 4041,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 3981,
											"end": 4018,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3981,
											"end": 4018,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3973,
											"end": 4041,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3973,
											"end": 4041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3973,
											"end": 4041,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 3973,
											"end": 4041,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4060,
											"end": 4092,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4095,
											"end": 4125,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4060,
											"end": 4092,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4060,
											"end": 4092,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4052,
											"end": 4147,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4095,
											"end": 4125,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 4095,
											"end": 4125,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4060,
											"end": 4125,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4060,
											"end": 4125,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4052,
											"end": 4147,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 4052,
											"end": 4147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4052,
											"end": 4147,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 4052,
											"end": 4147,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4166,
											"end": 4194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4166,
											"end": 4206,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3853,
											"end": 3857,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3853,
											"end": 3857,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3335,
											"end": 3340,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10546,
											"end": 10571,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10546,
											"end": 10571,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10774,
											"end": 10785,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11462,
											"end": 11464,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 10801,
											"end": 10830,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10801,
											"end": 10830,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 10801,
											"end": 10830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10801,
											"end": 10830,
											"name": "tag",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 10801,
											"end": 10830,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 11604,
											"end": 11625,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11604,
											"end": 11636,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 11604,
											"end": 11636,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 11604,
											"end": 11636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11604,
											"end": 11636,
											"name": "tag",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 11604,
											"end": 11636,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11845,
											"end": 11858,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 90,
											"end": 8143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11873,
											"end": 12057,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11873,
											"end": 12057,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11873,
											"end": 12057,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11873,
											"end": 12057,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11873,
											"end": 12057,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 11873,
											"end": 12057,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11873,
											"end": 12057,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12000,
											"end": 12015,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12000,
											"end": 12015,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11873,
											"end": 12057,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 11873,
											"end": 12057,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11873,
											"end": 12057,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3335,
											"end": 3340,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3853,
											"end": 3857,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3849,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3853,
											"end": 3857,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4095,
											"end": 4125,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3981,
											"end": 4014,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3853,
											"end": 3857,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4494,
											"end": 4557,
											"name": "PUSH",
											"source": 7,
											"value": "8211032682F8FD8BE8FF252E0A106CDB6AD4B10427152B4D93C2BC9A1F11C3C2"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4494,
											"end": 4557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3335,
											"end": 3340,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12166,
											"end": 12261,
											"name": "PUSH",
											"source": 8,
											"value": "E17B61D324CE17328F433D0AB62581C0F0AA997312BAE80FBDFCD2AA9B91D6E3"
										},
										{
											"begin": 11873,
											"end": 12057,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3335,
											"end": 3340,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12166,
											"end": 12261,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 12000,
											"end": 12015,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 12000,
											"end": 12015,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12000,
											"end": 12015,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 12000,
											"end": 12015,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 4494,
											"end": 4557,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4494,
											"end": 4557,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4494,
											"end": 4557,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 4494,
											"end": 4557,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4494,
											"end": 4557,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4494,
											"end": 4557,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4494,
											"end": 4557,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 3853,
											"end": 3857,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "5274AFE7"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3853,
											"end": 3857,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "16995C9BC8185B5BDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "AA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24B73B30B634B2103AB9B2B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F7420656C696769626C6520746F20636C61696D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "1E"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "416C726561647920636C61696D656420666F72207468697320726F756E640000"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2737BA1038BAB0B634B334B2B21"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3479,
											"end": 3586,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 3479,
											"end": 3586,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3567,
											"end": 3586,
											"name": "PUSH",
											"source": 7,
											"value": "3D"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3586,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3586,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3479,
											"end": 3586,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 3479,
											"end": 3586,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3479,
											"end": 3552,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 3479,
											"end": 3552,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3548,
											"end": 3552,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3510,
											"end": 3544,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3510,
											"end": 3544,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3510,
											"end": 3552,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3479,
											"end": 3552,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 3479,
											"end": 3552,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3479,
											"end": 3506,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 3479,
											"end": 3506,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3494,
											"end": 3506,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3494,
											"end": 3506,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3494,
											"end": 3506,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3494,
											"end": 3506,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3479,
											"end": 3506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 3479,
											"end": 3506,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 864,
											"end": 895,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 864,
											"end": 895,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 864,
											"end": 895,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 864,
											"end": 895,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 864,
											"end": 895,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 864,
											"end": 895,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 864,
											"end": 895,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 864,
											"end": 895,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "A66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 789,
											"end": 791,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1120,
											"end": 1124,
											"name": "PUSH",
											"source": 8,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 731,
											"end": 737,
											"name": "PUSH",
											"source": 8,
											"value": "15180"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7054,
											"name": "PUSH",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8318,
											"end": 8325,
											"name": "PUSH",
											"source": 8,
											"value": "278D00"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5128,
											"end": 5233,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5128,
											"end": 5233,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5128,
											"end": 5233,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5128,
											"end": 5233,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5128,
											"end": 5233,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 5128,
											"end": 5233,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5128,
											"end": 5233,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5128,
											"end": 5233,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "CE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4EC"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 5240,
											"end": 5297,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5240,
											"end": 5297,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5240,
											"end": 5297,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5240,
											"end": 5297,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 5240,
											"end": 5297,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5240,
											"end": 5297,
											"name": "PUSH",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 8143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6924,
											"end": 6929,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6995,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7028,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 7003,
											"end": 7028,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6995,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6995,
											"end": 7049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6995,
											"end": 7049,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 6995,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7068,
											"end": 7079,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7068,
											"end": 7079,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7068,
											"end": 7079,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7068,
											"end": 7095,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7068,
											"end": 7095,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 7068,
											"end": 7095,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7068,
											"end": 7140,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7068,
											"end": 7140,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 7068,
											"end": 7140,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7068,
											"end": 7173,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7068,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 7068,
											"end": 7173,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7060,
											"end": 7226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 7060,
											"end": 7226,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7060,
											"end": 7226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 7060,
											"end": 7226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7060,
											"end": 7226,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 7060,
											"end": 7226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7272,
											"end": 7285,
											"name": "PUSH",
											"source": 7,
											"value": "3B"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7357,
											"end": 7373,
											"name": "PUSH",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7402,
											"end": 7427,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7402,
											"end": 7427,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7431,
											"end": 7435,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7402,
											"end": 7435,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7402,
											"end": 7471,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7402,
											"end": 7471,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7402,
											"end": 7471,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 7402,
											"end": 7471,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7527,
											"end": 7558,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 7527,
											"end": 7558,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7527,
											"end": 7558,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7527,
											"end": 7562,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7527,
											"end": 7562,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7527,
											"end": 7562,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7527,
											"end": 7562,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7519,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 7527,
											"end": 7562,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7527,
											"end": 7562,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7519,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7519,
											"end": 7585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7519,
											"end": 7585,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 7519,
											"end": 7585,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7604,
											"end": 7634,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7604,
											"end": 7634,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7596,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 7637,
											"end": 7665,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7637,
											"end": 7665,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7637,
											"end": 7665,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7604,
											"end": 7665,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7604,
											"end": 7665,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7596,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 7596,
											"end": 7687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7596,
											"end": 7687,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 7596,
											"end": 7687,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7431,
											"end": 7435,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7431,
											"end": 7435,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6924,
											"end": 6929,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10546,
											"end": 10571,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10546,
											"end": 10571,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10774,
											"end": 10785,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11399,
											"end": 11401,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 10801,
											"end": 10830,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10801,
											"end": 10830,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 10801,
											"end": 10830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10801,
											"end": 10830,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 10801,
											"end": 10830,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 11532,
											"end": 11558,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11532,
											"end": 11569,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 11532,
											"end": 11569,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 11532,
											"end": 11569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11532,
											"end": 11569,
											"name": "tag",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 11532,
											"end": 11569,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11845,
											"end": 11858,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 90,
											"end": 8143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11873,
											"end": 12057,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11873,
											"end": 12057,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11873,
											"end": 12057,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11873,
											"end": 12057,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11873,
											"end": 12057,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 11873,
											"end": 12057,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11873,
											"end": 12057,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12000,
											"end": 12015,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12000,
											"end": 12015,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11873,
											"end": 12057,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 11873,
											"end": 12057,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11873,
											"end": 12057,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7904,
											"end": 7906,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7431,
											"end": 7435,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7431,
											"end": 7435,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7637,
											"end": 7665,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7527,
											"end": 7558,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7431,
											"end": 7435,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7939,
											"end": 8001,
											"name": "PUSH",
											"source": 7,
											"value": "96EE4F374D0394C5383B347DC3B7EC04A1ECEDDCD2E25521157BCE21C42B24D5"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7939,
											"end": 8001,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6924,
											"end": 6929,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12166,
											"end": 12261,
											"name": "PUSH",
											"source": 8,
											"value": "E17B61D324CE17328F433D0AB62581C0F0AA997312BAE80FBDFCD2AA9B91D6E3"
										},
										{
											"begin": 11873,
											"end": 12057,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7904,
											"end": 7906,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12166,
											"end": 12261,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 12000,
											"end": 12015,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 12000,
											"end": 12015,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12000,
											"end": 12015,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 12000,
											"end": 12015,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 7939,
											"end": 8001,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7939,
											"end": 8001,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7431,
											"end": 7435,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "461BCD"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "E5"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F74207175616C6966696564206F7220616C726561647920636C61696D6564"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7402,
											"end": 7471,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 7402,
											"end": 7471,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7402,
											"end": 7471,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7402,
											"end": 7471,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 7402,
											"end": 7471,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7068,
											"end": 7173,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 7068,
											"end": 7173,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7155,
											"end": 7173,
											"name": "PUSH",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7144,
											"end": 7173,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7144,
											"end": 7173,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7068,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 7068,
											"end": 7173,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7068,
											"end": 7140,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 7068,
											"end": 7140,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7099,
											"end": 7115,
											"name": "PUSH",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7136,
											"end": 7140,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 7099,
											"end": 7132,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7099,
											"end": 7132,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7099,
											"end": 7140,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7068,
											"end": 7140,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 7068,
											"end": 7140,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7068,
											"end": 7095,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 7068,
											"end": 7095,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7095,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7095,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7095,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7095,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7068,
											"end": 7095,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 7068,
											"end": 7095,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 683,
											"end": 688,
											"name": "PUSH",
											"source": 8,
											"value": "2710"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BDD081E5BDD5C881858D8DBDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "496E76616C696420757365724964206F7220726F756E644964206F7220726F75"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B99081BDC881B9BDD0818DB1BDCD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F2072657761726420746F20636C61696D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "105B1B081D5CD95C9CC818DB185A5B5959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2652,
											"end": 3200,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2652,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "PUSH",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2910,
											"end": 2924,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2910,
											"end": 2924,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2910,
											"end": 2924,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2910,
											"end": 2924,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2909,
											"end": 2924,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2909,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 2909,
											"end": 2968,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2652,
											"end": 3200,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 2652,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2909,
											"end": 3005,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2909,
											"end": 3005,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2909,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 2909,
											"end": 3005,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2652,
											"end": 3200,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 2652,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2909,
											"end": 3057,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2909,
											"end": 3057,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2909,
											"end": 3057,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 2909,
											"end": 3057,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2652,
											"end": 3200,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 2652,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2909,
											"end": 3101,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2909,
											"end": 3101,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2909,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 2909,
											"end": 3101,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2652,
											"end": 3200,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 2652,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2909,
											"end": 3140,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2909,
											"end": 3140,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2909,
											"end": 3140,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2909,
											"end": 3140,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2909,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 2909,
											"end": 3140,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2652,
											"end": 3200,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 2652,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2895,
											"end": 3179,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2895,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 2895,
											"end": 3179,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3192,
											"end": 3196,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2652,
											"end": 3200,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2652,
											"end": 3200,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2895,
											"end": 3179,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 2895,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3159,
											"end": 3171,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3159,
											"end": 3171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2909,
											"end": 3140,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 2909,
											"end": 3140,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3114,
											"end": 3135,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3114,
											"end": 3135,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3114,
											"end": 3135,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3114,
											"end": 3135,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3114,
											"end": 3140,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2909,
											"end": 3140,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2909,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 2909,
											"end": 3140,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2909,
											"end": 3101,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 2909,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3070,
											"end": 3091,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3070,
											"end": 3091,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2909,
											"end": 3101,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2909,
											"end": 3101,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2909,
											"end": 3101,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2909,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 2909,
											"end": 3101,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2909,
											"end": 3057,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 2909,
											"end": 3057,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3018,
											"end": 3046,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3018,
											"end": 3046,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3018,
											"end": 3046,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3018,
											"end": 3046,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3018,
											"end": 3046,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3018,
											"end": 3046,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3018,
											"end": 3057,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2909,
											"end": 3057,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2909,
											"end": 3057,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 2909,
											"end": 3057,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2909,
											"end": 3005,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 2909,
											"end": 3005,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2982,
											"end": 3005,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2982,
											"end": 3005,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2982,
											"end": 3005,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2981,
											"end": 3005,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2981,
											"end": 3005,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2909,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 2909,
											"end": 3005,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2909,
											"end": 2968,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 2909,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2949,
											"end": 2968,
											"name": "PUSH",
											"source": 7,
											"value": "3D"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2937,
											"end": 2968,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2937,
											"end": 2968,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2937,
											"end": 2968,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2937,
											"end": 2968,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2909,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 2909,
											"end": 2968,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "tag",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 8143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 8143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/modules/ContestRoyalty.sol",
								"contracts/modules/Storage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ACC_PRECISION()": "32fcd966",
							"MONTH_DURATION()": "2a891534",
							"PERCENTS_DIVIDER()": "01c234a8",
							"ROI_CAP_DIVIDER()": "58c7d352",
							"ROI_CAP_MULTIPLIER()": "375b43b4",
							"TIME_STEP()": "32bc298c",
							"WEEK_DURATION()": "76f5f700",
							"WeeklyCapping()": "ebe0ff15",
							"WeeklyTotalReward()": "3080b5bc",
							"canClaimMonthlyReward(uint256,uint256)": "7d846e38",
							"claimMonthlyContestReward(uint256,uint256)": "4c2215e3",
							"claimWeeklyContestReward(uint256,uint256)": "16298056",
							"communityAccPerUser()": "78f6ad6d",
							"creatorWallet()": "7cdc65f2",
							"currentMonthlyRound()": "c9ed0708",
							"currentMonthlyStartTime()": "e898fc38",
							"currentWeeklyRound()": "ca8e9121",
							"currentWeeklyStartTime()": "fddc806f",
							"defaultRefId()": "ec597e6f",
							"glbBoosterPackages(uint256)": "2350268f",
							"minLevelForGlbBooster(uint256)": "d0a2fd79",
							"minLevelForPool(uint256)": "2132d204",
							"minPoolForGlbBooster(uint256)": "956a3228",
							"monthlyCapping()": "c8df2908",
							"monthlyTotalReward()": "a59d17d1",
							"packages(uint256)": "c216212a",
							"poolPackages(uint256)": "ae4708dc",
							"registeredUserIds(uint256)": "39ab3603",
							"systemMaintance()": "e9e34a16",
							"teamDevelopment()": "f5d74d93",
							"totalUsers()": "bff1f9e1",
							"usdt()": "2f48ab7d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usersCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUser\",\"type\":\"uint256\"}],\"name\":\"CommunityBonusDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"packageLevel\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"incomeType\",\"type\":\"uint256\"}],\"name\":\"IncomeDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromUserId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"LotteryReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalUsers\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUserReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDistributed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"leftoverReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"MonthlyClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"joinTime\",\"type\":\"uint256\"}],\"name\":\"MonthlyContestQualified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUserReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimTime\",\"type\":\"uint256\"}],\"name\":\"MonthlyRewardClaim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"uplineId\",\"type\":\"uint256\"}],\"name\":\"Registration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"level\",\"type\":\"string\"}],\"name\":\"RewardSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"packageLevel\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"depositType\",\"type\":\"string\"}],\"name\":\"Upgrade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"matrixId\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"userId\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"parentId\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"position\",\"type\":\"uint8\"}],\"name\":\"UserJoined\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalUsers\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUserReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDistributed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"leftoverReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"WeeklyClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"joinTime\",\"type\":\"uint256\"}],\"name\":\"WeeklyContestQualified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUserReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimTime\",\"type\":\"uint256\"}],\"name\":\"WeeklyRewardClaim\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ACC_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MONTH_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERCENTS_DIVIDER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROI_CAP_DIVIDER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROI_CAP_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TIME_STEP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WEEK_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WeeklyCapping\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WeeklyTotalReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_userId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_roundId\",\"type\":\"uint256\"}],\"name\":\"canClaimMonthlyReward\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_userId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_roundId\",\"type\":\"uint256\"}],\"name\":\"claimMonthlyContestReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_userId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_roundId\",\"type\":\"uint256\"}],\"name\":\"claimWeeklyContestReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"communityAccPerUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creatorWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentMonthlyRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentMonthlyStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentWeeklyRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentWeeklyStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultRefId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"glbBoosterPackages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"minLevelForGlbBooster\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"minLevelForPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"minPoolForGlbBooster\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"monthlyCapping\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"monthlyTotalReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"packages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolPackages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"registeredUserIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"systemMaintance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamDevelopment\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdt\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/ContestRoyalty.sol\":\"ContestRoyalty\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/modules/ContestRoyalty.sol\":{\"keccak256\":\"0x29685bd05e1e45bdcc66778c4127b4994ec959e699356a941277af4c2164498a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e1e89521b82a4eb253f159d99e54d18b60cd39e6e1cf242e5c3908772cdca3e\",\"dweb:/ipfs/QmXcfCPxtSHDr2GF8wkjHKLXJeoES84vCmHQWdUcTvLEmn\"]},\"contracts/modules/Storage.sol\":{\"keccak256\":\"0xb6871c4ddfa82bc9db193e85fc7e8e9b192c6e1a5b331eda0714821b69bdbf4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348364d62e6b5e6424468248bc16433d382e4061629868930be76da53ac75eef\",\"dweb:/ipfs/QmPDZYjFkQgfzivfmdGxEMr5SEVK4G2s2aGgYPurzWqEEk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 100,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 1422,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "usdt",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)232"
							},
							{
								"astId": 1424,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "creatorWallet",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 1426,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "systemMaintance",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 1428,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "teamDevelopment",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 1430,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "defaultRefId",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1432,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "totalUsers",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1450,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "registeredUserIds",
								"offset": 0,
								"slot": "7",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 1452,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "nonce",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1457,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "communityAccPerUser",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1461,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "communityDebt",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1510,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "packages",
								"offset": 0,
								"slot": "11",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 1596,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "addressToId",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1601,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "users",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_uint256,t_struct(User)1554_storage)"
							},
							{
								"astId": 1606,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "userIncomes",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_uint256,t_struct(UserIncome)1581_storage)"
							},
							{
								"astId": 1612,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "incomeHistory",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_uint256,t_array(t_struct(Income)1592_storage)dyn_storage)"
							},
							{
								"astId": 1619,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "teams",
								"offset": 0,
								"slot": "16",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))"
							},
							{
								"astId": 1623,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "matrixDirect",
								"offset": 0,
								"slot": "17",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1628,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "directReferrals",
								"offset": 0,
								"slot": "18",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 1711,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "poolPackages",
								"offset": 0,
								"slot": "19",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 1723,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "glbBoosterPackages",
								"offset": 0,
								"slot": "20",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 1735,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "minLevelForPool",
								"offset": 0,
								"slot": "21",
								"type": "t_array(t_uint256)7_storage"
							},
							{
								"astId": 1748,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "minLevelForGlbBooster",
								"offset": 0,
								"slot": "28",
								"type": "t_array(t_uint256)8_storage"
							},
							{
								"astId": 1761,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "minPoolForGlbBooster",
								"offset": 0,
								"slot": "36",
								"type": "t_array(t_uint256)8_storage"
							},
							{
								"astId": 1795,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "userPooltopup",
								"offset": 0,
								"slot": "44",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserPoolTopup)1777_storage))"
							},
							{
								"astId": 1802,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "userPooldtl",
								"offset": 0,
								"slot": "45",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserPool)1772_storage))"
							},
							{
								"astId": 1809,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "userChildren",
								"offset": 0,
								"slot": "46",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))"
							},
							{
								"astId": 1816,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "userIdPerPool",
								"offset": 0,
								"slot": "47",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))"
							},
							{
								"astId": 1821,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "poolUsers",
								"offset": 0,
								"slot": "48",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 1827,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "userHasPool",
								"offset": 0,
								"slot": "49",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))"
							},
							{
								"astId": 1834,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "userBoosterdtl",
								"offset": 0,
								"slot": "50",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserBooster)1788_storage))"
							},
							{
								"astId": 1841,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "userBoosterChildren",
								"offset": 0,
								"slot": "51",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))"
							},
							{
								"astId": 1846,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "boosterUsers",
								"offset": 0,
								"slot": "52",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 1852,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "userHasbooster",
								"offset": 0,
								"slot": "53",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))"
							},
							{
								"astId": 1861,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "currentWeeklyRound",
								"offset": 0,
								"slot": "54",
								"type": "t_uint256"
							},
							{
								"astId": 1864,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "currentWeeklyStartTime",
								"offset": 0,
								"slot": "55",
								"type": "t_uint256"
							},
							{
								"astId": 1867,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "WeeklyTotalReward",
								"offset": 0,
								"slot": "56",
								"type": "t_uint256"
							},
							{
								"astId": 1904,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "weeklyContestdtl",
								"offset": 0,
								"slot": "57",
								"type": "t_mapping(t_uint256,t_struct(WeeklyContest)1886_storage)"
							},
							{
								"astId": 1909,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "weeklyQualifiedUsers",
								"offset": 0,
								"slot": "58",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 1916,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "weeklyUserdtl",
								"offset": 0,
								"slot": "59",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(weeklyUser)1899_storage))"
							},
							{
								"astId": 1923,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "weeklyUserDirects",
								"offset": 0,
								"slot": "60",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))"
							},
							{
								"astId": 1966,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "currentMonthlyRound",
								"offset": 0,
								"slot": "61",
								"type": "t_uint256"
							},
							{
								"astId": 1969,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "currentMonthlyStartTime",
								"offset": 0,
								"slot": "62",
								"type": "t_uint256"
							},
							{
								"astId": 1972,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "monthlyTotalReward",
								"offset": 0,
								"slot": "63",
								"type": "t_uint256"
							},
							{
								"astId": 2011,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "monthlyRoyaltydtl",
								"offset": 0,
								"slot": "64",
								"type": "t_mapping(t_uint256,t_struct(monthlyRoyalty)1991_storage)"
							},
							{
								"astId": 2014,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "monthlyQualifiedUsers",
								"offset": 0,
								"slot": "65",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 2019,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "monthlyRoyaltyUserdtl",
								"offset": 0,
								"slot": "66",
								"type": "t_mapping(t_uint256,t_struct(monthlyRoyaltyUser)2006_storage)"
							},
							{
								"astId": 2024,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "monthlyUserDirects",
								"offset": 0,
								"slot": "67",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Deposit)1519_storage)dyn_storage": {
								"base": "t_struct(Deposit)1519_storage",
								"encoding": "dynamic_array",
								"label": "struct Storage.Deposit[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(Income)1592_storage)dyn_storage": {
								"base": "t_struct(Income)1592_storage",
								"encoding": "dynamic_array",
								"label": "struct Storage.Income[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)7_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[7]",
								"numberOfBytes": "224"
							},
							"t_array(t_uint256)8_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[8]",
								"numberOfBytes": "256"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)232": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_array(t_struct(Income)1592_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.Income[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(Income)1592_storage)dyn_storage"
							},
							"t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256[])",
								"numberOfBytes": "32",
								"value": "t_array(t_uint256)dyn_storage"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => uint256[]))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_bool)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserBooster)1788_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => struct Storage.UserBooster))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(UserBooster)1788_storage)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserPool)1772_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => struct Storage.UserPool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(UserPool)1772_storage)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserPoolTopup)1777_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => struct Storage.UserPoolTopup))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(UserPoolTopup)1777_storage)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(weeklyUser)1899_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => struct Storage.weeklyUser))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(weeklyUser)1899_storage)"
							},
							"t_mapping(t_uint256,t_struct(User)1554_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.User)",
								"numberOfBytes": "32",
								"value": "t_struct(User)1554_storage"
							},
							"t_mapping(t_uint256,t_struct(UserBooster)1788_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.UserBooster)",
								"numberOfBytes": "32",
								"value": "t_struct(UserBooster)1788_storage"
							},
							"t_mapping(t_uint256,t_struct(UserIncome)1581_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.UserIncome)",
								"numberOfBytes": "32",
								"value": "t_struct(UserIncome)1581_storage"
							},
							"t_mapping(t_uint256,t_struct(UserPool)1772_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.UserPool)",
								"numberOfBytes": "32",
								"value": "t_struct(UserPool)1772_storage"
							},
							"t_mapping(t_uint256,t_struct(UserPoolTopup)1777_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.UserPoolTopup)",
								"numberOfBytes": "32",
								"value": "t_struct(UserPoolTopup)1777_storage"
							},
							"t_mapping(t_uint256,t_struct(WeeklyContest)1886_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.WeeklyContest)",
								"numberOfBytes": "32",
								"value": "t_struct(WeeklyContest)1886_storage"
							},
							"t_mapping(t_uint256,t_struct(monthlyRoyalty)1991_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.monthlyRoyalty)",
								"numberOfBytes": "32",
								"value": "t_struct(monthlyRoyalty)1991_storage"
							},
							"t_mapping(t_uint256,t_struct(monthlyRoyaltyUser)2006_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.monthlyRoyaltyUser)",
								"numberOfBytes": "32",
								"value": "t_struct(monthlyRoyaltyUser)2006_storage"
							},
							"t_mapping(t_uint256,t_struct(weeklyUser)1899_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.weeklyUser)",
								"numberOfBytes": "32",
								"value": "t_struct(weeklyUser)1899_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Deposit)1519_storage": {
								"encoding": "inplace",
								"label": "struct Storage.Deposit",
								"members": [
									{
										"astId": 1512,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1514,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "withdrawn",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1516,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "start",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1518,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "depositType",
										"offset": 0,
										"slot": "3",
										"type": "t_uint8"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(Income)1592_storage": {
								"encoding": "inplace",
								"label": "struct Storage.Income",
								"members": [
									{
										"astId": 1583,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "fromUserId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1585,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1587,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "packageLevel",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1589,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "timestamp",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1591,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "incomeType",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(User)1554_storage": {
								"encoding": "inplace",
								"label": "struct Storage.User",
								"members": [
									{
										"astId": 1521,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "account",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 1525,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "deposits",
										"offset": 0,
										"slot": "1",
										"type": "t_array(t_struct(Deposit)1519_storage)dyn_storage"
									},
									{
										"astId": 1527,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "checkpoint",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1529,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "id",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1531,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "sponsorId",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1533,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "uplineId",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 1535,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "level",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 1537,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "directTeam",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 1539,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "directPoolQualified",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									},
									{
										"astId": 1541,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "totalMatrixTeam",
										"offset": 0,
										"slot": "9",
										"type": "t_uint256"
									},
									{
										"astId": 1543,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "totalDeposit",
										"offset": 0,
										"slot": "10",
										"type": "t_uint256"
									},
									{
										"astId": 1545,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "poollevel",
										"offset": 0,
										"slot": "11",
										"type": "t_uint256"
									},
									{
										"astId": 1547,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "poolDeposit",
										"offset": 0,
										"slot": "12",
										"type": "t_uint256"
									},
									{
										"astId": 1549,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "boosterlevel",
										"offset": 0,
										"slot": "13",
										"type": "t_uint256"
									},
									{
										"astId": 1551,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "boosterDeposit",
										"offset": 0,
										"slot": "14",
										"type": "t_uint256"
									},
									{
										"astId": 1553,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "registrationTime",
										"offset": 0,
										"slot": "15",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "512"
							},
							"t_struct(UserBooster)1788_storage": {
								"encoding": "inplace",
								"label": "struct Storage.UserBooster",
								"members": [
									{
										"astId": 1779,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1781,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "poolId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1783,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "parentId",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1785,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "bonusCount",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1787,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "joinTime",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(UserIncome)1581_storage": {
								"encoding": "inplace",
								"label": "struct Storage.UserIncome",
								"members": [
									{
										"astId": 1556,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "totalIncome",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1558,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "sponsorIncome",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1560,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "matrixIncome",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1562,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "levelBoosterIncome",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1564,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "levelIncome",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1566,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "royaltyIncome",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 1568,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "royaltyIncomeClaimed",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 1570,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "communityIncome",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 1572,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "poolIncome",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									},
									{
										"astId": 1574,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "boosterIncome",
										"offset": 0,
										"slot": "9",
										"type": "t_uint256"
									},
									{
										"astId": 1576,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "weeklyContestIncome",
										"offset": 0,
										"slot": "10",
										"type": "t_uint256"
									},
									{
										"astId": 1578,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "monthlyRoyalty",
										"offset": 0,
										"slot": "11",
										"type": "t_uint256"
									},
									{
										"astId": 1580,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "monthlyTopRoyalty",
										"offset": 0,
										"slot": "12",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "416"
							},
							"t_struct(UserPool)1772_storage": {
								"encoding": "inplace",
								"label": "struct Storage.UserPool",
								"members": [
									{
										"astId": 1763,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1765,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "mainid",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1767,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "poolId",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1769,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "parentId",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1771,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "bonusCount",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(UserPoolTopup)1777_storage": {
								"encoding": "inplace",
								"label": "struct Storage.UserPoolTopup",
								"members": [
									{
										"astId": 1774,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "nextPoolAmt",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1776,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "reTopupAmt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(WeeklyContest)1886_storage": {
								"encoding": "inplace",
								"label": "struct Storage.WeeklyContest",
								"members": [
									{
										"astId": 1869,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "roundId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1871,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "totalReward",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1873,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "totalUsers",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1875,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "perUserReward",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1877,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "claimedCount",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1879,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "startTime",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 1881,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "endTime",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 1883,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "carryForward",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 1885,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "closed",
										"offset": 0,
										"slot": "8",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "288"
							},
							"t_struct(monthlyRoyalty)1991_storage": {
								"encoding": "inplace",
								"label": "struct Storage.monthlyRoyalty",
								"members": [
									{
										"astId": 1974,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "roundId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1976,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "totalReward",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1978,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "totalUsers",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1980,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "perUserReward",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1982,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "claimedCount",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1984,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "startTime",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 1986,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "endTime",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 1988,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "carryForward",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 1990,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "closed",
										"offset": 0,
										"slot": "8",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "288"
							},
							"t_struct(monthlyRoyaltyUser)2006_storage": {
								"encoding": "inplace",
								"label": "struct Storage.monthlyRoyaltyUser",
								"members": [
									{
										"astId": 1993,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1995,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "joinTime",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1997,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "qualifiedRoundId",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1999,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "claimTime",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2003,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "isClaimed",
										"offset": 0,
										"slot": "4",
										"type": "t_mapping(t_uint256,t_bool)"
									},
									{
										"astId": 2005,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "isQualified",
										"offset": 0,
										"slot": "5",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "192"
							},
							"t_struct(weeklyUser)1899_storage": {
								"encoding": "inplace",
								"label": "struct Storage.weeklyUser",
								"members": [
									{
										"astId": 1888,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1890,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "joinTime",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1892,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "roundId",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1894,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "claimTime",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1896,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "isClaimed",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									},
									{
										"astId": 1898,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "isQualified",
										"offset": 1,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/modules/Storage.sol": {
				"Storage": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "usersCount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUser",
									"type": "uint256"
								}
							],
							"name": "CommunityBonusDistributed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "packageLevel",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "incomeType",
									"type": "uint256"
								}
							],
							"name": "IncomeDistributed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "winner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromUserId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "LotteryReward",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalUsers",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUserReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalDistributed",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "leftoverReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								}
							],
							"name": "MonthlyClosed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "joinTime",
									"type": "uint256"
								}
							],
							"name": "MonthlyContestQualified",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUserReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "claimTime",
									"type": "uint256"
								}
							],
							"name": "MonthlyRewardClaim",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sponsor",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "uplineId",
									"type": "uint256"
								}
							],
							"name": "Registration",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "level",
									"type": "string"
								}
							],
							"name": "RewardSent",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "packageLevel",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "depositType",
									"type": "string"
								}
							],
							"name": "Upgrade",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint8",
									"name": "matrixId",
									"type": "uint8"
								},
								{
									"indexed": true,
									"internalType": "uint32",
									"name": "userId",
									"type": "uint32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint32",
									"name": "parentId",
									"type": "uint32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "parentAddr",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "position",
									"type": "uint8"
								}
							],
							"name": "UserJoined",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalUsers",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUserReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalDistributed",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "leftoverReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								}
							],
							"name": "WeeklyClosed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "joinTime",
									"type": "uint256"
								}
							],
							"name": "WeeklyContestQualified",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUserReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "claimTime",
									"type": "uint256"
								}
							],
							"name": "WeeklyRewardClaim",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ACC_PRECISION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MONTH_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERCENTS_DIVIDER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ROI_CAP_DIVIDER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ROI_CAP_MULTIPLIER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TIME_STEP",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WEEK_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WeeklyCapping",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WeeklyTotalReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "communityAccPerUser",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "creatorWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentMonthlyRound",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentMonthlyStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentWeeklyRound",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentWeeklyStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "defaultRefId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "glbBoosterPackages",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "minLevelForGlbBooster",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "minLevelForPool",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "minPoolForGlbBooster",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "monthlyCapping",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "monthlyTotalReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "packages",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "poolPackages",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "registeredUserIds",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "systemMaintance",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "teamDevelopment",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalUsers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdt",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n  jumpi(tag_4, callvalue)\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  sstore\n  mload(0x40)\n  0x01e0\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  dup3\n  dup3\n  lt\n  or\n  tag_6\n  jumpi\n  0x40\n  mstore\n    /* \"contracts/modules/Storage.sol\":1324:1333  15 * 1e18 */\n  0xd02ab486cedc0000\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  dup2\n  mstore\n    /* \"contracts/modules/Storage.sol\":1356:1365  25 * 1e18 */\n  0x015af1d78b58c40000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1388:1397  50 * 1e18 */\n  0x02b5e3af16b1880000\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1420:1430  100 * 1e18 */\n  0x056bc75e2d63100000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x60\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1453:1463  200 * 1e18 */\n  0x0ad78ebc5ac6200000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x80\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1486:1496  400 * 1e18 */\n  0x15af1d78b58c400000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xa0\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1519:1529  800 * 1e18 */\n  0x2b5e3af16b18800000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xc0\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1552:1563  1600 * 1e18 */\n  0x56bc75e2d631000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xe0\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1586:1597  3200 * 1e18 */\n  0xad78ebc5ac62000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0100\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1620:1631  6400 * 1e18 */\n  0x015af1d78b58c4000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0120\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1654:1666  12800 * 1e18 */\n  0x02b5e3af16b188000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0140\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1689:1701  25600 * 1e18 */\n  0x056bc75e2d6310000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0160\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1724:1736  51200 * 1e18 */\n  0x0ad78ebc5ac620000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0180\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1759:1772  102400 * 1e18 */\n  0x15af1d78b58c40000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x01a0\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1795:1808  204800 * 1e18 */\n  0x2b5e3af16b1880000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x01c0\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0b\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  sload\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0f\n  0x0b\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  sstore\n  dup1\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0f\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  lt\n  tag_8\n  jumpi\ntag_9:\n  pop\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0b\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  keccak256\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\ntag_10:\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0f\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  dup2\n  lt\n  tag_11\n  jumpi\n  tag_13\n  tag_1\n  jump\t// in\ntag_13:\n    /* \"contracts/modules/Storage.sol\":5058:5063  75e18 */\n  0x0410d586a20a4c0000\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  dup2\n  mstore\n    /* \"contracts/modules/Storage.sol\":5065:5071  300e18 */\n  0x1043561a8829300000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5073:5080  1200e18 */\n  0x410d586a20a4c00000\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5082:5089  4800e18 */\n  0x01043561a88293000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x60\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5091:5099  19200e18 */\n  0x0410d586a20a4c000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x80\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5101:5109  76800e18 */\n  0x1043561a882930000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xa0\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5111:5120  307200e18 */\n  0x410d586a20a4c0000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xc0\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x13\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  sload\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n  0x13\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  sstore\n  dup1\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  lt\n  tag_14\n  jumpi\ntag_15:\n  pop\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x13\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  keccak256\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\ntag_16:\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  dup2\n  lt\n  tag_17\n  jumpi\n  tag_19\n  tag_2\n  jump\t// in\ntag_19:\n    /* \"contracts/modules/Storage.sol\":1420:1430  100 * 1e18 */\n  0x056bc75e2d63100000\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  dup2\n  mstore\n    /* \"contracts/modules/Storage.sol\":1453:1463  200 * 1e18 */\n  0x0ad78ebc5ac6200000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1486:1496  400 * 1e18 */\n  0x15af1d78b58c400000\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1519:1529  800 * 1e18 */\n  0x2b5e3af16b18800000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x60\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1552:1563  1600 * 1e18 */\n  0x56bc75e2d631000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x80\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1586:1597  3200 * 1e18 */\n  0xad78ebc5ac62000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xa0\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1620:1631  6400 * 1e18 */\n  0x015af1d78b58c4000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xc0\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1654:1666  12800 * 1e18 */\n  0x02b5e3af16b188000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xe0\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x14\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  sload\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n  0x14\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  sstore\n  dup1\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  lt\n  tag_20\n  jumpi\ntag_21:\n  pop\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x14\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  keccak256\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\ntag_22:\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  dup2\n  lt\n  tag_23\n  jumpi\n  tag_25\n  tag_1\n  jump\t// in\ntag_25:\n    /* \"contracts/modules/Storage.sol\":5274:5275  3 */\n  0x03\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  dup2\n  mstore\n  0x05\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":5273:5297  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":5273:5297  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5283:5284  9 */\n  0x09\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x60\n    /* \"contracts/modules/Storage.sol\":5273:5297  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0b\n  0x80\n    /* \"contracts/modules/Storage.sol\":5273:5297  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5290:5292  13 */\n  0x0d\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xa0\n    /* \"contracts/modules/Storage.sol\":5273:5297  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0f\n  0xc0\n    /* \"contracts/modules/Storage.sol\":5273:5297  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\ntag_26:\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  dup2\n  lt\n  tag_27\n  jumpi\n  tag_29\n  tag_2\n  jump\t// in\ntag_29:\n    /* \"contracts/modules/Storage.sol\":5344:5345  4 */\n  0x04\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  dup2\n  mstore\n  0x05\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":5343:5368  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5350:5351  6 */\n  0x06\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":5343:5368  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x60\n    /* \"contracts/modules/Storage.sol\":5343:5368  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x80\n    /* \"contracts/modules/Storage.sol\":5343:5368  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5283:5284  9 */\n  0x09\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xa0\n    /* \"contracts/modules/Storage.sol\":5343:5368  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5362:5364  10 */\n  0x0a\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xc0\n    /* \"contracts/modules/Storage.sol\":5343:5368  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0b\n  0xe0\n    /* \"contracts/modules/Storage.sol\":5343:5368  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\ntag_30:\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  dup2\n  lt\n  tag_31\n  jumpi\n  tag_33\n  tag_2\n  jump\t// in\ntag_33:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":5413:5436  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":5413:5436  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x60\n    /* \"contracts/modules/Storage.sol\":5413:5436  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x80\n    /* \"contracts/modules/Storage.sol\":5413:5436  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xa0\n    /* \"contracts/modules/Storage.sol\":5413:5436  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xc0\n    /* \"contracts/modules/Storage.sol\":5413:5436  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xe0\n    /* \"contracts/modules/Storage.sol\":5413:5436  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\ntag_34:\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  dup2\n  lt\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":6966:6967  0 */\n  0x36\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":7011:7012  0 */\n  0x37\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":7053:7054  0 */\n  0x38\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":8425:8426  1 */\n  0x3d\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":8471:8472  0 */\n  0x3e\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":8512:8513  0 */\n  0x3f\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  sstore\n  mload(0x40)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_35:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  swap1\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  0xff\n  dup5\n  mload\n  and\n  swap4\n  add\n  swap3\n  dup2\n    /* \"contracts/modules/Storage.sol\":5413:5436  [0, 1, 1, 1, 1, 1, 1,1] */\n  0x24\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  add\n  sstore\n  add\n  jump(tag_34)\ntag_31:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  swap1\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  0xff\n  dup5\n  mload\n  and\n  swap4\n  add\n  swap3\n  dup2\n    /* \"contracts/modules/Storage.sol\":5343:5368  [4, 5, 6, 7, 8, 9, 10,11] */\n  0x1c\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  add\n  sstore\n  add\n  jump(tag_30)\ntag_27:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  swap1\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  0xff\n  dup5\n  mload\n  and\n  swap4\n  add\n  swap3\n  dup2\n    /* \"contracts/modules/Storage.sol\":5273:5297  [3, 5, 7, 9, 11, 13, 15] */\n  0x15\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  add\n  sstore\n  add\n  jump(tag_26)\ntag_23:\n  dup2\n  mload\n  sub(shl(0x50, 0x01), 0x01)\n  and\n  dup2\n  dup5\n  add\n  sstore\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  add\n  jump(tag_22)\ntag_20:\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x14\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n  tag_37\n  swap1\n  0xce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ec\n  add\n  0xce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4f4\n  tag_3\n  jump\t// in\ntag_37:\n  dup2\n  jump(tag_21)\ntag_17:\n  dup2\n  mload\n  sub(shl(0x50, 0x01), 0x01)\n  and\n  dup2\n  dup5\n  add\n  sstore\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  add\n  jump(tag_16)\ntag_14:\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x13\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n  tag_38\n  swap1\n  0x66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a090\n  add\n  0x66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a097\n  tag_3\n  jump\t// in\ntag_38:\n  dup2\n  jump(tag_15)\ntag_11:\n  dup2\n  mload\n  sub(shl(0x50, 0x01), 0x01)\n  and\n  dup2\n  dup5\n  add\n  sstore\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  add\n  jump(tag_10)\ntag_8:\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0b\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n  tag_39\n  swap1\n  0x0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9\n  add\n  0x0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01dc8\n  tag_3\n  jump\t// in\ntag_39:\n  0x00\n  jump(tag_9)\ntag_6:\n  shl(0xe0, 0x4e487b71)\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  mstore\n  mstore(0x04, 0x41)\n  0x24\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n  revert\ntag_4:\n  0x00\n  dup1\n  revert\ntag_1:\n  mload(0x40)\n  swap1\n  0xe0\n  dup3\n  add\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  dup4\n  dup3\n  lt\n  or\n  tag_6\n  jumpi\n  0x40\n  mstore\n  jump\t// out\ntag_2:\n  mload(0x40)\n  swap1\n  0x0100\n  dup3\n  add\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  dup4\n  dup3\n  lt\n  or\n  tag_6\n  jumpi\n  0x40\n  mstore\n  jump\t// out\ntag_3:\n  dup2\n  dup2\n  lt\n  tag_45\n  jumpi\n  pop\n  pop\n  jump\t// out\ntag_45:\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_3)\nstop\n\nsub_0: assembly {\n        /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n      0x80\n      dup1\n      0x40\n      mstore\n      jumpi(tag_1, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_1:\n      shr(0xe0, calldataload(0x00))\n      swap1\n      dup2\n      0x01c234a8\n      eq\n      tag_3\n      jumpi\n      pop\n      dup1\n      0x2132d204\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2350268f\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2a891534\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x2f48ab7d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x3080b5bc\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x32bc298c\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x32fcd966\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x375b43b4\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x39ab3603\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x58c7d352\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x76f5f700\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x78f6ad6d\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x7cdc65f2\n      eq\n      tag_29\n      jumpi\n      dup1\n      0x956a3228\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xa59d17d1\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xae4708dc\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xbff1f9e1\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xc216212a\n      eq\n      tag_39\n      jumpi\n      dup1\n      0xc8df2908\n      eq\n      tag_41\n      jumpi\n      dup1\n      0xc9ed0708\n      eq\n      tag_43\n      jumpi\n      dup1\n      0xca8e9121\n      eq\n      tag_45\n      jumpi\n      dup1\n      0xd0a2fd79\n      eq\n      tag_47\n      jumpi\n      dup1\n      0xe898fc38\n      eq\n      tag_49\n      jumpi\n      dup1\n      0xe9e34a16\n      eq\n      tag_51\n      jumpi\n      dup1\n      0xebe0ff15\n      eq\n      tag_53\n      jumpi\n      dup1\n      0xec597e6f\n      eq\n      tag_55\n      jumpi\n      dup1\n      0xf5d74d93\n      eq\n      tag_57\n      jumpi\n      0xfddc806f\n      eq\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      jumpi(tag_63, callvalue)\n      jumpi(tag_63, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":6974:7012  uint public currentWeeklyStartTime = 0 */\n      0x37\n        /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_63:\n      0x00\n      dup1\n      revert\n    tag_57:\n      jumpi(tag_63, callvalue)\n      jumpi(tag_63, slt(add(not(0x03), calldatasize), 0x00))\n      sload(0x04)\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_55:\n      jumpi(tag_63, callvalue)\n      jumpi(tag_63, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":534:558  uint public defaultRefId */\n      0x05\n        /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_53:\n      jumpi(tag_63, callvalue)\n      jumpi(tag_63, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":6914:6921  1000e18 */\n      0x3635c9adc5dea00000\n        /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_51:\n      jumpi(tag_63, callvalue)\n      jumpi(tag_63, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"contracts/modules/Storage.sol\":460:490  address public systemMaintance */\n      0x03\n        /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_49:\n      jumpi(tag_63, callvalue)\n      jumpi(tag_63, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":8433:8472  uint public currentMonthlyStartTime = 0 */\n      0x3e\n        /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_47:\n      jumpi(tag_63, callvalue)\n      jumpi(tag_63, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      0x08\n        /* \"contracts/modules/Storage.sol\":5304:5368  uint[8] public minLevelForGlbBooster = [4, 5, 6, 7, 8, 9, 10,11] */\n      dup2\n      lt\n      iszero\n      tag_63\n      jumpi\n        /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n      0x20\n      swap1\n        /* \"contracts/modules/Storage.sol\":5304:5368  uint[8] public minLevelForGlbBooster = [4, 5, 6, 7, 8, 9, 10,11] */\n      0x1c\n        /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_45:\n      jumpi(tag_63, callvalue)\n      jumpi(tag_63, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":6933:6967  uint public currentWeeklyRound = 0 */\n      0x36\n        /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_43:\n      jumpi(tag_63, callvalue)\n      jumpi(tag_63, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":8391:8426  uint public currentMonthlyRound = 1 */\n      0x3d\n        /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_41:\n      jumpi(tag_63, callvalue)\n      jumpi(tag_63, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":8370:8378  10000e18 */\n      0x021e19e0c9bab2400000\n        /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_39:\n      jumpi(tag_63, callvalue)\n      jumpi(tag_63, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \"contracts/modules/Storage.sol\":1288:1828  uint[] public packages = [... */\n      0x0b\n        /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n      sload\n        /* \"contracts/modules/Storage.sol\":1288:1828  uint[] public packages = [... */\n      dup2\n      lt\n      iszero\n      tag_63\n      jumpi\n      0x0b\n        /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n      sload\n      dup2\n      lt\n      iszero\n      tag_109\n      jumpi\n        /* \"contracts/modules/Storage.sol\":1288:1828  uint[] public packages = [... */\n      0x0b\n        /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n      0x00\n      mstore\n      0x0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_109:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_37:\n      jumpi(tag_63, callvalue)\n      jumpi(tag_63, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":565:587  uint public totalUsers */\n      0x06\n        /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_35:\n      jumpi(tag_63, callvalue)\n      jumpi(tag_63, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \"contracts/modules/Storage.sol\":5028:5121  uint[] public poolPackages = [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n      0x13\n        /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n      sload\n        /* \"contracts/modules/Storage.sol\":5028:5121  uint[] public poolPackages = [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n      dup2\n      lt\n      iszero\n      tag_63\n      jumpi\n      0x13\n        /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n      sload\n      dup2\n      lt\n      iszero\n      tag_109\n      jumpi\n        /* \"contracts/modules/Storage.sol\":5028:5121  uint[] public poolPackages = [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n      0x13\n        /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n      0x00\n      mstore\n      0x66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a090\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_33:\n      jumpi(tag_63, callvalue)\n      jumpi(tag_63, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":8479:8513  uint public monthlyTotalReward = 0 */\n      0x3f\n        /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_31:\n      jumpi(tag_63, callvalue)\n      jumpi(tag_63, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      0x08\n        /* \"contracts/modules/Storage.sol\":5375:5436  uint[8] public minPoolForGlbBooster = [0, 1, 1, 1, 1, 1, 1,1] */\n      dup2\n      lt\n      iszero\n      tag_63\n      jumpi\n        /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n      0x20\n      swap1\n        /* \"contracts/modules/Storage.sol\":5375:5436  uint[8] public minPoolForGlbBooster = [0, 1, 1, 1, 1, 1, 1,1] */\n      0x24\n        /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_29:\n      jumpi(tag_63, callvalue)\n      jumpi(tag_63, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"contracts/modules/Storage.sol\":422:450  address public creatorWallet */\n      0x02\n        /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_27:\n      jumpi(tag_63, callvalue)\n      jumpi(tag_63, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":1131:1165  uint256 public communityAccPerUser */\n      0x09\n        /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_25:\n      jumpi(tag_63, callvalue)\n      jumpi(tag_63, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":6861:6867  7 days */\n      0x093a80\n        /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_23:\n      jumpi(tag_63, callvalue)\n      jumpi(tag_63, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":848:850  10 */\n      0x0a\n        /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_21:\n      jumpi(tag_63, callvalue)\n      jumpi(tag_63, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \"contracts/modules/Storage.sol\":864:895  uint[] public registeredUserIds */\n      0x07\n        /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n      sload\n        /* \"contracts/modules/Storage.sol\":864:895  uint[] public registeredUserIds */\n      dup2\n      lt\n      iszero\n      tag_63\n      jumpi\n      0x07\n        /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n      sload\n      dup2\n      lt\n      iszero\n      tag_109\n      jumpi\n        /* \"contracts/modules/Storage.sol\":864:895  uint[] public registeredUserIds */\n      0x07\n        /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n      0x00\n      mstore\n      0xa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_19:\n      jumpi(tag_63, callvalue)\n      jumpi(tag_63, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":789:791  15 */\n      0x0f\n        /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_17:\n      jumpi(tag_63, callvalue)\n      jumpi(tag_63, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":1120:1124  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_15:\n      jumpi(tag_63, callvalue)\n      jumpi(tag_63, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":731:737  1 days */\n      0x015180\n        /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_13:\n      jumpi(tag_63, callvalue)\n      jumpi(tag_63, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":7021:7054  uint public WeeklyTotalReward = 0 */\n      0x38\n        /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_11:\n      jumpi(tag_63, callvalue)\n      jumpi(tag_63, slt(add(not(0x03), calldatasize), 0x00))\n      sload(0x01)\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_9:\n      jumpi(tag_63, callvalue)\n      jumpi(tag_63, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":8318:8325  30 days */\n      0x278d00\n        /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_7:\n      jumpi(tag_63, callvalue)\n      jumpi(tag_63, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \"contracts/modules/Storage.sol\":5128:5233  uint[] public glbBoosterPackages = [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n      0x14\n        /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n      sload\n        /* \"contracts/modules/Storage.sol\":5128:5233  uint[] public glbBoosterPackages = [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n      dup2\n      lt\n      iszero\n      tag_63\n      jumpi\n      0x14\n        /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n      sload\n      dup2\n      lt\n      iszero\n      tag_109\n      jumpi\n        /* \"contracts/modules/Storage.sol\":5128:5233  uint[] public glbBoosterPackages = [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n      0x14\n        /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n      0x00\n      mstore\n      0xce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ec\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_5:\n      jumpi(tag_63, callvalue)\n      jumpi(tag_63, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      0x07\n        /* \"contracts/modules/Storage.sol\":5240:5297  uint[7] public minLevelForPool = [3, 5, 7, 9, 11, 13, 15] */\n      dup2\n      lt\n      iszero\n      tag_63\n      jumpi\n        /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n      0x20\n      swap1\n        /* \"contracts/modules/Storage.sol\":5240:5297  uint[7] public minLevelForPool = [3, 5, 7, 9, 11, 13, 15] */\n      0x15\n        /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_3:\n      jumpi(tag_63, callvalue)\n      jumpi(tag_63, slt(add(not(0x03), calldatasize), 0x00))\n      dup1\n        /* \"contracts/modules/Storage.sol\":683:688  10000 */\n      0x2710\n        /* \"contracts/modules/Storage.sol\":292:13993  contract Storage is ReentrancyGuard {... */\n      0x20\n      swap3\n      mstore\n      return\n\n    auxdata: 0xa2646970667358221220d9131e0784ecc1eb8a461e39709f9a485ebd123f4b36c3315b0e96dfeaedf01564736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"allocate_memory": {
									"entryPoint": 1345,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"allocate_memory_3415": {
									"entryPoint": 1314,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"clear_storage_range_uint256": {
									"entryPoint": 1377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040523461051e5760015f556040516101e081016001600160401b0381118282101761050a5760405267d02ab486cedc0000815268015af1d78b58c4000060208201526802b5e3af16b1880000604082015268056bc75e2d631000006060820152680ad78ebc5ac620000060808201526815af1d78b58c40000060a0820152682b5e3af16b1880000060c08201526856bc75e2d63100000060e082015268ad78ebc5ac6200000061010082015269015af1d78b58c40000006101208201526902b5e3af16b18800000061014082015269056bc75e2d6310000000610160820152690ad78ebc5ac6200000006101808201526915af1d78b58c400000006101a0820152692b5e3af16b18800000006101c0820152600b54600f600b5580600f106104b4575b50600b5f5260205f20905f5b600f811061049757610141610522565b680410d586a20a4c00008152681043561a8829300000602082015268410d586a20a4c0000060408201526901043561a882930000006060820152690410d586a20a4c0000006080820152691043561a88293000000060a082015269410d586a20a4c000000060c0820152601354600760135580600710610441575b5060135f5260205f20905f5b60078110610424576101d8610541565b68056bc75e2d631000008152680ad78ebc5ac620000060208201526815af1d78b58c4000006040820152682b5e3af16b1880000060608201526856bc75e2d631000000608082015268ad78ebc5ac6200000060a082015269015af1d78b58c400000060c08201526902b5e3af16b18800000060e08201526014546008601455806008106103ce575b5060145f5260205f20905f5b600881106103b15761027c610522565b60038152600560208201526007604082015260096060820152600b6080820152600d60a0820152600f60c08201525f5b60078110610399576102bc610541565b6004815260056020820152600660408201526007606082015260086080820152600960a0820152600a60c0820152600b60e08201525f5b6008811061038157610303610541565b5f815260016020820152600160408201526001606082015260016080820152600160a0820152600160c0820152600160e08201525f5b60088110610369575f6036555f6037555f6038556001603d555f603e555f603f5560405161064a90816105788239f35b600190602060ff845116930192816024015501610339565b600190602060ff84511693019281601c0155016102f3565b600190602060ff8451169301928160150155016102ac565b81516001600160501b03168184015560209091019060010161026c565b60145f5261041e907fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ec017fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4f4610561565b81610260565b81516001600160501b0316818401556020909101906001016101c8565b60135f52610491907f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a090017f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a097610561565b816101bc565b81516001600160501b031681840155602090910190600101610131565b600b5f52610504907f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9017f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01dc8610561565b5f610125565b634e487b7160e01b5f52604160045260245ffd5b5f80fd5b6040519060e082016001600160401b0381118382101761050a57604052565b6040519061010082016001600160401b0381118382101761050a57604052565b81811061056c575050565b5f815560010161056156fe6080806040526004361015610012575f80fd5b5f3560e01c90816301c234a8146105fa575080632132d204146105ce5780632350268f146105745780632a891534146105575780632f48ab7d1461052f5780633080b5bc1461051257806332bc298c146104f557806332fcd966146104d3578063375b43b4146104b857806339ab36031461045e57806358c7d3521461044357806376f5f7001461042657806378f6ad6d146104095780637cdc65f2146103e1578063956a3228146103b5578063a59d17d114610398578063ae4708dc1461033e578063bff1f9e114610321578063c216212a146102b3578063c8df29081461028f578063c9ed070814610272578063ca8e912114610255578063d0a2fd7914610229578063e898fc381461020c578063e9e34a16146101e4578063ebe0ff15146101c1578063ec597e6f146101a4578063f5d74d931461017c5763fddc806f1461015b575f80fd5b34610178575f366003190112610178576020603754604051908152f35b5f80fd5b34610178575f366003190112610178576004546040516001600160a01b039091168152602090f35b34610178575f366003190112610178576020600554604051908152f35b34610178575f366003190112610178576020604051683635c9adc5dea000008152f35b34610178575f366003190112610178576003546040516001600160a01b039091168152602090f35b34610178575f366003190112610178576020603e54604051908152f35b3461017857602036600319011261017857600435600881101561017857602090601c0154604051908152f35b34610178575f366003190112610178576020603654604051908152f35b34610178575f366003190112610178576020603d54604051908152f35b34610178575f36600319011261017857602060405169021e19e0c9bab24000008152f35b3461017857602036600319011261017857600435600b5481101561017857600b5481101561030d57600b5f527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90154604051908152602090f35b634e487b7160e01b5f52603260045260245ffd5b34610178575f366003190112610178576020600654604051908152f35b34610178576020366003190112610178576004356013548110156101785760135481101561030d5760135f527f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a0900154604051908152602090f35b34610178575f366003190112610178576020603f54604051908152f35b346101785760203660031901126101785760043560088110156101785760209060240154604051908152f35b34610178575f366003190112610178576002546040516001600160a01b039091168152602090f35b34610178575f366003190112610178576020600954604051908152f35b34610178575f36600319011261017857602060405162093a808152f35b34610178575f366003190112610178576020604051600a8152f35b34610178576020366003190112610178576004356007548110156101785760075481101561030d5760075f527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880154604051908152602090f35b34610178575f366003190112610178576020604051600f8152f35b34610178575f366003190112610178576020604051670de0b6b3a76400008152f35b34610178575f366003190112610178576020604051620151808152f35b34610178575f366003190112610178576020603854604051908152f35b34610178575f366003190112610178576001546040516001600160a01b039091168152602090f35b34610178575f36600319011261017857602060405162278d008152f35b34610178576020366003190112610178576004356014548110156101785760145481101561030d5760145f527fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ec0154604051908152602090f35b346101785760203660031901126101785760043560078110156101785760209060150154604051908152f35b34610178575f366003190112610178578061271060209252f3fea2646970667358221220d9131e0784ecc1eb8a461e39709f9a485ebd123f4b36c3315b0e96dfeaedf01564736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x51E JUMPI PUSH1 0x1 PUSH0 SSTORE PUSH1 0x40 MLOAD PUSH2 0x1E0 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR PUSH2 0x50A JUMPI PUSH1 0x40 MSTORE PUSH8 0xD02AB486CEDC0000 DUP2 MSTORE PUSH9 0x15AF1D78B58C40000 PUSH1 0x20 DUP3 ADD MSTORE PUSH9 0x2B5E3AF16B1880000 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x56BC75E2D63100000 PUSH1 0x60 DUP3 ADD MSTORE PUSH9 0xAD78EBC5AC6200000 PUSH1 0x80 DUP3 ADD MSTORE PUSH9 0x15AF1D78B58C400000 PUSH1 0xA0 DUP3 ADD MSTORE PUSH9 0x2B5E3AF16B18800000 PUSH1 0xC0 DUP3 ADD MSTORE PUSH9 0x56BC75E2D631000000 PUSH1 0xE0 DUP3 ADD MSTORE PUSH9 0xAD78EBC5AC62000000 PUSH2 0x100 DUP3 ADD MSTORE PUSH10 0x15AF1D78B58C4000000 PUSH2 0x120 DUP3 ADD MSTORE PUSH10 0x2B5E3AF16B188000000 PUSH2 0x140 DUP3 ADD MSTORE PUSH10 0x56BC75E2D6310000000 PUSH2 0x160 DUP3 ADD MSTORE PUSH10 0xAD78EBC5AC620000000 PUSH2 0x180 DUP3 ADD MSTORE PUSH10 0x15AF1D78B58C40000000 PUSH2 0x1A0 DUP3 ADD MSTORE PUSH10 0x2B5E3AF16B1880000000 PUSH2 0x1C0 DUP3 ADD MSTORE PUSH1 0xB SLOAD PUSH1 0xF PUSH1 0xB SSTORE DUP1 PUSH1 0xF LT PUSH2 0x4B4 JUMPI JUMPDEST POP PUSH1 0xB PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH0 JUMPDEST PUSH1 0xF DUP2 LT PUSH2 0x497 JUMPI PUSH2 0x141 PUSH2 0x522 JUMP JUMPDEST PUSH9 0x410D586A20A4C0000 DUP2 MSTORE PUSH9 0x1043561A8829300000 PUSH1 0x20 DUP3 ADD MSTORE PUSH9 0x410D586A20A4C00000 PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x1043561A88293000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH10 0x410D586A20A4C000000 PUSH1 0x80 DUP3 ADD MSTORE PUSH10 0x1043561A882930000000 PUSH1 0xA0 DUP3 ADD MSTORE PUSH10 0x410D586A20A4C0000000 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x13 SLOAD PUSH1 0x7 PUSH1 0x13 SSTORE DUP1 PUSH1 0x7 LT PUSH2 0x441 JUMPI JUMPDEST POP PUSH1 0x13 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH0 JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x424 JUMPI PUSH2 0x1D8 PUSH2 0x541 JUMP JUMPDEST PUSH9 0x56BC75E2D63100000 DUP2 MSTORE PUSH9 0xAD78EBC5AC6200000 PUSH1 0x20 DUP3 ADD MSTORE PUSH9 0x15AF1D78B58C400000 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x2B5E3AF16B18800000 PUSH1 0x60 DUP3 ADD MSTORE PUSH9 0x56BC75E2D631000000 PUSH1 0x80 DUP3 ADD MSTORE PUSH9 0xAD78EBC5AC62000000 PUSH1 0xA0 DUP3 ADD MSTORE PUSH10 0x15AF1D78B58C4000000 PUSH1 0xC0 DUP3 ADD MSTORE PUSH10 0x2B5E3AF16B188000000 PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x14 SLOAD PUSH1 0x8 PUSH1 0x14 SSTORE DUP1 PUSH1 0x8 LT PUSH2 0x3CE JUMPI JUMPDEST POP PUSH1 0x14 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH0 JUMPDEST PUSH1 0x8 DUP2 LT PUSH2 0x3B1 JUMPI PUSH2 0x27C PUSH2 0x522 JUMP JUMPDEST PUSH1 0x3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0xC0 DUP3 ADD MSTORE PUSH0 JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x399 JUMPI PUSH2 0x2BC PUSH2 0x541 JUMP JUMPDEST PUSH1 0x4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0xE0 DUP3 ADD MSTORE PUSH0 JUMPDEST PUSH1 0x8 DUP2 LT PUSH2 0x381 JUMPI PUSH2 0x303 PUSH2 0x541 JUMP JUMPDEST PUSH0 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 DUP3 ADD MSTORE PUSH0 JUMPDEST PUSH1 0x8 DUP2 LT PUSH2 0x369 JUMPI PUSH0 PUSH1 0x36 SSTORE PUSH0 PUSH1 0x37 SSTORE PUSH0 PUSH1 0x38 SSTORE PUSH1 0x1 PUSH1 0x3D SSTORE PUSH0 PUSH1 0x3E SSTORE PUSH0 PUSH1 0x3F SSTORE PUSH1 0x40 MLOAD PUSH2 0x64A SWAP1 DUP2 PUSH2 0x578 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH1 0xFF DUP5 MLOAD AND SWAP4 ADD SWAP3 DUP2 PUSH1 0x24 ADD SSTORE ADD PUSH2 0x339 JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH1 0xFF DUP5 MLOAD AND SWAP4 ADD SWAP3 DUP2 PUSH1 0x1C ADD SSTORE ADD PUSH2 0x2F3 JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH1 0xFF DUP5 MLOAD AND SWAP4 ADD SWAP3 DUP2 PUSH1 0x15 ADD SSTORE ADD PUSH2 0x2AC JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND DUP2 DUP5 ADD SSTORE PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x26C JUMP JUMPDEST PUSH1 0x14 PUSH0 MSTORE PUSH2 0x41E SWAP1 PUSH32 0xCE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4EC ADD PUSH32 0xCE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4F4 PUSH2 0x561 JUMP JUMPDEST DUP2 PUSH2 0x260 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND DUP2 DUP5 ADD SSTORE PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1C8 JUMP JUMPDEST PUSH1 0x13 PUSH0 MSTORE PUSH2 0x491 SWAP1 PUSH32 0x66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A090 ADD PUSH32 0x66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A097 PUSH2 0x561 JUMP JUMPDEST DUP2 PUSH2 0x1BC JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND DUP2 DUP5 ADD SSTORE PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x131 JUMP JUMPDEST PUSH1 0xB PUSH0 MSTORE PUSH2 0x504 SWAP1 PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 ADD PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DC8 PUSH2 0x561 JUMP JUMPDEST PUSH0 PUSH2 0x125 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0xE0 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x50A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x100 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x50A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x56C JUMPI POP POP JUMP JUMPDEST PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x561 JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1C234A8 EQ PUSH2 0x5FA JUMPI POP DUP1 PUSH4 0x2132D204 EQ PUSH2 0x5CE JUMPI DUP1 PUSH4 0x2350268F EQ PUSH2 0x574 JUMPI DUP1 PUSH4 0x2A891534 EQ PUSH2 0x557 JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0x52F JUMPI DUP1 PUSH4 0x3080B5BC EQ PUSH2 0x512 JUMPI DUP1 PUSH4 0x32BC298C EQ PUSH2 0x4F5 JUMPI DUP1 PUSH4 0x32FCD966 EQ PUSH2 0x4D3 JUMPI DUP1 PUSH4 0x375B43B4 EQ PUSH2 0x4B8 JUMPI DUP1 PUSH4 0x39AB3603 EQ PUSH2 0x45E JUMPI DUP1 PUSH4 0x58C7D352 EQ PUSH2 0x443 JUMPI DUP1 PUSH4 0x76F5F700 EQ PUSH2 0x426 JUMPI DUP1 PUSH4 0x78F6AD6D EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0x7CDC65F2 EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0x956A3228 EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0xA59D17D1 EQ PUSH2 0x398 JUMPI DUP1 PUSH4 0xAE4708DC EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0xBFF1F9E1 EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0xC216212A EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xC8DF2908 EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xC9ED0708 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0xCA8E9121 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xD0A2FD79 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0xE898FC38 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0xE9E34A16 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0xEBE0FF15 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0xEC597E6F EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0xF5D74D93 EQ PUSH2 0x17C JUMPI PUSH4 0xFDDC806F EQ PUSH2 0x15B JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x20 PUSH1 0x37 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH9 0x3635C9ADC5DEA00000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x20 PUSH1 0x3E SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x178 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1C ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x20 PUSH1 0x36 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x20 PUSH1 0x3D SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH10 0x21E19E0C9BAB2400000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x178 JUMPI PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x30D JUMPI PUSH1 0xB PUSH0 MSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x13 SLOAD DUP2 LT ISZERO PUSH2 0x178 JUMPI PUSH1 0x13 SLOAD DUP2 LT ISZERO PUSH2 0x30D JUMPI PUSH1 0x13 PUSH0 MSTORE PUSH32 0x66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A090 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x20 PUSH1 0x3F SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x178 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x24 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x20 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x93A80 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xA DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x178 JUMPI PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x30D JUMPI PUSH1 0x7 PUSH0 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xF DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH8 0xDE0B6B3A7640000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x15180 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x20 PUSH1 0x38 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x278D00 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x14 SLOAD DUP2 LT ISZERO PUSH2 0x178 JUMPI PUSH1 0x14 SLOAD DUP2 LT ISZERO PUSH2 0x30D JUMPI PUSH1 0x14 PUSH0 MSTORE PUSH32 0xCE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4EC ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x178 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x15 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI DUP1 PUSH2 0x2710 PUSH1 0x20 SWAP3 MSTORE RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 SGT 0x1E SMOD DUP5 EOFCREATE 0xC1 0xEB DUP11 CHAINID 0x1E CODECOPY PUSH17 0x9F9A485EBD123F4B36C3315B0E96DFEAED CREATE ISZERO PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "292:13701:8:-:0;;;;;;1716:1:3;1821:22;292:13701:8;;;;;;-1:-1:-1;;;;;292:13701:8;;;;;;;;;;1324:9;292:13701;;1356:9;1313:515;;;292:13701;1388:9;292:13701;1313:515;;292:13701;1420:10;1313:515;;;292:13701;1453:10;1313:515;;;292:13701;1486:10;1313:515;;;292:13701;1519:10;1313:515;;;292:13701;1552:11;1313:515;;;292:13701;1586:11;1313:515;;;292:13701;1620:11;1313:515;;;292:13701;1654:12;1313:515;;;292:13701;1689:12;1313:515;;;292:13701;1724:12;1313:515;;;292:13701;1759:13;1313:515;;;292:13701;1795:13;1313:515;;;292:13701;1313:515;292:13701;1313:515;;292:13701;;1313:515;292:13701;;;-1:-1:-1;292:13701:8;1313:515;1821:22:3;292:13701:8;1313:515;1821:22:3;292:13701:8;;1821:22:3;292:13701:8;1313:515;292:13701;;;;;;:::i;:::-;5058:5;292:13701;;5065:6;1313:515;5057:64;;292:13701;5073:7;292:13701;5057:64;;292:13701;5082:7;1313:515;5057:64;;292:13701;5091:8;1313:515;5057:64;;292:13701;5101:8;1313:515;5057:64;;292:13701;5111:9;1313:515;5057:64;;292:13701;5057:64;292:13701;5057:64;;292:13701;;5057:64;292:13701;;;;;5057:64;1821:22:3;292:13701:8;1313:515;1821:22:3;292:13701:8;;1821:22:3;292:13701:8;5057:64;292:13701;;;;;;:::i;:::-;1420:10;292:13701;;1453:10;1313:515;5163:70;;292:13701;1486:10;292:13701;5163:70;;292:13701;1519:10;1313:515;5163:70;;292:13701;1552:11;1313:515;5163:70;;292:13701;1586:11;1313:515;5163:70;;292:13701;1620:11;1313:515;5163:70;;292:13701;1654:12;1313:515;5163:70;;292:13701;5163:70;292:13701;5163:70;;292:13701;;5163:70;292:13701;;;;;5163:70;1821:22:3;292:13701:8;1313:515;1821:22:3;292:13701:8;;1821:22:3;292:13701:8;5163:70;292:13701;;;;;;:::i;:::-;5274:1;292:13701;;;1313:515;5273:24;;292:13701;5057:64;292:13701;5273:24;;292:13701;5283:1;1313:515;5273:24;;292:13701;1313:515;;5273:24;;292:13701;5290:2;1313:515;5273:24;;292:13701;1313:515;;5273:24;;292:13701;1821:22:3;292:13701:8;5057:64;292:13701;;;;;;:::i;:::-;5344:1;292:13701;;;1313:515;5343:25;;292:13701;5350:1;292:13701;5343:25;;292:13701;5057:64;1313:515;5343:25;;292:13701;5163:70;1313:515;5343:25;;292:13701;5283:1;1313:515;5343:25;;292:13701;5362:2;1313:515;5343:25;;292:13701;1313:515;;5343:25;;292:13701;1821:22:3;292:13701:8;5163:70;292:13701;;;;;;:::i;:::-;1821:22:3;292:13701:8;;1716:1:3;1313:515:8;5413:23;;292:13701;1716:1:3;292:13701:8;5413:23;;292:13701;1716:1:3;1313:515:8;5413:23;;292:13701;1716:1:3;1313:515:8;5413:23;;292:13701;1716:1:3;1313:515:8;5413:23;;292:13701;1716:1:3;1313:515:8;5413:23;;292:13701;1716:1:3;1313:515:8;5413:23;;292:13701;1821:22:3;292:13701:8;5163:70;292:13701;;;;1821:22:3;6966:1:8;292:13701;1821:22:3;7011:1:8;292:13701;1821:22:3;7053:1:8;292:13701;1716:1:3;8425::8;292:13701;1821:22:3;8471:1:8;292:13701;1821:22:3;8512:1:8;292:13701;;;;;;;;;;;1716:1:3;292:13701:8;1313:515;292:13701;;;;;;;;5413:23;292:13701;;;;;;1716:1:3;292:13701:8;1313:515;292:13701;;;;;;;;5343:25;292:13701;;;;;;1716:1:3;292:13701:8;1313:515;292:13701;;;;;;;;5273:24;292:13701;;;;;;;;-1:-1:-1;;;;;292:13701:8;;;;;1313:515;292:13701;;;;1716:1:3;292:13701:8;;;;5163:70;1821:22:3;292:13701:8;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;292:13701:8;;;;;1313:515;292:13701;;;;1716:1:3;292:13701:8;;;;5057:64;1821:22:3;292:13701:8;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;292:13701:8;;;;;1313:515;292:13701;;;;1716:1:3;292:13701:8;;;;1313:515;1821:22:3;292:13701:8;;;;;;;:::i;:::-;;;;;;;;1821:22:3;292:13701:8;;;;;1821:22:3;292:13701:8;;;;;;;;;;;;-1:-1:-1;;;;;292:13701:8;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;292:13701:8;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080806040526004361015610012575f80fd5b5f3560e01c90816301c234a8146105fa575080632132d204146105ce5780632350268f146105745780632a891534146105575780632f48ab7d1461052f5780633080b5bc1461051257806332bc298c146104f557806332fcd966146104d3578063375b43b4146104b857806339ab36031461045e57806358c7d3521461044357806376f5f7001461042657806378f6ad6d146104095780637cdc65f2146103e1578063956a3228146103b5578063a59d17d114610398578063ae4708dc1461033e578063bff1f9e114610321578063c216212a146102b3578063c8df29081461028f578063c9ed070814610272578063ca8e912114610255578063d0a2fd7914610229578063e898fc381461020c578063e9e34a16146101e4578063ebe0ff15146101c1578063ec597e6f146101a4578063f5d74d931461017c5763fddc806f1461015b575f80fd5b34610178575f366003190112610178576020603754604051908152f35b5f80fd5b34610178575f366003190112610178576004546040516001600160a01b039091168152602090f35b34610178575f366003190112610178576020600554604051908152f35b34610178575f366003190112610178576020604051683635c9adc5dea000008152f35b34610178575f366003190112610178576003546040516001600160a01b039091168152602090f35b34610178575f366003190112610178576020603e54604051908152f35b3461017857602036600319011261017857600435600881101561017857602090601c0154604051908152f35b34610178575f366003190112610178576020603654604051908152f35b34610178575f366003190112610178576020603d54604051908152f35b34610178575f36600319011261017857602060405169021e19e0c9bab24000008152f35b3461017857602036600319011261017857600435600b5481101561017857600b5481101561030d57600b5f527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90154604051908152602090f35b634e487b7160e01b5f52603260045260245ffd5b34610178575f366003190112610178576020600654604051908152f35b34610178576020366003190112610178576004356013548110156101785760135481101561030d5760135f527f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a0900154604051908152602090f35b34610178575f366003190112610178576020603f54604051908152f35b346101785760203660031901126101785760043560088110156101785760209060240154604051908152f35b34610178575f366003190112610178576002546040516001600160a01b039091168152602090f35b34610178575f366003190112610178576020600954604051908152f35b34610178575f36600319011261017857602060405162093a808152f35b34610178575f366003190112610178576020604051600a8152f35b34610178576020366003190112610178576004356007548110156101785760075481101561030d5760075f527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880154604051908152602090f35b34610178575f366003190112610178576020604051600f8152f35b34610178575f366003190112610178576020604051670de0b6b3a76400008152f35b34610178575f366003190112610178576020604051620151808152f35b34610178575f366003190112610178576020603854604051908152f35b34610178575f366003190112610178576001546040516001600160a01b039091168152602090f35b34610178575f36600319011261017857602060405162278d008152f35b34610178576020366003190112610178576004356014548110156101785760145481101561030d5760145f527fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ec0154604051908152602090f35b346101785760203660031901126101785760043560078110156101785760209060150154604051908152f35b34610178575f366003190112610178578061271060209252f3fea2646970667358221220d9131e0784ecc1eb8a461e39709f9a485ebd123f4b36c3315b0e96dfeaedf01564736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1C234A8 EQ PUSH2 0x5FA JUMPI POP DUP1 PUSH4 0x2132D204 EQ PUSH2 0x5CE JUMPI DUP1 PUSH4 0x2350268F EQ PUSH2 0x574 JUMPI DUP1 PUSH4 0x2A891534 EQ PUSH2 0x557 JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0x52F JUMPI DUP1 PUSH4 0x3080B5BC EQ PUSH2 0x512 JUMPI DUP1 PUSH4 0x32BC298C EQ PUSH2 0x4F5 JUMPI DUP1 PUSH4 0x32FCD966 EQ PUSH2 0x4D3 JUMPI DUP1 PUSH4 0x375B43B4 EQ PUSH2 0x4B8 JUMPI DUP1 PUSH4 0x39AB3603 EQ PUSH2 0x45E JUMPI DUP1 PUSH4 0x58C7D352 EQ PUSH2 0x443 JUMPI DUP1 PUSH4 0x76F5F700 EQ PUSH2 0x426 JUMPI DUP1 PUSH4 0x78F6AD6D EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0x7CDC65F2 EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0x956A3228 EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0xA59D17D1 EQ PUSH2 0x398 JUMPI DUP1 PUSH4 0xAE4708DC EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0xBFF1F9E1 EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0xC216212A EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xC8DF2908 EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xC9ED0708 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0xCA8E9121 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xD0A2FD79 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0xE898FC38 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0xE9E34A16 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0xEBE0FF15 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0xEC597E6F EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0xF5D74D93 EQ PUSH2 0x17C JUMPI PUSH4 0xFDDC806F EQ PUSH2 0x15B JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x20 PUSH1 0x37 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH9 0x3635C9ADC5DEA00000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x20 PUSH1 0x3E SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x178 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1C ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x20 PUSH1 0x36 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x20 PUSH1 0x3D SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH10 0x21E19E0C9BAB2400000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x178 JUMPI PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x30D JUMPI PUSH1 0xB PUSH0 MSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x13 SLOAD DUP2 LT ISZERO PUSH2 0x178 JUMPI PUSH1 0x13 SLOAD DUP2 LT ISZERO PUSH2 0x30D JUMPI PUSH1 0x13 PUSH0 MSTORE PUSH32 0x66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A090 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x20 PUSH1 0x3F SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x178 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x24 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x20 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x93A80 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xA DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x178 JUMPI PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x30D JUMPI PUSH1 0x7 PUSH0 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xF DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH8 0xDE0B6B3A7640000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x15180 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x20 PUSH1 0x38 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x278D00 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x14 SLOAD DUP2 LT ISZERO PUSH2 0x178 JUMPI PUSH1 0x14 SLOAD DUP2 LT ISZERO PUSH2 0x30D JUMPI PUSH1 0x14 PUSH0 MSTORE PUSH32 0xCE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4EC ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x178 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x15 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI DUP1 PUSH2 0x2710 PUSH1 0x20 SWAP3 MSTORE RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 SGT 0x1E SMOD DUP5 EOFCREATE 0xC1 0xEB DUP11 CHAINID 0x1E CODECOPY PUSH17 0x9F9A485EBD123F4B36C3315B0E96DFEAED CREATE ISZERO PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "292:13701:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;292:13701:8;;;;;6974:38;292:13701;;;;;;;;;;;;;;;;;-1:-1:-1;;292:13701:8;;;;;;;;-1:-1:-1;;;;;292:13701:8;;;;;;;;;;;;;;-1:-1:-1;;292:13701:8;;;;;534:24;292:13701;;;;;;;;;;;;;-1:-1:-1;;292:13701:8;;;;;;;6914:7;292:13701;;;;;;;;;-1:-1:-1;;292:13701:8;;;;460:30;292:13701;;;-1:-1:-1;;;;;292:13701:8;;;;;;;;;;;;;;-1:-1:-1;;292:13701:8;;;;;8433:39;292:13701;;;;;;;;;;;;;-1:-1:-1;;292:13701:8;;;;;;;5304:64;;;;;292:13701;;5304:64;292:13701;;;;;;;;;;;;;;-1:-1:-1;;292:13701:8;;;;;6933:34;292:13701;;;;;;;;;;;;;-1:-1:-1;;292:13701:8;;;;;8391:35;292:13701;;;;;;;;;;;;;-1:-1:-1;;292:13701:8;;;;;;;8370:8;292:13701;;;;;;;;;-1:-1:-1;;292:13701:8;;;;;;1288:540;292:13701;1288:540;;;;;;292:13701;;;;;;1288:540;292:13701;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;292:13701:8;;;;;565:22;292:13701;;;;;;;;;;;;;-1:-1:-1;;292:13701:8;;;;;;5028:93;292:13701;5028:93;;;;;;292:13701;;;;;;5028:93;292:13701;;;;;;;;;;;;;;;;;;;-1:-1:-1;;292:13701:8;;;;;8479:34;292:13701;;;;;;;;;;;;;-1:-1:-1;;292:13701:8;;;;;;;5375:61;;;;;292:13701;;5375:61;292:13701;;;;;;;;;;;;;;-1:-1:-1;;292:13701:8;;;;422:28;292:13701;;;-1:-1:-1;;;;;292:13701:8;;;;;;;;;;;;;;-1:-1:-1;;292:13701:8;;;;;1131:34;292:13701;;;;;;;;;;;;;-1:-1:-1;;292:13701:8;;;;;;;6861:6;292:13701;;;;;;;;;-1:-1:-1;;292:13701:8;;;;;;;848:2;292:13701;;;;;;;;;-1:-1:-1;;292:13701:8;;;;;;864:31;292:13701;864:31;;;;;;292:13701;;;;;;864:31;292:13701;;;;;;;;;;;;;;;;;;;-1:-1:-1;;292:13701:8;;;;;;;789:2;292:13701;;;;;;;;;-1:-1:-1;;292:13701:8;;;;;;;1120:4;292:13701;;;;;;;;;-1:-1:-1;;292:13701:8;;;;;;;731:6;292:13701;;;;;;;;;-1:-1:-1;;292:13701:8;;;;;7021:33;292:13701;;;;;;;;;;;;;-1:-1:-1;;292:13701:8;;;;;;;;-1:-1:-1;;;;;292:13701:8;;;;;;;;;;;;;;-1:-1:-1;;292:13701:8;;;;;;;8318:7;292:13701;;;;;;;;;-1:-1:-1;;292:13701:8;;;;;;5128:105;292:13701;5128:105;;;;;;292:13701;;;;;;5128:105;292:13701;;;;;;;;;;;;;;;;;;;-1:-1:-1;;292:13701:8;;;;;;;5240:57;;;;;292:13701;;5240:57;292:13701;;;;;;;;;;;;;;-1:-1:-1;;292:13701:8;;;;;683:5;292:13701;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "322000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ACC_PRECISION()": "307",
								"MONTH_DURATION()": "219",
								"PERCENTS_DIVIDER()": "148",
								"ROI_CAP_DIVIDER()": "373",
								"ROI_CAP_MULTIPLIER()": "329",
								"TIME_STEP()": "285",
								"WEEK_DURATION()": "395",
								"WeeklyCapping()": "703",
								"WeeklyTotalReward()": "2366",
								"communityAccPerUser()": "2520",
								"creatorWallet()": "2566",
								"currentMonthlyRound()": "2696",
								"currentMonthlyStartTime()": "2762",
								"currentWeeklyRound()": "2718",
								"currentWeeklyStartTime()": "2869",
								"defaultRefId()": "2828",
								"glbBoosterPackages(uint256)": "6571",
								"minLevelForGlbBooster(uint256)": "2778",
								"minLevelForPool(uint256)": "2316",
								"minPoolForGlbBooster(uint256)": "2602",
								"monthlyCapping()": "571",
								"monthlyTotalReward()": "2586",
								"packages(uint256)": "6923",
								"poolPackages(uint256)": "6879",
								"registeredUserIds(uint256)": "6725",
								"systemMaintance()": "2808",
								"teamDevelopment()": "2874",
								"totalUsers()": "2630",
								"usdt()": "2368"
							},
							"internal": {
								"_distributeIncome(uint256,uint256,uint256,uint256,uint256)": "infinite",
								"_sendToCreator(uint256)": "infinite",
								"_tryWeeklyContestQualify(uint256,uint256)": "infinite",
								"_weeklyContestQualifier(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH",
									"source": 8,
									"value": "1E0"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1324,
									"end": 1333,
									"name": "PUSH",
									"source": 8,
									"value": "D02AB486CEDC0000"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1356,
									"end": 1365,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C40000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1388,
									"end": 1397,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B1880000"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1420,
									"end": 1430,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D63100000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1453,
									"end": 1463,
									"name": "PUSH",
									"source": 8,
									"value": "AD78EBC5AC6200000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1486,
									"end": 1496,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C400000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1519,
									"end": 1529,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B18800000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1552,
									"end": 1563,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D631000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1586,
									"end": 1597,
									"name": "PUSH",
									"source": 8,
									"value": "AD78EBC5AC62000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1620,
									"end": 1631,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C4000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1654,
									"end": 1666,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B188000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "140"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1689,
									"end": 1701,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D6310000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1724,
									"end": 1736,
									"name": "PUSH",
									"source": 8,
									"value": "AD78EBC5AC620000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "180"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1759,
									"end": 1772,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C40000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "1A0"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1795,
									"end": 1808,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B1880000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "1C0"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "F"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "F"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "tag",
									"source": -1,
									"value": "9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "tag",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "F"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 13993,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "tag",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5058,
									"end": 5063,
									"name": "PUSH",
									"source": 8,
									"value": "410D586A20A4C0000"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5065,
									"end": 5071,
									"name": "PUSH",
									"source": 8,
									"value": "1043561A8829300000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5073,
									"end": 5080,
									"name": "PUSH",
									"source": 8,
									"value": "410D586A20A4C00000"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5082,
									"end": 5089,
									"name": "PUSH",
									"source": 8,
									"value": "1043561A88293000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5091,
									"end": 5099,
									"name": "PUSH",
									"source": 8,
									"value": "410D586A20A4C000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5101,
									"end": 5109,
									"name": "PUSH",
									"source": 8,
									"value": "1043561A882930000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5111,
									"end": 5120,
									"name": "PUSH",
									"source": 8,
									"value": "410D586A20A4C0000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "PUSH",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "PUSH",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "tag",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "PUSH",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "tag",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 292,
									"end": 13993,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "tag",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1420,
									"end": 1430,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D63100000"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1453,
									"end": 1463,
									"name": "PUSH",
									"source": 8,
									"value": "AD78EBC5AC6200000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1486,
									"end": 1496,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C400000"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1519,
									"end": 1529,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B18800000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1552,
									"end": 1563,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D631000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1586,
									"end": 1597,
									"name": "PUSH",
									"source": 8,
									"value": "AD78EBC5AC62000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1620,
									"end": 1631,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C4000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1654,
									"end": 1666,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B188000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "PUSH",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "PUSH",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "PUSH",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 13993,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5274,
									"end": 5275,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5283,
									"end": 5284,
									"name": "PUSH",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5290,
									"end": 5292,
									"name": "PUSH",
									"source": 8,
									"value": "D"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "F"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 292,
									"end": 13993,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "tag",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5344,
									"end": 5345,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5350,
									"end": 5351,
									"name": "PUSH",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5283,
									"end": 5284,
									"name": "PUSH",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5362,
									"end": 5364,
									"name": "PUSH",
									"source": 8,
									"value": "A"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "tag",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 292,
									"end": 13993,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "tag",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6966,
									"end": 6967,
									"name": "PUSH",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7011,
									"end": 7012,
									"name": "PUSH",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7053,
									"end": 7054,
									"name": "PUSH",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 8425,
									"end": 8426,
									"name": "PUSH",
									"source": 8,
									"value": "3D"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 8471,
									"end": 8472,
									"name": "PUSH",
									"source": 8,
									"value": "3E"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 8512,
									"end": 8513,
									"name": "PUSH",
									"source": 8,
									"value": "3F"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "RETURN",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "tag",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "PUSH",
									"source": 8,
									"value": "1C"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "PUSH",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "50"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "tag",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "PUSH",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH",
									"source": 8,
									"value": "CE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4EC"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH",
									"source": 8,
									"value": "CE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4F4"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 292,
									"end": 13993,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "tag",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "tag",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "50"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "tag",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "PUSH",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH",
									"source": 8,
									"value": "66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A090"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH",
									"source": 8,
									"value": "66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A097"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 292,
									"end": 13993,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "tag",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "50"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "tag",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH",
									"source": 8,
									"value": "175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH",
									"source": 8,
									"value": "175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DC8"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 292,
									"end": 13993,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "tag",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "tag",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "tag",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 292,
									"end": 13993,
									"name": "JUMP",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d9131e0784ecc1eb8a461e39709f9a485ebd123f4b36c3315b0e96dfeaedf01564736f6c634300081e0033",
									".code": [
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "1C234A8"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "2132D204"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "2350268F"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "2A891534"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "2F48AB7D"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "3080B5BC"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "32BC298C"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "32FCD966"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "375B43B4"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "39AB3603"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "58C7D352"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "76F5F700"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "78F6AD6D"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "7CDC65F2"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "956A3228"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "A59D17D1"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "AE4708DC"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "BFF1F9E1"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "C216212A"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "C8DF2908"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "C9ED0708"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "CA8E9121"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "D0A2FD79"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "E898FC38"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "E9E34A16"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "EBE0FF15"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "EC597E6F"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "F5D74D93"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "FDDC806F"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6974,
											"end": 7012,
											"name": "PUSH",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 534,
											"end": 558,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6914,
											"end": 6921,
											"name": "PUSH",
											"source": 8,
											"value": "3635C9ADC5DEA00000"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 460,
											"end": 490,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8433,
											"end": 8472,
											"name": "PUSH",
											"source": 8,
											"value": "3E"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 5304,
											"end": 5368,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5304,
											"end": 5368,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5304,
											"end": 5368,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5304,
											"end": 5368,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 5304,
											"end": 5368,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5304,
											"end": 5368,
											"name": "PUSH",
											"source": 8,
											"value": "1C"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6933,
											"end": 6967,
											"name": "PUSH",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8391,
											"end": 8426,
											"name": "PUSH",
											"source": 8,
											"value": "3D"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8370,
											"end": 8378,
											"name": "PUSH",
											"source": 8,
											"value": "21E19E0C9BAB2400000"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1288,
											"end": 1828,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1288,
											"end": 1828,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1288,
											"end": 1828,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1288,
											"end": 1828,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1288,
											"end": 1828,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 1288,
											"end": 1828,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1288,
											"end": 1828,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1288,
											"end": 1828,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5028,
											"end": 5121,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5028,
											"end": 5121,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5028,
											"end": 5121,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5028,
											"end": 5121,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5028,
											"end": 5121,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 5028,
											"end": 5121,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5028,
											"end": 5121,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5028,
											"end": 5121,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A090"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8479,
											"end": 8513,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 5375,
											"end": 5436,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5375,
											"end": 5436,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5375,
											"end": 5436,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5375,
											"end": 5436,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 5375,
											"end": 5436,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5375,
											"end": 5436,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 422,
											"end": 450,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1131,
											"end": 1165,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6861,
											"end": 6867,
											"name": "PUSH",
											"source": 8,
											"value": "93A80"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 848,
											"end": 850,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 864,
											"end": 895,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 864,
											"end": 895,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 864,
											"end": 895,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 864,
											"end": 895,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 864,
											"end": 895,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 864,
											"end": 895,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 864,
											"end": 895,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 864,
											"end": 895,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "A66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 789,
											"end": 791,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1120,
											"end": 1124,
											"name": "PUSH",
											"source": 8,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 731,
											"end": 737,
											"name": "PUSH",
											"source": 8,
											"value": "15180"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7054,
											"name": "PUSH",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8318,
											"end": 8325,
											"name": "PUSH",
											"source": 8,
											"value": "278D00"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5128,
											"end": 5233,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5128,
											"end": 5233,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5128,
											"end": 5233,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5128,
											"end": 5233,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5128,
											"end": 5233,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 5128,
											"end": 5233,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5128,
											"end": 5233,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5128,
											"end": 5233,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "CE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4EC"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 5240,
											"end": 5297,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5240,
											"end": 5297,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5240,
											"end": 5297,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5240,
											"end": 5297,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 5240,
											"end": 5297,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5240,
											"end": 5297,
											"name": "PUSH",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 683,
											"end": 688,
											"name": "PUSH",
											"source": 8,
											"value": "2710"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 13993,
											"name": "RETURN",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/modules/ContestRoyalty.sol",
								"contracts/modules/Storage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ACC_PRECISION()": "32fcd966",
							"MONTH_DURATION()": "2a891534",
							"PERCENTS_DIVIDER()": "01c234a8",
							"ROI_CAP_DIVIDER()": "58c7d352",
							"ROI_CAP_MULTIPLIER()": "375b43b4",
							"TIME_STEP()": "32bc298c",
							"WEEK_DURATION()": "76f5f700",
							"WeeklyCapping()": "ebe0ff15",
							"WeeklyTotalReward()": "3080b5bc",
							"communityAccPerUser()": "78f6ad6d",
							"creatorWallet()": "7cdc65f2",
							"currentMonthlyRound()": "c9ed0708",
							"currentMonthlyStartTime()": "e898fc38",
							"currentWeeklyRound()": "ca8e9121",
							"currentWeeklyStartTime()": "fddc806f",
							"defaultRefId()": "ec597e6f",
							"glbBoosterPackages(uint256)": "2350268f",
							"minLevelForGlbBooster(uint256)": "d0a2fd79",
							"minLevelForPool(uint256)": "2132d204",
							"minPoolForGlbBooster(uint256)": "956a3228",
							"monthlyCapping()": "c8df2908",
							"monthlyTotalReward()": "a59d17d1",
							"packages(uint256)": "c216212a",
							"poolPackages(uint256)": "ae4708dc",
							"registeredUserIds(uint256)": "39ab3603",
							"systemMaintance()": "e9e34a16",
							"teamDevelopment()": "f5d74d93",
							"totalUsers()": "bff1f9e1",
							"usdt()": "2f48ab7d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usersCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUser\",\"type\":\"uint256\"}],\"name\":\"CommunityBonusDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"packageLevel\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"incomeType\",\"type\":\"uint256\"}],\"name\":\"IncomeDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromUserId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"LotteryReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalUsers\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUserReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDistributed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"leftoverReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"MonthlyClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"joinTime\",\"type\":\"uint256\"}],\"name\":\"MonthlyContestQualified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUserReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimTime\",\"type\":\"uint256\"}],\"name\":\"MonthlyRewardClaim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"uplineId\",\"type\":\"uint256\"}],\"name\":\"Registration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"level\",\"type\":\"string\"}],\"name\":\"RewardSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"packageLevel\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"depositType\",\"type\":\"string\"}],\"name\":\"Upgrade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"matrixId\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"userId\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"parentId\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"position\",\"type\":\"uint8\"}],\"name\":\"UserJoined\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalUsers\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUserReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDistributed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"leftoverReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"WeeklyClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"joinTime\",\"type\":\"uint256\"}],\"name\":\"WeeklyContestQualified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUserReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimTime\",\"type\":\"uint256\"}],\"name\":\"WeeklyRewardClaim\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ACC_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MONTH_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERCENTS_DIVIDER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROI_CAP_DIVIDER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROI_CAP_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TIME_STEP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WEEK_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WeeklyCapping\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WeeklyTotalReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"communityAccPerUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creatorWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentMonthlyRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentMonthlyStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentWeeklyRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentWeeklyStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultRefId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"glbBoosterPackages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"minLevelForGlbBooster\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"minLevelForPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"minPoolForGlbBooster\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"monthlyCapping\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"monthlyTotalReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"packages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolPackages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"registeredUserIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"systemMaintance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamDevelopment\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdt\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/Storage.sol\":\"Storage\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/modules/Storage.sol\":{\"keccak256\":\"0xb6871c4ddfa82bc9db193e85fc7e8e9b192c6e1a5b331eda0714821b69bdbf4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348364d62e6b5e6424468248bc16433d382e4061629868930be76da53ac75eef\",\"dweb:/ipfs/QmPDZYjFkQgfzivfmdGxEMr5SEVK4G2s2aGgYPurzWqEEk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 100,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 1422,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "usdt",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)232"
							},
							{
								"astId": 1424,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "creatorWallet",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 1426,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "systemMaintance",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 1428,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "teamDevelopment",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 1430,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "defaultRefId",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1432,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "totalUsers",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1450,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "registeredUserIds",
								"offset": 0,
								"slot": "7",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 1452,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "nonce",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1457,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "communityAccPerUser",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1461,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "communityDebt",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1510,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "packages",
								"offset": 0,
								"slot": "11",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 1596,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "addressToId",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1601,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "users",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_uint256,t_struct(User)1554_storage)"
							},
							{
								"astId": 1606,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "userIncomes",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_uint256,t_struct(UserIncome)1581_storage)"
							},
							{
								"astId": 1612,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "incomeHistory",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_uint256,t_array(t_struct(Income)1592_storage)dyn_storage)"
							},
							{
								"astId": 1619,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "teams",
								"offset": 0,
								"slot": "16",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))"
							},
							{
								"astId": 1623,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "matrixDirect",
								"offset": 0,
								"slot": "17",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1628,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "directReferrals",
								"offset": 0,
								"slot": "18",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 1711,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "poolPackages",
								"offset": 0,
								"slot": "19",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 1723,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "glbBoosterPackages",
								"offset": 0,
								"slot": "20",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 1735,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "minLevelForPool",
								"offset": 0,
								"slot": "21",
								"type": "t_array(t_uint256)7_storage"
							},
							{
								"astId": 1748,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "minLevelForGlbBooster",
								"offset": 0,
								"slot": "28",
								"type": "t_array(t_uint256)8_storage"
							},
							{
								"astId": 1761,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "minPoolForGlbBooster",
								"offset": 0,
								"slot": "36",
								"type": "t_array(t_uint256)8_storage"
							},
							{
								"astId": 1795,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "userPooltopup",
								"offset": 0,
								"slot": "44",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserPoolTopup)1777_storage))"
							},
							{
								"astId": 1802,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "userPooldtl",
								"offset": 0,
								"slot": "45",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserPool)1772_storage))"
							},
							{
								"astId": 1809,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "userChildren",
								"offset": 0,
								"slot": "46",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))"
							},
							{
								"astId": 1816,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "userIdPerPool",
								"offset": 0,
								"slot": "47",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))"
							},
							{
								"astId": 1821,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "poolUsers",
								"offset": 0,
								"slot": "48",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 1827,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "userHasPool",
								"offset": 0,
								"slot": "49",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))"
							},
							{
								"astId": 1834,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "userBoosterdtl",
								"offset": 0,
								"slot": "50",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserBooster)1788_storage))"
							},
							{
								"astId": 1841,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "userBoosterChildren",
								"offset": 0,
								"slot": "51",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))"
							},
							{
								"astId": 1846,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "boosterUsers",
								"offset": 0,
								"slot": "52",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 1852,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "userHasbooster",
								"offset": 0,
								"slot": "53",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))"
							},
							{
								"astId": 1861,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "currentWeeklyRound",
								"offset": 0,
								"slot": "54",
								"type": "t_uint256"
							},
							{
								"astId": 1864,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "currentWeeklyStartTime",
								"offset": 0,
								"slot": "55",
								"type": "t_uint256"
							},
							{
								"astId": 1867,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "WeeklyTotalReward",
								"offset": 0,
								"slot": "56",
								"type": "t_uint256"
							},
							{
								"astId": 1904,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "weeklyContestdtl",
								"offset": 0,
								"slot": "57",
								"type": "t_mapping(t_uint256,t_struct(WeeklyContest)1886_storage)"
							},
							{
								"astId": 1909,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "weeklyQualifiedUsers",
								"offset": 0,
								"slot": "58",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 1916,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "weeklyUserdtl",
								"offset": 0,
								"slot": "59",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(weeklyUser)1899_storage))"
							},
							{
								"astId": 1923,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "weeklyUserDirects",
								"offset": 0,
								"slot": "60",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))"
							},
							{
								"astId": 1966,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "currentMonthlyRound",
								"offset": 0,
								"slot": "61",
								"type": "t_uint256"
							},
							{
								"astId": 1969,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "currentMonthlyStartTime",
								"offset": 0,
								"slot": "62",
								"type": "t_uint256"
							},
							{
								"astId": 1972,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "monthlyTotalReward",
								"offset": 0,
								"slot": "63",
								"type": "t_uint256"
							},
							{
								"astId": 2011,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "monthlyRoyaltydtl",
								"offset": 0,
								"slot": "64",
								"type": "t_mapping(t_uint256,t_struct(monthlyRoyalty)1991_storage)"
							},
							{
								"astId": 2014,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "monthlyQualifiedUsers",
								"offset": 0,
								"slot": "65",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 2019,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "monthlyRoyaltyUserdtl",
								"offset": 0,
								"slot": "66",
								"type": "t_mapping(t_uint256,t_struct(monthlyRoyaltyUser)2006_storage)"
							},
							{
								"astId": 2024,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "monthlyUserDirects",
								"offset": 0,
								"slot": "67",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Deposit)1519_storage)dyn_storage": {
								"base": "t_struct(Deposit)1519_storage",
								"encoding": "dynamic_array",
								"label": "struct Storage.Deposit[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(Income)1592_storage)dyn_storage": {
								"base": "t_struct(Income)1592_storage",
								"encoding": "dynamic_array",
								"label": "struct Storage.Income[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)7_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[7]",
								"numberOfBytes": "224"
							},
							"t_array(t_uint256)8_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[8]",
								"numberOfBytes": "256"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)232": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_array(t_struct(Income)1592_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.Income[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(Income)1592_storage)dyn_storage"
							},
							"t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256[])",
								"numberOfBytes": "32",
								"value": "t_array(t_uint256)dyn_storage"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => uint256[]))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_bool)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserBooster)1788_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => struct Storage.UserBooster))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(UserBooster)1788_storage)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserPool)1772_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => struct Storage.UserPool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(UserPool)1772_storage)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserPoolTopup)1777_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => struct Storage.UserPoolTopup))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(UserPoolTopup)1777_storage)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(weeklyUser)1899_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => struct Storage.weeklyUser))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(weeklyUser)1899_storage)"
							},
							"t_mapping(t_uint256,t_struct(User)1554_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.User)",
								"numberOfBytes": "32",
								"value": "t_struct(User)1554_storage"
							},
							"t_mapping(t_uint256,t_struct(UserBooster)1788_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.UserBooster)",
								"numberOfBytes": "32",
								"value": "t_struct(UserBooster)1788_storage"
							},
							"t_mapping(t_uint256,t_struct(UserIncome)1581_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.UserIncome)",
								"numberOfBytes": "32",
								"value": "t_struct(UserIncome)1581_storage"
							},
							"t_mapping(t_uint256,t_struct(UserPool)1772_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.UserPool)",
								"numberOfBytes": "32",
								"value": "t_struct(UserPool)1772_storage"
							},
							"t_mapping(t_uint256,t_struct(UserPoolTopup)1777_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.UserPoolTopup)",
								"numberOfBytes": "32",
								"value": "t_struct(UserPoolTopup)1777_storage"
							},
							"t_mapping(t_uint256,t_struct(WeeklyContest)1886_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.WeeklyContest)",
								"numberOfBytes": "32",
								"value": "t_struct(WeeklyContest)1886_storage"
							},
							"t_mapping(t_uint256,t_struct(monthlyRoyalty)1991_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.monthlyRoyalty)",
								"numberOfBytes": "32",
								"value": "t_struct(monthlyRoyalty)1991_storage"
							},
							"t_mapping(t_uint256,t_struct(monthlyRoyaltyUser)2006_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.monthlyRoyaltyUser)",
								"numberOfBytes": "32",
								"value": "t_struct(monthlyRoyaltyUser)2006_storage"
							},
							"t_mapping(t_uint256,t_struct(weeklyUser)1899_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.weeklyUser)",
								"numberOfBytes": "32",
								"value": "t_struct(weeklyUser)1899_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Deposit)1519_storage": {
								"encoding": "inplace",
								"label": "struct Storage.Deposit",
								"members": [
									{
										"astId": 1512,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1514,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "withdrawn",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1516,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "start",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1518,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "depositType",
										"offset": 0,
										"slot": "3",
										"type": "t_uint8"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(Income)1592_storage": {
								"encoding": "inplace",
								"label": "struct Storage.Income",
								"members": [
									{
										"astId": 1583,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "fromUserId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1585,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1587,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "packageLevel",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1589,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "timestamp",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1591,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "incomeType",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(User)1554_storage": {
								"encoding": "inplace",
								"label": "struct Storage.User",
								"members": [
									{
										"astId": 1521,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "account",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 1525,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "deposits",
										"offset": 0,
										"slot": "1",
										"type": "t_array(t_struct(Deposit)1519_storage)dyn_storage"
									},
									{
										"astId": 1527,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "checkpoint",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1529,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "id",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1531,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "sponsorId",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1533,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "uplineId",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 1535,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "level",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 1537,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "directTeam",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 1539,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "directPoolQualified",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									},
									{
										"astId": 1541,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "totalMatrixTeam",
										"offset": 0,
										"slot": "9",
										"type": "t_uint256"
									},
									{
										"astId": 1543,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "totalDeposit",
										"offset": 0,
										"slot": "10",
										"type": "t_uint256"
									},
									{
										"astId": 1545,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "poollevel",
										"offset": 0,
										"slot": "11",
										"type": "t_uint256"
									},
									{
										"astId": 1547,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "poolDeposit",
										"offset": 0,
										"slot": "12",
										"type": "t_uint256"
									},
									{
										"astId": 1549,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "boosterlevel",
										"offset": 0,
										"slot": "13",
										"type": "t_uint256"
									},
									{
										"astId": 1551,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "boosterDeposit",
										"offset": 0,
										"slot": "14",
										"type": "t_uint256"
									},
									{
										"astId": 1553,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "registrationTime",
										"offset": 0,
										"slot": "15",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "512"
							},
							"t_struct(UserBooster)1788_storage": {
								"encoding": "inplace",
								"label": "struct Storage.UserBooster",
								"members": [
									{
										"astId": 1779,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1781,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "poolId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1783,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "parentId",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1785,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "bonusCount",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1787,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "joinTime",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(UserIncome)1581_storage": {
								"encoding": "inplace",
								"label": "struct Storage.UserIncome",
								"members": [
									{
										"astId": 1556,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "totalIncome",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1558,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "sponsorIncome",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1560,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "matrixIncome",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1562,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "levelBoosterIncome",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1564,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "levelIncome",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1566,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "royaltyIncome",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 1568,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "royaltyIncomeClaimed",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 1570,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "communityIncome",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 1572,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "poolIncome",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									},
									{
										"astId": 1574,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "boosterIncome",
										"offset": 0,
										"slot": "9",
										"type": "t_uint256"
									},
									{
										"astId": 1576,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "weeklyContestIncome",
										"offset": 0,
										"slot": "10",
										"type": "t_uint256"
									},
									{
										"astId": 1578,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "monthlyRoyalty",
										"offset": 0,
										"slot": "11",
										"type": "t_uint256"
									},
									{
										"astId": 1580,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "monthlyTopRoyalty",
										"offset": 0,
										"slot": "12",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "416"
							},
							"t_struct(UserPool)1772_storage": {
								"encoding": "inplace",
								"label": "struct Storage.UserPool",
								"members": [
									{
										"astId": 1763,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1765,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "mainid",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1767,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "poolId",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1769,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "parentId",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1771,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "bonusCount",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(UserPoolTopup)1777_storage": {
								"encoding": "inplace",
								"label": "struct Storage.UserPoolTopup",
								"members": [
									{
										"astId": 1774,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "nextPoolAmt",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1776,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "reTopupAmt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(WeeklyContest)1886_storage": {
								"encoding": "inplace",
								"label": "struct Storage.WeeklyContest",
								"members": [
									{
										"astId": 1869,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "roundId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1871,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "totalReward",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1873,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "totalUsers",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1875,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "perUserReward",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1877,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "claimedCount",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1879,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "startTime",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 1881,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "endTime",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 1883,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "carryForward",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 1885,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "closed",
										"offset": 0,
										"slot": "8",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "288"
							},
							"t_struct(monthlyRoyalty)1991_storage": {
								"encoding": "inplace",
								"label": "struct Storage.monthlyRoyalty",
								"members": [
									{
										"astId": 1974,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "roundId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1976,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "totalReward",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1978,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "totalUsers",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1980,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "perUserReward",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1982,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "claimedCount",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1984,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "startTime",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 1986,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "endTime",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 1988,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "carryForward",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 1990,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "closed",
										"offset": 0,
										"slot": "8",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "288"
							},
							"t_struct(monthlyRoyaltyUser)2006_storage": {
								"encoding": "inplace",
								"label": "struct Storage.monthlyRoyaltyUser",
								"members": [
									{
										"astId": 1993,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1995,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "joinTime",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1997,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "qualifiedRoundId",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1999,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "claimTime",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2003,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "isClaimed",
										"offset": 0,
										"slot": "4",
										"type": "t_mapping(t_uint256,t_bool)"
									},
									{
										"astId": 2005,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "isQualified",
										"offset": 0,
										"slot": "5",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "192"
							},
							"t_struct(weeklyUser)1899_storage": {
								"encoding": "inplace",
								"label": "struct Storage.weeklyUser",
								"members": [
									{
										"astId": 1888,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1890,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "joinTime",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1892,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "roundId",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1894,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "claimTime",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1896,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "isClaimed",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									},
									{
										"astId": 1898,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "isQualified",
										"offset": 1,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC165": [
							708
						],
						"IERC20": [
							232
						]
					},
					"id": 82,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 82,
							"sourceUnit": 90,
							"src": "133:36:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 232,
										"src": "141:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 82,
							"sourceUnit": 86,
							"src": "170:38:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 708,
										"src": "178:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "IERC20",
										"nameLocations": [
											"590:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 232,
										"src": "590:6:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IERC165",
										"nameLocations": [
											"598:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 708,
										"src": "598:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:0"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:0",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 81,
							"linearizedBaseContracts": [
								81,
								708,
								232
							],
							"name": "IERC1363",
							"nameLocation": "578:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 20,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1548:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1560:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1593:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:0"
									},
									"scope": 81,
									"src": "1523:76:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 32,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2088:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2100:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2115:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 26,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2154:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 29,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:0"
									},
									"scope": 81,
									"src": "2063:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2653:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2667:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2679:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2712:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:0"
									},
									"scope": 81,
									"src": "2624:94:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3294:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3308:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3320:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3335:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 52,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3374:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:0"
									},
									"scope": 81,
									"src": "3265:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 68,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3805:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3822:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3855:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 65,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:0"
									},
									"scope": 81,
									"src": "3781:80:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4374:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4391:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4406:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 74,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4445:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 77,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:0"
									},
									"scope": 81,
									"src": "4350:101:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 82,
							"src": "568:3885:0",
							"usedErrors": [],
							"usedEvents": [
								166,
								175
							]
						}
					],
					"src": "107:4347:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							708
						]
					},
					"id": 86,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 83,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 85,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 86,
							"sourceUnit": 709,
							"src": "133:59:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 84,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 708,
										"src": "141:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:87:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							232
						]
					},
					"id": 90,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 87,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "105:25:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 89,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 90,
							"sourceUnit": 233,
							"src": "132:49:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 88,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 232,
										"src": "140:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:77:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							154
						]
					},
					"id": 155,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 91,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 92,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:3",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 154,
							"linearizedBaseContracts": [
								154
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 95,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 154,
									"src": "1676:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 93,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 94,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 98,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 154,
									"src": "1723:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 96,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 97,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 100,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 154,
									"src": "1767:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 99,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "1811:39:3",
										"statements": [
											{
												"expression": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 103,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "1821:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 104,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "1831:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:3"
											}
										]
									},
									"id": 108,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:3"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:3"
									},
									"scope": 154,
									"src": "1797:53:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "2251:79:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 111,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 134,
														"src": "2261:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 113,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:3"
											},
											{
												"id": 114,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:3"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 115,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 142,
														"src": "2303:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 117,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:3"
											}
										]
									},
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:3",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 119,
									"name": "nonReentrant",
									"nameLocation": "2236:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:3"
									},
									"src": "2227:103:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 133,
										"nodeType": "Block",
										"src": "2375:248:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 123,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 100,
																"src": "2468:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 124,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "2479:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 122,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 128,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:3"
											},
											{
												"expression": {
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 129,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "2598:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 130,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "2608:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:3"
											}
										]
									},
									"id": 134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:3"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:3"
									},
									"scope": 154,
									"src": "2336:287:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "2667:171:3",
										"statements": [
											{
												"expression": {
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 137,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "2809:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 138,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "2819:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:3"
											}
										]
									},
									"id": 142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:3"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:3"
									},
									"scope": 154,
									"src": "2629:209:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "3081:43:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 148,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "3098:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 149,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "3109:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 147,
												"id": 151,
												"nodeType": "Return",
												"src": "3091:26:3"
											}
										]
									},
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:3",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:3"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "3075:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 145,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:3"
									},
									"scope": 154,
									"src": "3017:107:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 155,
							"src": "888:2238:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							232
						]
					},
					"id": 233,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 156,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 157,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 232,
							"linearizedBaseContracts": [
								232
							],
							"name": "IERC20",
							"nameLocation": "215:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 166,
									"name": "Transfer",
									"nameLocation": "397:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "406:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "428:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "448:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:4"
									},
									"src": "391:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 175,
									"name": "Approval",
									"nameLocation": "628:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "637:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "660:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "685:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:4"
									},
									"src": "622:78:4"
								},
								{
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 181,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:4"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "822:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:4"
									},
									"scope": 232,
									"src": "776:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "932:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:4"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "972:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:4"
									},
									"scope": 232,
									"src": "913:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 199,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1223:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1235:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:4"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1268:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 196,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:4"
									},
									"scope": 232,
									"src": "1205:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 209,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1568:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1583:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:4"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1623:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:4"
									},
									"scope": 232,
									"src": "1549:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 219,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2327:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2344:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:4"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2377:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 216,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:4"
									},
									"scope": 232,
									"src": "2310:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 231,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2713:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2727:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2739:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:4"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2772:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 228,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:4"
									},
									"scope": 232,
									"src": "2691:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 233,
							"src": "205:2575:4",
							"usedErrors": [],
							"usedEvents": [
								166,
								175
							]
						}
					],
					"src": "106:2675:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC20": [
							232
						],
						"SafeERC20": [
							696
						]
					},
					"id": 697,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 234,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 236,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 697,
							"sourceUnit": 233,
							"src": "141:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 235,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 232,
										"src": "149:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 238,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 697,
							"sourceUnit": 82,
							"src": "179:58:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 237,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 81,
										"src": "187:8:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 239,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 696,
							"linearizedBaseContracts": [
								696
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:5",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 244,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "823:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:5"
									},
									"src": "792:46:5"
								},
								{
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:5",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 253,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "959:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "976:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "1002:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:5"
									},
									"src": "920:109:5"
								},
								{
									"body": {
										"id": 276,
										"nodeType": "Block",
										"src": "1291:88:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 265,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "1321:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 268,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 257,
																		"src": "1343:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 199,
																	"src": "1343:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 270,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 259,
																			"src": "1360:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 271,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 261,
																			"src": "1364:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 272,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 266,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 264,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "1301:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:5"
											}
										]
									},
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:5",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "1241:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 256,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 255,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "1241:6:5"
													},
													"referencedDeclaration": 232,
													"src": "1241:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "1255:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "1267:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:5"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:5"
									},
									"scope": 696,
									"src": "1219:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 303,
										"nodeType": "Block",
										"src": "1708:98:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 291,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "1738:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 294,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 281,
																		"src": "1760:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 231,
																	"src": "1760:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 296,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 283,
																			"src": "1781:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 297,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 285,
																			"src": "1787:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 298,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "1791:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 299,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 292,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 290,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "1718:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:5"
											}
										]
									},
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:5",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1644:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 280,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 279,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "1644:6:5"
													},
													"referencedDeclaration": 232,
													"src": "1644:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1658:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1672:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:5"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:5"
									},
									"scope": 696,
									"src": "1618:188:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 329,
										"nodeType": "Block",
										"src": "2033:99:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 318,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "2074:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 321,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 308,
																		"src": "2096:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 199,
																	"src": "2096:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 323,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 310,
																			"src": "2113:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 324,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 312,
																			"src": "2117:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 325,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 319,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 320,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 317,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "2050:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 316,
												"id": 328,
												"nodeType": "Return",
												"src": "2043:82:5"
											}
										]
									},
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:5",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "1968:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 307,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 306,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "1968:6:5"
													},
													"referencedDeclaration": 232,
													"src": "1968:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "1982:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "1994:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:5"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "2027:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 314,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:5"
									},
									"scope": 696,
									"src": "1943:189:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "2381:109:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 346,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "2422:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 349,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 334,
																		"src": "2444:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 231,
																	"src": "2444:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 351,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 336,
																			"src": "2465:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 352,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 338,
																			"src": "2471:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 353,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 340,
																			"src": "2475:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 354,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 347,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 348,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 345,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "2398:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 344,
												"id": 357,
												"nodeType": "Return",
												"src": "2391:92:5"
											}
										]
									},
									"documentation": {
										"id": 331,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:5",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2302:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 333,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 332,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "2302:6:5"
													},
													"referencedDeclaration": 232,
													"src": "2302:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2316:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2330:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2342:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:5"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2375:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:5"
									},
									"scope": 696,
									"src": "2273:217:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "3232:139:5",
										"statements": [
											{
												"assignments": [
													371
												],
												"declarations": [
													{
														"constant": false,
														"id": 371,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 389,
														"src": "3242:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 370,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 380,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 376,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$696",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$696",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 374,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 378,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "3296:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 372,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "3265:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														"id": 373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:5",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 209,
														"src": "3265:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 382,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "3327:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 383,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "3334:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 384,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 371,
																"src": "3343:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 385,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 367,
																"src": "3358:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 381,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "3314:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:5"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:5",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3177:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 362,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 361,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "3177:6:5"
													},
													"referencedDeclaration": 232,
													"src": "3177:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3191:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3208:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:5"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:5"
									},
									"scope": 696,
									"src": "3146:225:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 432,
										"nodeType": "Block",
										"src": "4137:370:5",
										"statements": [
											{
												"id": 431,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:5",
												"statements": [
													{
														"assignments": [
															402
														],
														"declarations": [
															{
																"constant": false,
																"id": 402,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:5",
																"nodeType": "VariableDeclaration",
																"scope": 431,
																"src": "4171:24:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 401,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 411,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 407,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$696",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$696",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 405,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 409,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 396,
																	"src": "4229:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 403,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "4198:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$232",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:5",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 209,
																"src": "4198:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 412,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "4255:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 413,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "4274:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 422,
														"nodeType": "IfStatement",
														"src": "4251:160:5",
														"trueBody": {
															"id": 421,
															"nodeType": "Block",
															"src": "4293:118:5",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 416,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 396,
																				"src": "4351:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 417,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 402,
																				"src": "4360:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 418,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 398,
																				"src": "4378:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 415,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 253,
																			"src": "4318:32:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 420,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:5"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 424,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "4437:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$232",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 425,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 396,
																	"src": "4444:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 426,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 402,
																		"src": "4453:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 427,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 398,
																		"src": "4472:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$232",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 423,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "4424:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 430,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:5",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "4070:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 393,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 392,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "4070:6:5"
													},
													"referencedDeclaration": 232,
													"src": "4070:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "4084:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "4101:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:5"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:5"
									},
									"scope": 696,
									"src": "4039:468:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "5161:303:5",
										"statements": [
											{
												"assignments": [
													445
												],
												"declarations": [
													{
														"constant": false,
														"id": 445,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 479,
														"src": "5171:25:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 444,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 454,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 448,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 437,
																"src": "5214:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$232",
																	"typeString": "contract IERC20"
																}
															},
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:5",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 219,
															"src": "5214:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 450,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 439,
																	"src": "5230:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 451,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 441,
																	"src": "5239:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 452,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 446,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 447,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:5",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:5"
											},
											{
												"condition": {
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:5",
													"subExpression": {
														"arguments": [
															{
																"id": 456,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 437,
																"src": "5286:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$232",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 457,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 445,
																"src": "5293:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$232",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 455,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "5262:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 478,
												"nodeType": "IfStatement",
												"src": "5257:201:5",
												"trueBody": {
													"id": 477,
													"nodeType": "Block",
													"src": "5308:150:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 461,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "5342:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 464,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 437,
																					"src": "5364:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$232",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 465,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:5",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 219,
																				"src": "5364:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 466,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 439,
																						"src": "5380:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 467,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 468,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 462,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 463,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:5",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 460,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 654,
																	"src": "5322:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 471,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 473,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "5427:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 474,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 445,
																		"src": "5434:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 472,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 654,
																	"src": "5407:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 476,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:5",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "5106:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 436,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 435,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "5106:6:5"
													},
													"referencedDeclaration": 232,
													"src": "5106:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "5120:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "5137:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:5"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:5"
									},
									"scope": 696,
									"src": "5084:380:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "5911:219:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 493,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 486,
																"src": "5925:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 495,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 507,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 486,
																	"src": "6034:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 508,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 488,
																	"src": "6038:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 509,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 490,
																	"src": "6045:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 505,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 484,
																	"src": "6012:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:5",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 32,
																"src": "6012:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 520,
													"nodeType": "IfStatement",
													"src": "6007:117:5",
													"trueBody": {
														"id": 519,
														"nodeType": "Block",
														"src": "6052:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 515,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 484,
																					"src": "6106:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 514,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 513,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 512,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "6073:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 518,
																"nodeType": "RevertStatement",
																"src": "6066:47:5"
															}
														]
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5921:203:5",
												"trueBody": {
													"id": 504,
													"nodeType": "Block",
													"src": "5946:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 499,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 484,
																		"src": "5973:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 500,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 486,
																		"src": "5980:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 501,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 488,
																		"src": "5984:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 498,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 277,
																	"src": "5960:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 503,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:5",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "5840:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 483,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 482,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "5840:8:5"
													},
													"referencedDeclaration": 81,
													"src": "5840:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "5856:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "5868:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "5883:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 489,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:5"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:5"
									},
									"scope": 696,
									"src": "5808:322:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "6649:239:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 538,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 531,
																"src": "6663:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 540,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 529,
																	"src": "6786:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 554,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 531,
																	"src": "6792:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 555,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 533,
																	"src": "6796:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 556,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 535,
																	"src": "6803:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 551,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 527,
																	"src": "6760:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:5",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 58,
																"src": "6760:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 567,
													"nodeType": "IfStatement",
													"src": "6755:127:5",
													"trueBody": {
														"id": 566,
														"nodeType": "Block",
														"src": "6810:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 562,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 527,
																					"src": "6864:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 561,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 560,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 559,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "6831:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 565,
																"nodeType": "RevertStatement",
																"src": "6824:47:5"
															}
														]
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "6659:223:5",
												"trueBody": {
													"id": 550,
													"nodeType": "Block",
													"src": "6684:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 544,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 527,
																		"src": "6715:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 545,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 529,
																		"src": "6722:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 546,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 531,
																		"src": "6728:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 547,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 533,
																		"src": "6732:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 543,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 304,
																	"src": "6698:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 549,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:5",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6527:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 526,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 525,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "6527:8:5"
													},
													"referencedDeclaration": 81,
													"src": "6527:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6551:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6573:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6593:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6616:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 534,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:5"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:5"
									},
									"scope": 696,
									"src": "6482:406:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 612,
										"nodeType": "Block",
										"src": "7655:218:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 583,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "7669:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 585,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 586,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 597,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 576,
																	"src": "7777:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 598,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 578,
																	"src": "7781:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 599,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "7788:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 595,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 574,
																	"src": "7756:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:5",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 80,
																"src": "7756:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 610,
													"nodeType": "IfStatement",
													"src": "7751:116:5",
													"trueBody": {
														"id": 609,
														"nodeType": "Block",
														"src": "7795:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 605,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 574,
																					"src": "7849:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 604,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 603,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 602,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "7816:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 608,
																"nodeType": "RevertStatement",
																"src": "7809:47:5"
															}
														]
													}
												},
												"id": 611,
												"nodeType": "IfStatement",
												"src": "7665:202:5",
												"trueBody": {
													"id": 594,
													"nodeType": "Block",
													"src": "7690:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 589,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 574,
																		"src": "7717:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 590,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "7724:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 591,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 578,
																		"src": "7728:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 588,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "7704:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 593,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:5",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "7584:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 573,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 572,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "7584:8:5"
													},
													"referencedDeclaration": 81,
													"src": "7584:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "7600:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "7612:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "7627:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 579,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:5"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:5"
									},
									"scope": 696,
									"src": "7553:320:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 653,
										"nodeType": "Block",
										"src": "8440:650:5",
										"statements": [
											{
												"assignments": [
													623
												],
												"declarations": [
													{
														"constant": false,
														"id": 623,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 653,
														"src": "8450:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 622,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 624,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:5"
											},
											{
												"assignments": [
													626
												],
												"declarations": [
													{
														"constant": false,
														"id": 626,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 653,
														"src": "8478:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 625,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 627,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:5"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:5",
													"nodeType": "YulBlock",
													"src": "8532:396:5",
													"statements": [
														{
															"nativeSrc": "8546:75:5",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:5"
																		},
																		"nativeSrc": "8566:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:5",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:5"
																		},
																		"nativeSrc": "8583:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:5"
																		},
																		"nativeSrc": "8600:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:5"
																},
																"nativeSrc": "8561:60:5",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:5"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:5",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:5",
																"nodeType": "YulBlock",
																"src": "8682:157:5",
																"statements": [
																	{
																		"nativeSrc": "8700:22:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:5",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:5",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:5",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:5"
																			},
																			"nativeSrc": "8711:11:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:5"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:5",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:5",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:5"
																					},
																					"nativeSrc": "8762:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:5"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:5",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:5"
																			},
																			"nativeSrc": "8739:40:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:5"
																		},
																		"nativeSrc": "8739:40:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:5"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:5"
																					},
																					"nativeSrc": "8808:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:5"
																			},
																			"nativeSrc": "8796:29:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:5"
																		},
																		"nativeSrc": "8796:29:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:5"
																},
																"nativeSrc": "8666:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:5"
															},
															"nativeSrc": "8663:176:5",
															"nodeType": "YulIf",
															"src": "8663:176:5"
														},
														{
															"nativeSrc": "8852:30:5",
															"nodeType": "YulAssignment",
															"src": "8852:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:5"
																},
																"nativeSrc": "8866:16:5",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:5"
																}
															]
														},
														{
															"nativeSrc": "8895:23:5",
															"nodeType": "YulAssignment",
															"src": "8895:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:5"
																},
																"nativeSrc": "8910:8:5",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 619,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:5",
														"valueSize": 1
													},
													{
														"declaration": 619,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:5",
														"valueSize": 1
													},
													{
														"declaration": 623,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:5",
														"valueSize": 1
													},
													{
														"declaration": 626,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:5",
														"valueSize": 1
													},
													{
														"declaration": 617,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 628,
												"nodeType": "InlineAssembly",
												"src": "8507:421:5"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 631,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 629,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "8942:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 642,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 640,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "8994:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 641,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:5",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 634,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 617,
																			"src": "8968:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$232",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$232",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 633,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 632,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 636,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:5",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 652,
												"nodeType": "IfStatement",
												"src": "8938:146:5",
												"trueBody": {
													"id": 651,
													"nodeType": "Block",
													"src": "9012:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 647,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 617,
																				"src": "9066:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$232",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$232",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 645,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 644,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 244,
																	"src": "9033:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 650,
															"nodeType": "RevertStatement",
															"src": "9026:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "8399:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 616,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 615,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "8399:6:5"
													},
													"referencedDeclaration": 232,
													"src": "8399:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "8413:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 618,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:5"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:5"
									},
									"scope": 696,
									"src": "8370:720:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 694,
										"nodeType": "Block",
										"src": "9681:391:5",
										"statements": [
											{
												"assignments": [
													666
												],
												"declarations": [
													{
														"constant": false,
														"id": 666,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 694,
														"src": "9691:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 665,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 667,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:5"
											},
											{
												"assignments": [
													669
												],
												"declarations": [
													{
														"constant": false,
														"id": 669,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 694,
														"src": "9713:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 668,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 670,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:5"
											},
											{
												"assignments": [
													672
												],
												"declarations": [
													{
														"constant": false,
														"id": 672,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 694,
														"src": "9741:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 671,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 673,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:5"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:5",
													"nodeType": "YulBlock",
													"src": "9795:174:5",
													"statements": [
														{
															"nativeSrc": "9809:71:5",
															"nodeType": "YulAssignment",
															"src": "9809:71:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:5"
																		},
																		"nativeSrc": "9825:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:5",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:5"
																		},
																		"nativeSrc": "9842:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:5"
																		},
																		"nativeSrc": "9859:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:5",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:5"
																},
																"nativeSrc": "9820:60:5",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:5"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:5"
																}
															]
														},
														{
															"nativeSrc": "9893:30:5",
															"nodeType": "YulAssignment",
															"src": "9893:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:5"
																},
																"nativeSrc": "9907:16:5",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:5"
																}
															]
														},
														{
															"nativeSrc": "9936:23:5",
															"nodeType": "YulAssignment",
															"src": "9936:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:5"
																},
																"nativeSrc": "9951:8:5",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 660,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:5",
														"valueSize": 1
													},
													{
														"declaration": 660,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:5",
														"valueSize": 1
													},
													{
														"declaration": 669,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:5",
														"valueSize": 1
													},
													{
														"declaration": 672,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:5",
														"valueSize": 1
													},
													{
														"declaration": 666,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:5",
														"valueSize": 1
													},
													{
														"declaration": 658,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 674,
												"nodeType": "InlineAssembly",
												"src": "9770:199:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 675,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "9985:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 676,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "9997:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 687,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 672,
																		"src": "10048:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 688,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:5",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 681,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 658,
																						"src": "10023:5:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$232",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$232",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 680,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 679,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:5",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 682,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 683,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:5",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 691,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 664,
												"id": 693,
												"nodeType": "Return",
												"src": "9978:87:5"
											}
										]
									},
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 695,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "9625:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 657,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 656,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "9625:6:5"
													},
													"referencedDeclaration": 232,
													"src": "9625:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "9639:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 659,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:5"
									},
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "9675:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 662,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:5"
									},
									"scope": 696,
									"src": "9592:480:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 697,
							"src": "698:9376:5",
							"usedErrors": [
								244,
								253
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							708
						]
					},
					"id": 709,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 698,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 699,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:6",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 708,
							"linearizedBaseContracts": [
								708
							],
							"name": "IERC165",
							"nameLocation": "433:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 700,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:6",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 707,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "819:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 701,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:6"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "862:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 704,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:6"
									},
									"scope": 708,
									"src": "792:76:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 709,
							"src": "423:447:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:6"
				},
				"id": 6
			},
			"contracts/modules/ContestRoyalty.sol": {
				"ast": {
					"absolutePath": "contracts/modules/ContestRoyalty.sol",
					"exportedSymbols": {
						"ContestRoyalty": [
							1408
						],
						"IERC1363": [
							81
						],
						"IERC20": [
							232
						],
						"ReentrancyGuard": [
							154
						],
						"SafeERC20": [
							696
						],
						"Storage": [
							2452
						]
					},
					"id": 1409,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 710,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".30"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:7"
						},
						{
							"absolutePath": "contracts/modules/Storage.sol",
							"file": "./Storage.sol",
							"id": 711,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1409,
							"sourceUnit": 2453,
							"src": "63:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 712,
										"name": "Storage",
										"nameLocations": [
											"117:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2452,
										"src": "117:7:7"
									},
									"id": 713,
									"nodeType": "InheritanceSpecifier",
									"src": "117:7:7"
								}
							],
							"canonicalName": "ContestRoyalty",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1408,
							"linearizedBaseContracts": [
								1408,
								2452,
								154
							],
							"name": "ContestRoyalty",
							"nameLocation": "99:14:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 742,
										"nodeType": "Block",
										"src": "155:250:7",
										"statements": [
											{
												"expression": {
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 716,
														"name": "currentWeeklyStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1864,
														"src": "166:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 717,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "191:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 718,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "197:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "191:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "166:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 720,
												"nodeType": "ExpressionStatement",
												"src": "166:40:7"
											},
											{
												"expression": {
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 721,
														"name": "currentMonthlyStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1969,
														"src": "217:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 722,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "243:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 723,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "249:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "243:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "217:41:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 725,
												"nodeType": "ExpressionStatement",
												"src": "217:41:7"
											},
											{
												"expression": {
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 726,
														"name": "WeeklyTotalReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1867,
														"src": "271:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 727,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "291:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "271:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 729,
												"nodeType": "ExpressionStatement",
												"src": "271:21:7"
											},
											{
												"expression": {
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 730,
														"name": "currentWeeklyRound",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1861,
														"src": "303:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 731,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "324:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "303:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 733,
												"nodeType": "ExpressionStatement",
												"src": "303:22:7"
											},
											{
												"expression": {
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 734,
														"name": "monthlyTotalReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1972,
														"src": "336:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 735,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "357:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "336:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 737,
												"nodeType": "ExpressionStatement",
												"src": "336:22:7"
											},
											{
												"expression": {
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 738,
														"name": "currentMonthlyRound",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1966,
														"src": "369:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 739,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "391:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "369:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 741,
												"nodeType": "ExpressionStatement",
												"src": "369:23:7"
											}
										]
									},
									"id": 743,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "152:2:7"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "155:0:7"
									},
									"scope": 1408,
									"src": "141:264:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 908,
										"nodeType": "Block",
										"src": "455:2188:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 746,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "480:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 747,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "486:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "480:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 750,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 748,
																	"name": "currentMonthlyStartTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1969,
																	"src": "500:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 749,
																	"name": "MONTH_DURATION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1960,
																	"src": "526:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "500:40:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 751,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "499:42:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "480:61:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 907,
												"nodeType": "IfStatement",
												"src": "476:2160:7",
												"trueBody": {
													"id": 906,
													"nodeType": "Block",
													"src": "543:2093:7",
													"statements": [
														{
															"assignments": [
																754
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 754,
																	"mutability": "mutable",
																	"name": "currentRound",
																	"nameLocation": "563:12:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 906,
																	"src": "558:17:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 753,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "558:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 756,
															"initialValue": {
																"id": 755,
																"name": "currentMonthlyRound",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1966,
																"src": "578:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "558:39:7"
														},
														{
															"assignments": [
																759
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 759,
																	"mutability": "mutable",
																	"name": "curentMonthRoyalty",
																	"nameLocation": "635:18:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 906,
																	"src": "612:41:7",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_monthlyRoyalty_$1991_storage_ptr",
																		"typeString": "struct Storage.monthlyRoyalty"
																	},
																	"typeName": {
																		"id": 758,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 757,
																			"name": "monthlyRoyalty",
																			"nameLocations": [
																				"612:14:7"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 1991,
																			"src": "612:14:7"
																		},
																		"referencedDeclaration": 1991,
																		"src": "612:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_monthlyRoyalty_$1991_storage_ptr",
																			"typeString": "struct Storage.monthlyRoyalty"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 763,
															"initialValue": {
																"baseExpression": {
																	"id": 760,
																	"name": "monthlyRoyaltydtl",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2011,
																	"src": "656:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_monthlyRoyalty_$1991_storage_$",
																		"typeString": "mapping(uint256 => struct Storage.monthlyRoyalty storage ref)"
																	}
																},
																"id": 762,
																"indexExpression": {
																	"id": 761,
																	"name": "currentRound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 754,
																	"src": "674:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "656:31:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_monthlyRoyalty_$1991_storage",
																	"typeString": "struct Storage.monthlyRoyalty storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "612:75:7"
														},
														{
															"condition": {
																"expression": {
																	"id": 764,
																	"name": "curentMonthRoyalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 759,
																	"src": "895:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_monthlyRoyalty_$1991_storage_ptr",
																		"typeString": "struct Storage.monthlyRoyalty storage pointer"
																	}
																},
																"id": 765,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "914:6:7",
																"memberName": "closed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1990,
																"src": "895:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 767,
															"nodeType": "IfStatement",
															"src": "891:38:7",
															"trueBody": {
																"functionReturnParameters": 745,
																"id": 766,
																"nodeType": "Return",
																"src": "922:7:7"
															}
														},
														{
															"assignments": [
																769
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 769,
																	"mutability": "mutable",
																	"name": "qualifiedCount",
																	"nameLocation": "948:14:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 906,
																	"src": "943:19:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 768,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "943:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 772,
															"initialValue": {
																"expression": {
																	"id": 770,
																	"name": "monthlyQualifiedUsers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2014,
																	"src": "965:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "987:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "965:28:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "943:50:7"
														},
														{
															"assignments": [
																774
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 774,
																	"mutability": "mutable",
																	"name": "perUserReward",
																	"nameLocation": "1013:13:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 906,
																	"src": "1008:18:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 773,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "1008:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 775,
															"nodeType": "VariableDeclarationStatement",
															"src": "1008:18:7"
														},
														{
															"assignments": [
																777
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 777,
																	"mutability": "mutable",
																	"name": "distributedAmount",
																	"nameLocation": "1046:17:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 906,
																	"src": "1041:22:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 776,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "1041:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 778,
															"nodeType": "VariableDeclarationStatement",
															"src": "1041:22:7"
														},
														{
															"assignments": [
																780
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 780,
																	"mutability": "mutable",
																	"name": "leftover",
																	"nameLocation": "1083:8:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 906,
																	"src": "1078:13:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 779,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "1078:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 781,
															"nodeType": "VariableDeclarationStatement",
															"src": "1078:13:7"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 782,
																	"name": "qualifiedCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 769,
																	"src": "1112:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1129:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1112:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 832,
																"nodeType": "Block",
																"src": "1551:201:7",
																"statements": [
																	{
																		"expression": {
																			"id": 822,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 820,
																				"name": "leftover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 780,
																				"src": "1631:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 821,
																				"name": "monthlyTotalReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1972,
																				"src": "1642:18:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1631:29:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 823,
																		"nodeType": "ExpressionStatement",
																		"src": "1631:29:7"
																	},
																	{
																		"expression": {
																			"id": 826,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 824,
																				"name": "distributedAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 777,
																				"src": "1679:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "30",
																				"id": 825,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1699:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1679:21:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 827,
																		"nodeType": "ExpressionStatement",
																		"src": "1679:21:7"
																	},
																	{
																		"expression": {
																			"id": 830,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 828,
																				"name": "perUserReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 774,
																				"src": "1719:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "30",
																				"id": 829,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1735:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1719:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 831,
																		"nodeType": "ExpressionStatement",
																		"src": "1719:17:7"
																	}
																]
															},
															"id": 833,
															"nodeType": "IfStatement",
															"src": "1108:644:7",
															"trueBody": {
																"id": 819,
																"nodeType": "Block",
																"src": "1132:413:7",
																"statements": [
																	{
																		"assignments": [
																			786
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 786,
																				"mutability": "mutable",
																				"name": "rawReward",
																				"nameLocation": "1206:9:7",
																				"nodeType": "VariableDeclaration",
																				"scope": 819,
																				"src": "1201:14:7",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 785,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "1201:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 790,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 789,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 787,
																				"name": "monthlyTotalReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1972,
																				"src": "1218:18:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 788,
																				"name": "qualifiedCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 769,
																				"src": "1239:14:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1218:35:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "1201:52:7"
																	},
																	{
																		"expression": {
																			"id": 799,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 791,
																				"name": "perUserReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 774,
																				"src": "1272:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"condition": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 794,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 792,
																								"name": "rawReward",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 786,
																								"src": "1289:9:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": ">",
																							"rightExpression": {
																								"id": 793,
																								"name": "monthlyCapping",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1963,
																								"src": "1301:14:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "1289:26:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						}
																					],
																					"id": 795,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1288:28:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseExpression": {
																					"id": 797,
																					"name": "rawReward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 786,
																					"src": "1336:9:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 798,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "Conditional",
																				"src": "1288:57:7",
																				"trueExpression": {
																					"id": 796,
																					"name": "monthlyCapping",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1963,
																					"src": "1319:14:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1272:73:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 800,
																		"nodeType": "ExpressionStatement",
																		"src": "1272:73:7"
																	},
																	{
																		"expression": {
																			"id": 805,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 801,
																				"name": "distributedAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 777,
																				"src": "1364:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 804,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 802,
																					"name": "perUserReward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 774,
																					"src": "1384:13:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 803,
																					"name": "qualifiedCount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 769,
																					"src": "1400:14:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1384:30:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1364:50:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 806,
																		"nodeType": "ExpressionStatement",
																		"src": "1364:50:7"
																	},
																	{
																		"expression": {
																			"id": 817,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 807,
																				"name": "leftover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 780,
																				"src": "1433:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"condition": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 810,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 808,
																								"name": "monthlyTotalReward",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1972,
																								"src": "1445:18:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": ">",
																							"rightExpression": {
																								"id": 809,
																								"name": "distributedAmount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 777,
																								"src": "1466:17:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "1445:38:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						}
																					],
																					"id": 811,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1444:40:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseExpression": {
																					"hexValue": "30",
																					"id": 815,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1528:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"id": 816,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "Conditional",
																				"src": "1444:85:7",
																				"trueExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 814,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 812,
																						"name": "monthlyTotalReward",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1972,
																						"src": "1487:18:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"id": 813,
																						"name": "distributedAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 777,
																						"src": "1508:17:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "1487:38:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1433:96:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 818,
																		"nodeType": "ExpressionStatement",
																		"src": "1433:96:7"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 834,
																		"name": "curentMonthRoyalty",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 759,
																		"src": "1801:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_monthlyRoyalty_$1991_storage_ptr",
																			"typeString": "struct Storage.monthlyRoyalty storage pointer"
																		}
																	},
																	"id": 836,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "1820:7:7",
																	"memberName": "roundId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1974,
																	"src": "1801:26:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 837,
																	"name": "currentRound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 754,
																	"src": "1830:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1801:41:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 839,
															"nodeType": "ExpressionStatement",
															"src": "1801:41:7"
														},
														{
															"expression": {
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 840,
																		"name": "curentMonthRoyalty",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 759,
																		"src": "1857:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_monthlyRoyalty_$1991_storage_ptr",
																			"typeString": "struct Storage.monthlyRoyalty storage pointer"
																		}
																	},
																	"id": 842,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "1876:13:7",
																	"memberName": "perUserReward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1980,
																	"src": "1857:32:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 843,
																	"name": "perUserReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 774,
																	"src": "1892:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1857:48:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 845,
															"nodeType": "ExpressionStatement",
															"src": "1857:48:7"
														},
														{
															"expression": {
																"id": 850,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 846,
																		"name": "curentMonthRoyalty",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 759,
																		"src": "1920:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_monthlyRoyalty_$1991_storage_ptr",
																			"typeString": "struct Storage.monthlyRoyalty storage pointer"
																		}
																	},
																	"id": 848,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "1939:10:7",
																	"memberName": "totalUsers",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1978,
																	"src": "1920:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 849,
																	"name": "qualifiedCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 769,
																	"src": "1952:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1920:46:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 851,
															"nodeType": "ExpressionStatement",
															"src": "1920:46:7"
														},
														{
															"expression": {
																"id": 856,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 852,
																		"name": "curentMonthRoyalty",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 759,
																		"src": "1981:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_monthlyRoyalty_$1991_storage_ptr",
																			"typeString": "struct Storage.monthlyRoyalty storage pointer"
																		}
																	},
																	"id": 854,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "2000:11:7",
																	"memberName": "totalReward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1976,
																	"src": "1981:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 855,
																	"name": "monthlyTotalReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1972,
																	"src": "2014:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1981:51:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 857,
															"nodeType": "ExpressionStatement",
															"src": "1981:51:7"
														},
														{
															"expression": {
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 858,
																		"name": "curentMonthRoyalty",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 759,
																		"src": "2067:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_monthlyRoyalty_$1991_storage_ptr",
																			"typeString": "struct Storage.monthlyRoyalty storage pointer"
																		}
																	},
																	"id": 860,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "2086:12:7",
																	"memberName": "carryForward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1988,
																	"src": "2067:31:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 861,
																	"name": "leftover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 780,
																	"src": "2101:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2067:42:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 863,
															"nodeType": "ExpressionStatement",
															"src": "2067:42:7"
														},
														{
															"expression": {
																"id": 870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 864,
																		"name": "curentMonthRoyalty",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 759,
																		"src": "2124:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_monthlyRoyalty_$1991_storage_ptr",
																			"typeString": "struct Storage.monthlyRoyalty storage pointer"
																		}
																	},
																	"id": 866,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "2143:7:7",
																	"memberName": "endTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1986,
																	"src": "2124:26:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 869,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 867,
																		"name": "currentMonthlyStartTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1969,
																		"src": "2153:23:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 868,
																		"name": "MONTH_DURATION",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1960,
																		"src": "2179:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2153:40:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2124:69:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 871,
															"nodeType": "ExpressionStatement",
															"src": "2124:69:7"
														},
														{
															"expression": {
																"id": 876,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 872,
																		"name": "curentMonthRoyalty",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 759,
																		"src": "2208:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_monthlyRoyalty_$1991_storage_ptr",
																			"typeString": "struct Storage.monthlyRoyalty storage pointer"
																		}
																	},
																	"id": 874,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "2227:6:7",
																	"memberName": "closed",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1990,
																	"src": "2208:25:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2236:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "2208:32:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 877,
															"nodeType": "ExpressionStatement",
															"src": "2208:32:7"
														},
														{
															"expression": {
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 878,
																	"name": "currentMonthlyStartTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1969,
																	"src": "2292:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 879,
																		"name": "curentMonthRoyalty",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 759,
																		"src": "2318:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_monthlyRoyalty_$1991_storage_ptr",
																			"typeString": "struct Storage.monthlyRoyalty storage pointer"
																		}
																	},
																	"id": 880,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2337:7:7",
																	"memberName": "endTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1986,
																	"src": "2318:26:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2292:52:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 882,
															"nodeType": "ExpressionStatement",
															"src": "2292:52:7"
														},
														{
															"expression": {
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 883,
																	"name": "currentMonthlyRound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1966,
																	"src": "2359:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 884,
																		"name": "currentRound",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 754,
																		"src": "2381:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2396:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "2381:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2359:38:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 888,
															"nodeType": "ExpressionStatement",
															"src": "2359:38:7"
														},
														{
															"expression": {
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 889,
																	"name": "monthlyTotalReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1972,
																	"src": "2412:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 890,
																	"name": "leftover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 780,
																	"src": "2433:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2412:29:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 892,
															"nodeType": "ExpressionStatement",
															"src": "2412:29:7"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 894,
																		"name": "currentRound",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 754,
																		"src": "2494:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 895,
																		"name": "qualifiedCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 769,
																		"src": "2508:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 896,
																		"name": "perUserReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 774,
																		"src": "2524:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 899,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 897,
																			"name": "distributedAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 777,
																			"src": "2540:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 898,
																			"name": "leftover",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 780,
																			"src": "2558:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2540:26:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 900,
																		"name": "distributedAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 777,
																		"src": "2568:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 901,
																		"name": "leftover",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 780,
																		"src": "2587:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 902,
																			"name": "curentMonthRoyalty",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 759,
																			"src": "2597:18:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_monthlyRoyalty_$1991_storage_ptr",
																				"typeString": "struct Storage.monthlyRoyalty storage pointer"
																			}
																		},
																		"id": 903,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2616:7:7",
																		"memberName": "endTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1986,
																		"src": "2597:26:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 893,
																	"name": "MonthlyClosed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2040,
																	"src": "2480:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256,uint256,uint256,uint256,uint256,uint256)"
																	}
																},
																"id": 904,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2480:144:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 905,
															"nodeType": "EmitStatement",
															"src": "2475:149:7"
														}
													]
												}
											}
										]
									},
									"id": 909,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_closeMonthlyContest",
									"nameLocation": "423:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "443:2:7"
									},
									"returnParameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "455:0:7"
									},
									"scope": 1408,
									"src": "414:2229:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 964,
										"nodeType": "Block",
										"src": "2741:459:7",
										"statements": [
											{
												"assignments": [
													920
												],
												"declarations": [
													{
														"constant": false,
														"id": 920,
														"mutability": "mutable",
														"name": "userRoyalty",
														"nameLocation": "2775:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 964,
														"src": "2748:38:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2006_storage_ptr",
															"typeString": "struct Storage.monthlyRoyaltyUser"
														},
														"typeName": {
															"id": 919,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 918,
																"name": "monthlyRoyaltyUser",
																"nameLocations": [
																	"2748:18:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2006,
																"src": "2748:18:7"
															},
															"referencedDeclaration": 2006,
															"src": "2748:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2006_storage_ptr",
																"typeString": "struct Storage.monthlyRoyaltyUser"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 924,
												"initialValue": {
													"baseExpression": {
														"id": 921,
														"name": "monthlyRoyaltyUserdtl",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2019,
														"src": "2789:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_monthlyRoyaltyUser_$2006_storage_$",
															"typeString": "mapping(uint256 => struct Storage.monthlyRoyaltyUser storage ref)"
														}
													},
													"id": 923,
													"indexExpression": {
														"id": 922,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "2811:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2789:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2006_storage",
														"typeString": "struct Storage.monthlyRoyaltyUser storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2748:71:7"
											},
											{
												"assignments": [
													927
												],
												"declarations": [
													{
														"constant": false,
														"id": 927,
														"mutability": "mutable",
														"name": "royalty",
														"nameLocation": "2849:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 964,
														"src": "2826:30:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_monthlyRoyalty_$1991_storage_ptr",
															"typeString": "struct Storage.monthlyRoyalty"
														},
														"typeName": {
															"id": 926,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 925,
																"name": "monthlyRoyalty",
																"nameLocations": [
																	"2826:14:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1991,
																"src": "2826:14:7"
															},
															"referencedDeclaration": 1991,
															"src": "2826:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_monthlyRoyalty_$1991_storage_ptr",
																"typeString": "struct Storage.monthlyRoyalty"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 931,
												"initialValue": {
													"baseExpression": {
														"id": 928,
														"name": "monthlyRoyaltydtl",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2011,
														"src": "2859:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_monthlyRoyalty_$1991_storage_$",
															"typeString": "mapping(uint256 => struct Storage.monthlyRoyalty storage ref)"
														}
													},
													"id": 930,
													"indexExpression": {
														"id": 929,
														"name": "_roundId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 913,
														"src": "2877:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2859:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_monthlyRoyalty_$1991_storage",
														"typeString": "struct Storage.monthlyRoyalty storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2826:60:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 952,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 947,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 942,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 934,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "!",
																		"prefix": true,
																		"src": "2909:15:7",
																		"subExpression": {
																			"expression": {
																				"id": 932,
																				"name": "royalty",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 927,
																				"src": "2910:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_monthlyRoyalty_$1991_storage_ptr",
																					"typeString": "struct Storage.monthlyRoyalty storage pointer"
																				}
																			},
																			"id": 933,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2918:6:7",
																			"memberName": "closed",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1990,
																			"src": "2910:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 937,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 935,
																			"name": "_roundId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 913,
																			"src": "2937:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 936,
																			"name": "currentMonthlyRound",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1966,
																			"src": "2949:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2937:31:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "2909:59:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"id": 941,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "2981:24:7",
																	"subExpression": {
																		"expression": {
																			"id": 939,
																			"name": "userRoyalty",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 920,
																			"src": "2982:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2006_storage_ptr",
																				"typeString": "struct Storage.monthlyRoyaltyUser storage pointer"
																			}
																		},
																		"id": 940,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2994:11:7",
																		"memberName": "isQualified",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2005,
																		"src": "2982:23:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2909:96:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 946,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 943,
																		"name": "userRoyalty",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 920,
																		"src": "3018:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2006_storage_ptr",
																			"typeString": "struct Storage.monthlyRoyaltyUser storage pointer"
																		}
																	},
																	"id": 944,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3030:16:7",
																	"memberName": "qualifiedRoundId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1997,
																	"src": "3018:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 945,
																	"name": "_roundId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "3049:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3018:39:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2909:148:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"baseExpression": {
																"expression": {
																	"id": 948,
																	"name": "userRoyalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 920,
																	"src": "3070:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2006_storage_ptr",
																		"typeString": "struct Storage.monthlyRoyaltyUser storage pointer"
																	}
																},
																"id": 949,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3082:9:7",
																"memberName": "isClaimed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2003,
																"src": "3070:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																	"typeString": "mapping(uint256 => bool)"
																}
															},
															"id": 951,
															"indexExpression": {
																"id": 950,
																"name": "_roundId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 913,
																"src": "3092:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3070:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "2909:192:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 956,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 953,
																"name": "royalty",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 927,
																"src": "3114:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_monthlyRoyalty_$1991_storage_ptr",
																	"typeString": "struct Storage.monthlyRoyalty storage pointer"
																}
															},
															"id": 954,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3122:13:7",
															"memberName": "perUserReward",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1980,
															"src": "3114:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 955,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3139:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3114:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2909:231:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 961,
												"nodeType": "IfStatement",
												"src": "2895:284:7",
												"trueBody": {
													"id": 960,
													"nodeType": "Block",
													"src": "3148:31:7",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 958,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3166:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 917,
															"id": 959,
															"nodeType": "Return",
															"src": "3159:12:7"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3192:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 917,
												"id": 963,
												"nodeType": "Return",
												"src": "3185:11:7"
											}
										]
									},
									"functionSelector": "7d846e38",
									"id": 965,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "canClaimMonthlyReward",
									"nameLocation": "2661:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "_userId",
												"nameLocation": "2688:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "2683:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 910,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2683:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "2702:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "2697:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 912,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2697:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2682:29:7"
									},
									"returnParameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "2735:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 915,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2735:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2734:6:7"
									},
									"scope": 1408,
									"src": "2652:548:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1107,
										"nodeType": "Block",
										"src": "3294:1271:7",
										"statements": [
											{
												"assignments": [
													976
												],
												"declarations": [
													{
														"constant": false,
														"id": 976,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "3328:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1107,
														"src": "3315:17:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$1554_storage_ptr",
															"typeString": "struct Storage.User"
														},
														"typeName": {
															"id": 975,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 974,
																"name": "User",
																"nameLocations": [
																	"3315:4:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1554,
																"src": "3315:4:7"
															},
															"referencedDeclaration": 1554,
															"src": "3315:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$1554_storage_ptr",
																"typeString": "struct Storage.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 980,
												"initialValue": {
													"baseExpression": {
														"id": 977,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1601,
														"src": "3335:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$1554_storage_$",
															"typeString": "mapping(uint256 => struct Storage.User storage ref)"
														}
													},
													"id": 979,
													"indexExpression": {
														"id": 978,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "3341:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3335:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$1554_storage",
														"typeString": "struct Storage.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3315:34:7"
											},
											{
												"assignments": [
													982
												],
												"declarations": [
													{
														"constant": false,
														"id": 982,
														"mutability": "mutable",
														"name": "userAddress",
														"nameLocation": "3368:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1107,
														"src": "3360:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 981,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3360:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 985,
												"initialValue": {
													"expression": {
														"id": 983,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "3382:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$1554_storage_ptr",
															"typeString": "struct Storage.User storage pointer"
														}
													},
													"id": 984,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3387:7:7",
													"memberName": "account",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1521,
													"src": "3382:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3360:34:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 987,
																"name": "userAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 982,
																"src": "3414:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 988,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3429:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3433:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3429:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3414:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420796f7572206163636f756e74",
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3441:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d2be5388e395114c9bc63051fd6def6e9e0facc3465cd48116ad48bef63b0e75",
																"typeString": "literal_string \"Not your account\""
															},
															"value": "Not your account"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d2be5388e395114c9bc63051fd6def6e9e0facc3465cd48116ad48bef63b0e75",
																"typeString": "literal_string \"Not your account\""
															}
														],
														"id": 986,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3406:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3406:54:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 993,
												"nodeType": "ExpressionStatement",
												"src": "3406:54:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1008,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 997,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 995,
																			"name": "_userId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 967,
																			"src": "3479:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 996,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3489:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "3479:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1000,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 998,
																			"name": "_roundId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 969,
																			"src": "3494:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 999,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3505:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "3494:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "3479:27:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1007,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1002,
																				"name": "monthlyRoyaltydtl",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2011,
																				"src": "3510:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_monthlyRoyalty_$1991_storage_$",
																					"typeString": "mapping(uint256 => struct Storage.monthlyRoyalty storage ref)"
																				}
																			},
																			"id": 1004,
																			"indexExpression": {
																				"id": 1003,
																				"name": "_roundId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 969,
																				"src": "3528:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3510:27:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_monthlyRoyalty_$1991_storage",
																				"typeString": "struct Storage.monthlyRoyalty storage ref"
																			}
																		},
																		"id": 1005,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3538:6:7",
																		"memberName": "closed",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1990,
																		"src": "3510:34:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "74727565",
																		"id": 1006,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3548:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	"src": "3510:42:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3479:73:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1011,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1009,
																	"name": "_roundId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 969,
																	"src": "3556:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1010,
																	"name": "currentMonthlyRound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1966,
																	"src": "3567:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3556:30:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3479:107:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420757365724964206f7220726f756e644964206f7220726f756e64206f72206e6f7420636c6f736564",
															"id": 1013,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3588:50:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1beb791ee1ae905f1be0eca33d1d067be754dc802f8b109cb5643c884132d67d",
																"typeString": "literal_string \"Invalid userId or roundId or round or not closed\""
															},
															"value": "Invalid userId or roundId or round or not closed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1beb791ee1ae905f1be0eca33d1d067be754dc802f8b109cb5643c884132d67d",
																"typeString": "literal_string \"Invalid userId or roundId or round or not closed\""
															}
														],
														"id": 994,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3471:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3471:168:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1015,
												"nodeType": "ExpressionStatement",
												"src": "3471:168:7"
											},
											{
												"assignments": [
													1018
												],
												"declarations": [
													{
														"constant": false,
														"id": 1018,
														"mutability": "mutable",
														"name": "userRoyalty",
														"nameLocation": "3677:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1107,
														"src": "3650:38:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2006_storage_ptr",
															"typeString": "struct Storage.monthlyRoyaltyUser"
														},
														"typeName": {
															"id": 1017,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1016,
																"name": "monthlyRoyaltyUser",
																"nameLocations": [
																	"3650:18:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2006,
																"src": "3650:18:7"
															},
															"referencedDeclaration": 2006,
															"src": "3650:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2006_storage_ptr",
																"typeString": "struct Storage.monthlyRoyaltyUser"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1022,
												"initialValue": {
													"baseExpression": {
														"id": 1019,
														"name": "monthlyRoyaltyUserdtl",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2019,
														"src": "3692:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_monthlyRoyaltyUser_$2006_storage_$",
															"typeString": "mapping(uint256 => struct Storage.monthlyRoyaltyUser storage ref)"
														}
													},
													"id": 1021,
													"indexExpression": {
														"id": 1020,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "3714:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3692:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2006_storage",
														"typeString": "struct Storage.monthlyRoyaltyUser storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3650:72:7"
											},
											{
												"assignments": [
													1025
												],
												"declarations": [
													{
														"constant": false,
														"id": 1025,
														"mutability": "mutable",
														"name": "currentMonthRoyalty",
														"nameLocation": "3756:19:7",
														"nodeType": "VariableDeclaration",
														"scope": 1107,
														"src": "3733:42:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_monthlyRoyalty_$1991_storage_ptr",
															"typeString": "struct Storage.monthlyRoyalty"
														},
														"typeName": {
															"id": 1024,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1023,
																"name": "monthlyRoyalty",
																"nameLocations": [
																	"3733:14:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1991,
																"src": "3733:14:7"
															},
															"referencedDeclaration": 1991,
															"src": "3733:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_monthlyRoyalty_$1991_storage_ptr",
																"typeString": "struct Storage.monthlyRoyalty"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1029,
												"initialValue": {
													"baseExpression": {
														"id": 1026,
														"name": "monthlyRoyaltydtl",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2011,
														"src": "3778:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_monthlyRoyalty_$1991_storage_$",
															"typeString": "mapping(uint256 => struct Storage.monthlyRoyalty storage ref)"
														}
													},
													"id": 1028,
													"indexExpression": {
														"id": 1027,
														"name": "_roundId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "3796:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3778:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_monthlyRoyalty_$1991_storage",
														"typeString": "struct Storage.monthlyRoyalty storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3733:72:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1031,
																	"name": "userRoyalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1018,
																	"src": "3826:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2006_storage_ptr",
																		"typeString": "struct Storage.monthlyRoyaltyUser storage pointer"
																	}
																},
																"id": 1032,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3838:11:7",
																"memberName": "isQualified",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2005,
																"src": "3826:23:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 1033,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3853:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "3826:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74207175616c696669656420",
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3859:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_461748ad29a5a7c695ada502a45a77e8ac1295ad80f822792c4b204b9bee592a",
																"typeString": "literal_string \"Not qualified \""
															},
															"value": "Not qualified "
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_461748ad29a5a7c695ada502a45a77e8ac1295ad80f822792c4b204b9bee592a",
																"typeString": "literal_string \"Not qualified \""
															}
														],
														"id": 1030,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3818:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3818:58:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1037,
												"nodeType": "ExpressionStatement",
												"src": "3818:58:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3895:32:7",
															"subExpression": {
																"baseExpression": {
																	"expression": {
																		"id": 1039,
																		"name": "userRoyalty",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1018,
																		"src": "3896:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2006_storage_ptr",
																			"typeString": "struct Storage.monthlyRoyaltyUser storage pointer"
																		}
																	},
																	"id": 1040,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3908:9:7",
																	"memberName": "isClaimed",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2003,
																	"src": "3896:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																		"typeString": "mapping(uint256 => bool)"
																	}
																},
																"id": 1042,
																"indexExpression": {
																	"id": 1041,
																	"name": "_roundId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 969,
																	"src": "3918:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3896:31:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920636c61696d656420666f72207468697320726f756e64",
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3929:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d2a5c7175f7354064d630fe4d7a5a239d1a06d6c8e53b9e2e9a018bfe6118491",
																"typeString": "literal_string \"Already claimed for this round\""
															},
															"value": "Already claimed for this round"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d2a5c7175f7354064d630fe4d7a5a239d1a06d6c8e53b9e2e9a018bfe6118491",
																"typeString": "literal_string \"Already claimed for this round\""
															}
														],
														"id": 1038,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3887:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3887:75:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1046,
												"nodeType": "ExpressionStatement",
												"src": "3887:75:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1048,
																	"name": "currentMonthRoyalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1025,
																	"src": "3981:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_monthlyRoyalty_$1991_storage_ptr",
																		"typeString": "struct Storage.monthlyRoyalty storage pointer"
																	}
																},
																"id": 1049,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4001:13:7",
																"memberName": "perUserReward",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1980,
																"src": "3981:33:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1050,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4017:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3981:37:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2072657761726420746f20636c61696d",
															"id": 1052,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4020:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655",
																"typeString": "literal_string \"No reward to claim\""
															},
															"value": "No reward to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655",
																"typeString": "literal_string \"No reward to claim\""
															}
														],
														"id": 1047,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3973:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3973:68:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1054,
												"nodeType": "ExpressionStatement",
												"src": "3973:68:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1056,
																	"name": "currentMonthRoyalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1025,
																	"src": "4060:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_monthlyRoyalty_$1991_storage_ptr",
																		"typeString": "struct Storage.monthlyRoyalty storage pointer"
																	}
																},
																"id": 1057,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4080:12:7",
																"memberName": "claimedCount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1982,
																"src": "4060:32:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 1058,
																	"name": "currentMonthRoyalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1025,
																	"src": "4095:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_monthlyRoyalty_$1991_storage_ptr",
																		"typeString": "struct Storage.monthlyRoyalty storage pointer"
																	}
																},
																"id": 1059,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4115:10:7",
																"memberName": "totalUsers",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1978,
																"src": "4095:30:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4060:65:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c6c20757365727320636c61696d6564",
															"id": 1061,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4127:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef17ed6f30e35240a7d137e6d492d3e905f716720fe9e669bbd494e7ba4e07ad",
																"typeString": "literal_string \"All users claimed\""
															},
															"value": "All users claimed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef17ed6f30e35240a7d137e6d492d3e905f716720fe9e669bbd494e7ba4e07ad",
																"typeString": "literal_string \"All users claimed\""
															}
														],
														"id": 1055,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4052:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4052:95:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1063,
												"nodeType": "ExpressionStatement",
												"src": "4052:95:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1065,
																	"name": "userRoyalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1018,
																	"src": "4166:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2006_storage_ptr",
																		"typeString": "struct Storage.monthlyRoyaltyUser storage pointer"
																	}
																},
																"id": 1066,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4178:16:7",
																"memberName": "qualifiedRoundId",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1997,
																"src": "4166:28:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1067,
																"name": "_roundId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 969,
																"src": "4198:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4166:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656c696769626c6520746f20636c61696d",
															"id": 1069,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4208:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_669b7fe45e1e9e7bc7261fe252db70a0a899ef02751891899e94c786911b60aa",
																"typeString": "literal_string \"Not eligible to claim\""
															},
															"value": "Not eligible to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_669b7fe45e1e9e7bc7261fe252db70a0a899ef02751891899e94c786911b60aa",
																"typeString": "literal_string \"Not eligible to claim\""
															}
														],
														"id": 1064,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4158:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4158:74:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1071,
												"nodeType": "ExpressionStatement",
												"src": "4158:74:7"
											},
											{
												"assignments": [
													1073
												],
												"declarations": [
													{
														"constant": false,
														"id": 1073,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "4248:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1107,
														"src": "4243:11:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1072,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4243:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1076,
												"initialValue": {
													"expression": {
														"id": 1074,
														"name": "currentMonthRoyalty",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1025,
														"src": "4257:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_monthlyRoyalty_$1991_storage_ptr",
															"typeString": "struct Storage.monthlyRoyalty storage pointer"
														}
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4277:13:7",
													"memberName": "perUserReward",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1980,
													"src": "4257:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4243:47:7"
											},
											{
												"expression": {
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1077,
															"name": "currentMonthRoyalty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1025,
															"src": "4305:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_monthlyRoyalty_$1991_storage_ptr",
																"typeString": "struct Storage.monthlyRoyalty storage pointer"
															}
														},
														"id": 1079,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4325:12:7",
														"memberName": "claimedCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1982,
														"src": "4305:32:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1080,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4341:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4305:37:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1082,
												"nodeType": "ExpressionStatement",
												"src": "4305:37:7"
											},
											{
												"expression": {
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 1083,
																"name": "userRoyalty",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1018,
																"src": "4353:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2006_storage_ptr",
																	"typeString": "struct Storage.monthlyRoyaltyUser storage pointer"
																}
															},
															"id": 1086,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4365:9:7",
															"memberName": "isClaimed",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2003,
															"src": "4353:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 1087,
														"indexExpression": {
															"id": 1085,
															"name": "_roundId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "4375:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4353:31:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1088,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4387:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4353:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1090,
												"nodeType": "ExpressionStatement",
												"src": "4353:38:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1092,
															"name": "_userId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "4430:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1093,
															"name": "_userId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "4439:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1094,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "4448:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 1095,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4456:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "3133",
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4459:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_13_by_1",
																"typeString": "int_const 13"
															},
															"value": "13"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_13_by_1",
																"typeString": "int_const 13"
															}
														],
														"id": 1091,
														"name": "_distributeIncome",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2304,
														"src": "4412:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4412:50:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1098,
												"nodeType": "ExpressionStatement",
												"src": "4412:50:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1100,
															"name": "_roundId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "4513:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1101,
															"name": "_userId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "4523:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1102,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "4532:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1103,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "4541:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4547:9:7",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "4541:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1099,
														"name": "MonthlyRewardClaim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2050,
														"src": "4494:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4494:63:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1106,
												"nodeType": "EmitStatement",
												"src": "4489:68:7"
											}
										]
									},
									"functionSelector": "4c2215e3",
									"id": 1108,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 972,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 971,
												"name": "nonReentrant",
												"nameLocations": [
													"3281:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 119,
												"src": "3281:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3281:12:7"
										}
									],
									"name": "claimMonthlyContestReward",
									"nameLocation": "3217:25:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "_userId",
												"nameLocation": "3248:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "3243:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 966,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3243:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "3262:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "3257:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 968,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3257:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3242:29:7"
									},
									"returnParameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3294:0:7"
									},
									"scope": 1408,
									"src": "3208:1357:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1275,
										"nodeType": "Block",
										"src": "4614:2173:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1111,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4639:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4645:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4639:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1113,
																	"name": "currentWeeklyStartTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1864,
																	"src": "4659:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1114,
																	"name": "WEEK_DURATION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1855,
																	"src": "4684:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4659:38:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1116,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4658:40:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4639:59:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1274,
												"nodeType": "IfStatement",
												"src": "4635:2145:7",
												"trueBody": {
													"id": 1273,
													"nodeType": "Block",
													"src": "4700:2080:7",
													"statements": [
														{
															"assignments": [
																1119
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1119,
																	"mutability": "mutable",
																	"name": "currentRound",
																	"nameLocation": "4720:12:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1273,
																	"src": "4715:17:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1118,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "4715:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1121,
															"initialValue": {
																"id": 1120,
																"name": "currentWeeklyRound",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1861,
																"src": "4735:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4715:38:7"
														},
														{
															"assignments": [
																1124
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1124,
																	"mutability": "mutable",
																	"name": "curentWeekContest",
																	"nameLocation": "4790:17:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1273,
																	"src": "4768:39:7",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_WeeklyContest_$1886_storage_ptr",
																		"typeString": "struct Storage.WeeklyContest"
																	},
																	"typeName": {
																		"id": 1123,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1122,
																			"name": "WeeklyContest",
																			"nameLocations": [
																				"4768:13:7"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 1886,
																			"src": "4768:13:7"
																		},
																		"referencedDeclaration": 1886,
																		"src": "4768:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_WeeklyContest_$1886_storage_ptr",
																			"typeString": "struct Storage.WeeklyContest"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1128,
															"initialValue": {
																"baseExpression": {
																	"id": 1125,
																	"name": "weeklyContestdtl",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1904,
																	"src": "4810:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_WeeklyContest_$1886_storage_$",
																		"typeString": "mapping(uint256 => struct Storage.WeeklyContest storage ref)"
																	}
																},
																"id": 1127,
																"indexExpression": {
																	"id": 1126,
																	"name": "currentRound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1119,
																	"src": "4827:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4810:30:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_WeeklyContest_$1886_storage",
																	"typeString": "struct Storage.WeeklyContest storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4768:72:7"
														},
														{
															"condition": {
																"expression": {
																	"id": 1129,
																	"name": "curentWeekContest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1124,
																	"src": "5046:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_WeeklyContest_$1886_storage_ptr",
																		"typeString": "struct Storage.WeeklyContest storage pointer"
																	}
																},
																"id": 1130,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5064:6:7",
																"memberName": "closed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1885,
																"src": "5046:24:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1132,
															"nodeType": "IfStatement",
															"src": "5042:37:7",
															"trueBody": {
																"functionReturnParameters": 1110,
																"id": 1131,
																"nodeType": "Return",
																"src": "5072:7:7"
															}
														},
														{
															"assignments": [
																1134
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1134,
																	"mutability": "mutable",
																	"name": "qualifiedCount",
																	"nameLocation": "5100:14:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1273,
																	"src": "5095:19:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1133,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "5095:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1139,
															"initialValue": {
																"expression": {
																	"baseExpression": {
																		"id": 1135,
																		"name": "weeklyQualifiedUsers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1909,
																		"src": "5117:20:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
																			"typeString": "mapping(uint256 => uint256[] storage ref)"
																		}
																	},
																	"id": 1137,
																	"indexExpression": {
																		"id": 1136,
																		"name": "currentRound",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1119,
																		"src": "5138:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5117:34:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 1138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5152:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "5117:41:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5095:63:7"
														},
														{
															"assignments": [
																1141
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1141,
																	"mutability": "mutable",
																	"name": "perUserReward",
																	"nameLocation": "5178:13:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1273,
																	"src": "5173:18:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1140,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "5173:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1142,
															"nodeType": "VariableDeclarationStatement",
															"src": "5173:18:7"
														},
														{
															"assignments": [
																1144
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1144,
																	"mutability": "mutable",
																	"name": "distributedAmount",
																	"nameLocation": "5211:17:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1273,
																	"src": "5206:22:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1143,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "5206:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1145,
															"nodeType": "VariableDeclarationStatement",
															"src": "5206:22:7"
														},
														{
															"assignments": [
																1147
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1147,
																	"mutability": "mutable",
																	"name": "leftover",
																	"nameLocation": "5248:8:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1273,
																	"src": "5243:13:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1146,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "5243:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1148,
															"nodeType": "VariableDeclarationStatement",
															"src": "5243:13:7"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1149,
																	"name": "qualifiedCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1134,
																	"src": "5277:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5294:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5277:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1199,
																"nodeType": "Block",
																"src": "5711:200:7",
																"statements": [
																	{
																		"expression": {
																			"id": 1189,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1187,
																				"name": "leftover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1147,
																				"src": "5791:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1188,
																				"name": "WeeklyTotalReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1867,
																				"src": "5802:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5791:28:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1190,
																		"nodeType": "ExpressionStatement",
																		"src": "5791:28:7"
																	},
																	{
																		"expression": {
																			"id": 1193,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1191,
																				"name": "distributedAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1144,
																				"src": "5838:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "30",
																				"id": 1192,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5858:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "5838:21:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1194,
																		"nodeType": "ExpressionStatement",
																		"src": "5838:21:7"
																	},
																	{
																		"expression": {
																			"id": 1197,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1195,
																				"name": "perUserReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1141,
																				"src": "5878:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "30",
																				"id": 1196,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5894:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "5878:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1198,
																		"nodeType": "ExpressionStatement",
																		"src": "5878:17:7"
																	}
																]
															},
															"id": 1200,
															"nodeType": "IfStatement",
															"src": "5273:638:7",
															"trueBody": {
																"id": 1186,
																"nodeType": "Block",
																"src": "5297:408:7",
																"statements": [
																	{
																		"assignments": [
																			1153
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1153,
																				"mutability": "mutable",
																				"name": "rawReward",
																				"nameLocation": "5371:9:7",
																				"nodeType": "VariableDeclaration",
																				"scope": 1186,
																				"src": "5366:14:7",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1152,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "5366:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1157,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1156,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1154,
																				"name": "WeeklyTotalReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1867,
																				"src": "5383:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 1155,
																				"name": "qualifiedCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1134,
																				"src": "5403:14:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5383:34:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "5366:51:7"
																	},
																	{
																		"expression": {
																			"id": 1166,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1158,
																				"name": "perUserReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1141,
																				"src": "5436:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"condition": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1161,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1159,
																								"name": "rawReward",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1153,
																								"src": "5453:9:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": ">",
																							"rightExpression": {
																								"id": 1160,
																								"name": "WeeklyCapping",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1858,
																								"src": "5465:13:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "5453:25:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						}
																					],
																					"id": 1162,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "5452:27:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseExpression": {
																					"id": 1164,
																					"name": "rawReward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1153,
																					"src": "5498:9:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1165,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "Conditional",
																				"src": "5452:55:7",
																				"trueExpression": {
																					"id": 1163,
																					"name": "WeeklyCapping",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1858,
																					"src": "5482:13:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5436:71:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1167,
																		"nodeType": "ExpressionStatement",
																		"src": "5436:71:7"
																	},
																	{
																		"expression": {
																			"id": 1172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1168,
																				"name": "distributedAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1144,
																				"src": "5526:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1171,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1169,
																					"name": "perUserReward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1141,
																					"src": "5546:13:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 1170,
																					"name": "qualifiedCount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1134,
																					"src": "5562:14:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5546:30:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5526:50:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1173,
																		"nodeType": "ExpressionStatement",
																		"src": "5526:50:7"
																	},
																	{
																		"expression": {
																			"id": 1184,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1174,
																				"name": "leftover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1147,
																				"src": "5595:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"condition": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1177,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1175,
																								"name": "WeeklyTotalReward",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1867,
																								"src": "5607:17:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": ">",
																							"rightExpression": {
																								"id": 1176,
																								"name": "distributedAmount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1144,
																								"src": "5627:17:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "5607:37:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						}
																					],
																					"id": 1178,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "5606:39:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseExpression": {
																					"hexValue": "30",
																					"id": 1182,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5688:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"id": 1183,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "Conditional",
																				"src": "5606:83:7",
																				"trueExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1181,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1179,
																						"name": "WeeklyTotalReward",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1867,
																						"src": "5648:17:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"id": 1180,
																						"name": "distributedAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1144,
																						"src": "5668:17:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "5648:37:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5595:94:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1185,
																		"nodeType": "ExpressionStatement",
																		"src": "5595:94:7"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1201,
																		"name": "curentWeekContest",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1124,
																		"src": "5960:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_WeeklyContest_$1886_storage_ptr",
																			"typeString": "struct Storage.WeeklyContest storage pointer"
																		}
																	},
																	"id": 1203,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5978:7:7",
																	"memberName": "roundId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1869,
																	"src": "5960:25:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1204,
																	"name": "currentRound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1119,
																	"src": "5988:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5960:40:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1206,
															"nodeType": "ExpressionStatement",
															"src": "5960:40:7"
														},
														{
															"expression": {
																"id": 1211,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1207,
																		"name": "curentWeekContest",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1124,
																		"src": "6015:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_WeeklyContest_$1886_storage_ptr",
																			"typeString": "struct Storage.WeeklyContest storage pointer"
																		}
																	},
																	"id": 1209,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "6033:13:7",
																	"memberName": "perUserReward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1875,
																	"src": "6015:31:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1210,
																	"name": "perUserReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1141,
																	"src": "6049:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6015:47:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1212,
															"nodeType": "ExpressionStatement",
															"src": "6015:47:7"
														},
														{
															"expression": {
																"id": 1217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1213,
																		"name": "curentWeekContest",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1124,
																		"src": "6077:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_WeeklyContest_$1886_storage_ptr",
																			"typeString": "struct Storage.WeeklyContest storage pointer"
																		}
																	},
																	"id": 1215,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "6095:10:7",
																	"memberName": "totalUsers",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1873,
																	"src": "6077:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1216,
																	"name": "qualifiedCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1134,
																	"src": "6108:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6077:45:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1218,
															"nodeType": "ExpressionStatement",
															"src": "6077:45:7"
														},
														{
															"expression": {
																"id": 1223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1219,
																		"name": "curentWeekContest",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1124,
																		"src": "6137:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_WeeklyContest_$1886_storage_ptr",
																			"typeString": "struct Storage.WeeklyContest storage pointer"
																		}
																	},
																	"id": 1221,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "6155:11:7",
																	"memberName": "totalReward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1871,
																	"src": "6137:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1222,
																	"name": "WeeklyTotalReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1867,
																	"src": "6169:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6137:49:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1224,
															"nodeType": "ExpressionStatement",
															"src": "6137:49:7"
														},
														{
															"expression": {
																"id": 1229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1225,
																		"name": "curentWeekContest",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1124,
																		"src": "6221:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_WeeklyContest_$1886_storage_ptr",
																			"typeString": "struct Storage.WeeklyContest storage pointer"
																		}
																	},
																	"id": 1227,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "6239:12:7",
																	"memberName": "carryForward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1883,
																	"src": "6221:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1228,
																	"name": "leftover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1147,
																	"src": "6254:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6221:41:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1230,
															"nodeType": "ExpressionStatement",
															"src": "6221:41:7"
														},
														{
															"expression": {
																"id": 1237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1231,
																		"name": "curentWeekContest",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1124,
																		"src": "6277:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_WeeklyContest_$1886_storage_ptr",
																			"typeString": "struct Storage.WeeklyContest storage pointer"
																		}
																	},
																	"id": 1233,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "6295:7:7",
																	"memberName": "endTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1881,
																	"src": "6277:25:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1236,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1234,
																		"name": "currentWeeklyStartTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1864,
																		"src": "6305:22:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1235,
																		"name": "WEEK_DURATION",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1855,
																		"src": "6330:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6305:38:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6277:66:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1238,
															"nodeType": "ExpressionStatement",
															"src": "6277:66:7"
														},
														{
															"expression": {
																"id": 1243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1239,
																		"name": "curentWeekContest",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1124,
																		"src": "6358:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_WeeklyContest_$1886_storage_ptr",
																			"typeString": "struct Storage.WeeklyContest storage pointer"
																		}
																	},
																	"id": 1241,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "6376:6:7",
																	"memberName": "closed",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1885,
																	"src": "6358:24:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1242,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6385:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6358:31:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1244,
															"nodeType": "ExpressionStatement",
															"src": "6358:31:7"
														},
														{
															"expression": {
																"id": 1248,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1245,
																	"name": "currentWeeklyStartTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1864,
																	"src": "6441:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1246,
																		"name": "curentWeekContest",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1124,
																		"src": "6466:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_WeeklyContest_$1886_storage_ptr",
																			"typeString": "struct Storage.WeeklyContest storage pointer"
																		}
																	},
																	"id": 1247,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6484:7:7",
																	"memberName": "endTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1881,
																	"src": "6466:25:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6441:50:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1249,
															"nodeType": "ExpressionStatement",
															"src": "6441:50:7"
														},
														{
															"expression": {
																"id": 1254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1250,
																	"name": "currentWeeklyRound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1861,
																	"src": "6506:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1251,
																		"name": "currentRound",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1119,
																		"src": "6527:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6542:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "6527:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6506:37:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1255,
															"nodeType": "ExpressionStatement",
															"src": "6506:37:7"
														},
														{
															"expression": {
																"id": 1258,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1256,
																	"name": "WeeklyTotalReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1867,
																	"src": "6558:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1257,
																	"name": "leftover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1147,
																	"src": "6578:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6558:28:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1259,
															"nodeType": "ExpressionStatement",
															"src": "6558:28:7"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1261,
																		"name": "currentRound",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1119,
																		"src": "6639:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1262,
																		"name": "qualifiedCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1134,
																		"src": "6653:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1263,
																		"name": "perUserReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1141,
																		"src": "6669:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1264,
																			"name": "distributedAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1144,
																			"src": "6685:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1265,
																			"name": "leftover",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1147,
																			"src": "6703:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6685:26:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1267,
																		"name": "distributedAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1144,
																		"src": "6713:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1268,
																		"name": "leftover",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1147,
																		"src": "6732:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1269,
																			"name": "curentWeekContest",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1124,
																			"src": "6742:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_WeeklyContest_$1886_storage_ptr",
																				"typeString": "struct Storage.WeeklyContest storage pointer"
																			}
																		},
																		"id": 1270,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6760:7:7",
																		"memberName": "endTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1881,
																		"src": "6742:25:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1260,
																	"name": "WeeklyClosed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1939,
																	"src": "6626:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256,uint256,uint256,uint256,uint256,uint256)"
																	}
																},
																"id": 1271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6626:142:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1272,
															"nodeType": "EmitStatement",
															"src": "6621:147:7"
														}
													]
												}
											}
										]
									},
									"id": 1276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_closeWeeklyContest",
									"nameLocation": "4583:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4602:2:7"
									},
									"returnParameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4614:0:7"
									},
									"scope": 1408,
									"src": "4574:2213:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1406,
										"nodeType": "Block",
										"src": "6883:1126:7",
										"statements": [
											{
												"assignments": [
													1287
												],
												"declarations": [
													{
														"constant": false,
														"id": 1287,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "6917:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1406,
														"src": "6904:17:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$1554_storage_ptr",
															"typeString": "struct Storage.User"
														},
														"typeName": {
															"id": 1286,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1285,
																"name": "User",
																"nameLocations": [
																	"6904:4:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1554,
																"src": "6904:4:7"
															},
															"referencedDeclaration": 1554,
															"src": "6904:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$1554_storage_ptr",
																"typeString": "struct Storage.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1291,
												"initialValue": {
													"baseExpression": {
														"id": 1288,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1601,
														"src": "6924:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$1554_storage_$",
															"typeString": "mapping(uint256 => struct Storage.User storage ref)"
														}
													},
													"id": 1290,
													"indexExpression": {
														"id": 1289,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1278,
														"src": "6930:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6924:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$1554_storage",
														"typeString": "struct Storage.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6904:34:7"
											},
											{
												"assignments": [
													1293
												],
												"declarations": [
													{
														"constant": false,
														"id": 1293,
														"mutability": "mutable",
														"name": "userAddress",
														"nameLocation": "6957:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1406,
														"src": "6949:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1292,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6949:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1296,
												"initialValue": {
													"expression": {
														"id": 1294,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1287,
														"src": "6971:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$1554_storage_ptr",
															"typeString": "struct Storage.User storage pointer"
														}
													},
													"id": 1295,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6976:7:7",
													"memberName": "account",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1521,
													"src": "6971:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6949:34:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1298,
																"name": "userAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1293,
																"src": "7003:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1299,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7018:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7022:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7018:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7003:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420796f7572206163636f756e74",
															"id": 1302,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7030:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d2be5388e395114c9bc63051fd6def6e9e0facc3465cd48116ad48bef63b0e75",
																"typeString": "literal_string \"Not your account\""
															},
															"value": "Not your account"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d2be5388e395114c9bc63051fd6def6e9e0facc3465cd48116ad48bef63b0e75",
																"typeString": "literal_string \"Not your account\""
															}
														],
														"id": 1297,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6995:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6995:54:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1304,
												"nodeType": "ExpressionStatement",
												"src": "6995:54:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1306,
																			"name": "_userId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1278,
																			"src": "7068:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1307,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7078:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "7068:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1309,
																			"name": "_roundId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1280,
																			"src": "7083:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1310,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7094:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "7083:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "7068:27:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1313,
																				"name": "weeklyContestdtl",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1904,
																				"src": "7099:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_WeeklyContest_$1886_storage_$",
																					"typeString": "mapping(uint256 => struct Storage.WeeklyContest storage ref)"
																				}
																			},
																			"id": 1315,
																			"indexExpression": {
																				"id": 1314,
																				"name": "_roundId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1280,
																				"src": "7116:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7099:26:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_WeeklyContest_$1886_storage",
																				"typeString": "struct Storage.WeeklyContest storage ref"
																			}
																		},
																		"id": 1316,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7126:6:7",
																		"memberName": "closed",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1885,
																		"src": "7099:33:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "74727565",
																		"id": 1317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7136:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	"src": "7099:41:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "7068:72:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1322,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1320,
																	"name": "_roundId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1280,
																	"src": "7144:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1321,
																	"name": "currentWeeklyRound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1861,
																	"src": "7155:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7144:29:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7068:105:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420757365724964206f7220726f756e644964206f7220726f756e64206f72206e6f7420636c6f736564",
															"id": 1324,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7175:50:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1beb791ee1ae905f1be0eca33d1d067be754dc802f8b109cb5643c884132d67d",
																"typeString": "literal_string \"Invalid userId or roundId or round or not closed\""
															},
															"value": "Invalid userId or roundId or round or not closed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1beb791ee1ae905f1be0eca33d1d067be754dc802f8b109cb5643c884132d67d",
																"typeString": "literal_string \"Invalid userId or roundId or round or not closed\""
															}
														],
														"id": 1305,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7060:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7060:166:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1326,
												"nodeType": "ExpressionStatement",
												"src": "7060:166:7"
											},
											{
												"assignments": [
													1329
												],
												"declarations": [
													{
														"constant": false,
														"id": 1329,
														"mutability": "mutable",
														"name": "weeklyuserdtl",
														"nameLocation": "7256:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 1406,
														"src": "7237:32:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_weeklyUser_$1899_storage_ptr",
															"typeString": "struct Storage.weeklyUser"
														},
														"typeName": {
															"id": 1328,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1327,
																"name": "weeklyUser",
																"nameLocations": [
																	"7237:10:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1899,
																"src": "7237:10:7"
															},
															"referencedDeclaration": 1899,
															"src": "7237:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_weeklyUser_$1899_storage_ptr",
																"typeString": "struct Storage.weeklyUser"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1335,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1330,
															"name": "weeklyUserdtl",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1916,
															"src": "7272:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_weeklyUser_$1899_storage_$_$",
																"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.weeklyUser storage ref))"
															}
														},
														"id": 1332,
														"indexExpression": {
															"id": 1331,
															"name": "_roundId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1280,
															"src": "7286:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7272:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_weeklyUser_$1899_storage_$",
															"typeString": "mapping(uint256 => struct Storage.weeklyUser storage ref)"
														}
													},
													"id": 1334,
													"indexExpression": {
														"id": 1333,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1278,
														"src": "7296:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7272:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_weeklyUser_$1899_storage",
														"typeString": "struct Storage.weeklyUser storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7237:67:7"
											},
											{
												"assignments": [
													1338
												],
												"declarations": [
													{
														"constant": false,
														"id": 1338,
														"mutability": "mutable",
														"name": "curentWeekContest",
														"nameLocation": "7337:17:7",
														"nodeType": "VariableDeclaration",
														"scope": 1406,
														"src": "7315:39:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_WeeklyContest_$1886_storage_ptr",
															"typeString": "struct Storage.WeeklyContest"
														},
														"typeName": {
															"id": 1337,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1336,
																"name": "WeeklyContest",
																"nameLocations": [
																	"7315:13:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1886,
																"src": "7315:13:7"
															},
															"referencedDeclaration": 1886,
															"src": "7315:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_WeeklyContest_$1886_storage_ptr",
																"typeString": "struct Storage.WeeklyContest"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1342,
												"initialValue": {
													"baseExpression": {
														"id": 1339,
														"name": "weeklyContestdtl",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1904,
														"src": "7357:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_WeeklyContest_$1886_storage_$",
															"typeString": "mapping(uint256 => struct Storage.WeeklyContest storage ref)"
														}
													},
													"id": 1341,
													"indexExpression": {
														"id": 1340,
														"name": "_roundId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1280,
														"src": "7374:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7357:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_WeeklyContest_$1886_storage",
														"typeString": "struct Storage.WeeklyContest storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7315:68:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1344,
																		"name": "weeklyuserdtl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1329,
																		"src": "7402:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_weeklyUser_$1899_storage_ptr",
																			"typeString": "struct Storage.weeklyUser storage pointer"
																		}
																	},
																	"id": 1345,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7416:11:7",
																	"memberName": "isQualified",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1898,
																	"src": "7402:25:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "74727565",
																	"id": 1346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7431:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7402:33:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1348,
																		"name": "weeklyuserdtl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1329,
																		"src": "7439:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_weeklyUser_$1899_storage_ptr",
																			"typeString": "struct Storage.weeklyUser storage pointer"
																		}
																	},
																	"id": 1349,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7453:9:7",
																	"memberName": "isClaimed",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1896,
																	"src": "7439:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "66616c7365",
																	"id": 1350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7466:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "7439:32:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7402:69:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74207175616c6966696564206f7220616c726561647920636c61696d6564",
															"id": 1353,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7473:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_78f53726529d49fe01f6ac4390f0b3e3c092c1fd33b30397a6030a09dcedc25c",
																"typeString": "literal_string \"Not qualified or already claimed\""
															},
															"value": "Not qualified or already claimed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_78f53726529d49fe01f6ac4390f0b3e3c092c1fd33b30397a6030a09dcedc25c",
																"typeString": "literal_string \"Not qualified or already claimed\""
															}
														],
														"id": 1343,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7394:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7394:114:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1355,
												"nodeType": "ExpressionStatement",
												"src": "7394:114:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1357,
																	"name": "curentWeekContest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1338,
																	"src": "7527:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_WeeklyContest_$1886_storage_ptr",
																		"typeString": "struct Storage.WeeklyContest storage pointer"
																	}
																},
																"id": 1358,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7545:13:7",
																"memberName": "perUserReward",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1875,
																"src": "7527:31:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7561:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7527:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2072657761726420746f20636c61696d",
															"id": 1361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7564:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655",
																"typeString": "literal_string \"No reward to claim\""
															},
															"value": "No reward to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655",
																"typeString": "literal_string \"No reward to claim\""
															}
														],
														"id": 1356,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7519:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7519:66:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1363,
												"nodeType": "ExpressionStatement",
												"src": "7519:66:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1365,
																	"name": "curentWeekContest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1338,
																	"src": "7604:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_WeeklyContest_$1886_storage_ptr",
																		"typeString": "struct Storage.WeeklyContest storage pointer"
																	}
																},
																"id": 1366,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7622:12:7",
																"memberName": "claimedCount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1877,
																"src": "7604:30:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 1367,
																	"name": "curentWeekContest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1338,
																	"src": "7637:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_WeeklyContest_$1886_storage_ptr",
																		"typeString": "struct Storage.WeeklyContest storage pointer"
																	}
																},
																"id": 1368,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7655:10:7",
																"memberName": "totalUsers",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1873,
																"src": "7637:28:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7604:61:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c6c20757365727320636c61696d6564",
															"id": 1370,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7667:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef17ed6f30e35240a7d137e6d492d3e905f716720fe9e669bbd494e7ba4e07ad",
																"typeString": "literal_string \"All users claimed\""
															},
															"value": "All users claimed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef17ed6f30e35240a7d137e6d492d3e905f716720fe9e669bbd494e7ba4e07ad",
																"typeString": "literal_string \"All users claimed\""
															}
														],
														"id": 1364,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7596:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7596:91:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1372,
												"nodeType": "ExpressionStatement",
												"src": "7596:91:7"
											},
											{
												"assignments": [
													1374
												],
												"declarations": [
													{
														"constant": false,
														"id": 1374,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "7705:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1406,
														"src": "7700:11:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1373,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7700:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1377,
												"initialValue": {
													"expression": {
														"id": 1375,
														"name": "curentWeekContest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "7714:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_WeeklyContest_$1886_storage_ptr",
															"typeString": "struct Storage.WeeklyContest storage pointer"
														}
													},
													"id": 1376,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7732:13:7",
													"memberName": "perUserReward",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1875,
													"src": "7714:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7700:45:7"
											},
											{
												"expression": {
													"id": 1382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1378,
															"name": "curentWeekContest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1338,
															"src": "7760:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_WeeklyContest_$1886_storage_ptr",
																"typeString": "struct Storage.WeeklyContest storage pointer"
															}
														},
														"id": 1380,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7778:12:7",
														"memberName": "claimedCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1877,
														"src": "7760:30:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1381,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7794:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "7760:35:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1383,
												"nodeType": "ExpressionStatement",
												"src": "7760:35:7"
											},
											{
												"expression": {
													"id": 1388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1384,
															"name": "weeklyuserdtl",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1329,
															"src": "7806:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_weeklyUser_$1899_storage_ptr",
																"typeString": "struct Storage.weeklyUser storage pointer"
															}
														},
														"id": 1386,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7820:9:7",
														"memberName": "isClaimed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1896,
														"src": "7806:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1387,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7832:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "7806:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1389,
												"nodeType": "ExpressionStatement",
												"src": "7806:30:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1391,
															"name": "_userId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1278,
															"src": "7875:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1392,
															"name": "_userId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1278,
															"src": "7884:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1393,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1374,
															"src": "7893:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 1394,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7901:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "3132",
															"id": 1395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7904:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_12_by_1",
																"typeString": "int_const 12"
															},
															"value": "12"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_12_by_1",
																"typeString": "int_const 12"
															}
														],
														"id": 1390,
														"name": "_distributeIncome",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2304,
														"src": "7857:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7857:50:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1397,
												"nodeType": "ExpressionStatement",
												"src": "7857:50:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1399,
															"name": "_roundId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1280,
															"src": "7957:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1400,
															"name": "_userId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1278,
															"src": "7967:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1401,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1374,
															"src": "7976:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1402,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "7985:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7991:9:7",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "7985:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1398,
														"name": "WeeklyRewardClaim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1949,
														"src": "7939:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7939:62:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1405,
												"nodeType": "EmitStatement",
												"src": "7934:67:7"
											}
										]
									},
									"functionSelector": "16298056",
									"id": 1407,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1283,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1282,
												"name": "nonReentrant",
												"nameLocations": [
													"6870:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 119,
												"src": "6870:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "6870:12:7"
										}
									],
									"name": "claimWeeklyContestReward",
									"nameLocation": "6807:24:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "_userId",
												"nameLocation": "6837:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "6832:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1277,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6832:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "6851:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "6846:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1279,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6846:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6831:29:7"
									},
									"returnParameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6883:0:7"
									},
									"scope": 1408,
									"src": "6798:1211:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1409,
							"src": "90:8053:7",
							"usedErrors": [
								244
							],
							"usedEvents": [
								1642,
								1650,
								1660,
								1670,
								1682,
								1692,
								1700,
								1939,
								1949,
								1957,
								2040,
								2050,
								2058
							]
						}
					],
					"src": "33:8112:7"
				},
				"id": 7
			},
			"contracts/modules/Storage.sol": {
				"ast": {
					"absolutePath": "contracts/modules/Storage.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC20": [
							232
						],
						"ReentrancyGuard": [
							154
						],
						"SafeERC20": [
							696
						],
						"Storage": [
							2452
						]
					},
					"id": 2453,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1410,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".30"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1411,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2453,
							"sourceUnit": 155,
							"src": "99:62:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1412,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2453,
							"sourceUnit": 233,
							"src": "165:56:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1413,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2453,
							"sourceUnit": 697,
							"src": "223:65:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1414,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"312:15:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 154,
										"src": "312:15:8"
									},
									"id": 1415,
									"nodeType": "InheritanceSpecifier",
									"src": "312:15:8"
								}
							],
							"canonicalName": "Storage",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2452,
							"linearizedBaseContracts": [
								2452,
								154
							],
							"name": "Storage",
							"nameLocation": "301:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1419,
									"libraryName": {
										"id": 1416,
										"name": "SafeERC20",
										"nameLocations": [
											"341:9:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 696,
										"src": "341:9:8"
									},
									"nodeType": "UsingForDirective",
									"src": "335:27:8",
									"typeName": {
										"id": 1418,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1417,
											"name": "IERC20",
											"nameLocations": [
												"355:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 232,
											"src": "355:6:8"
										},
										"referencedDeclaration": 232,
										"src": "355:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$232",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "2f48ab7d",
									"id": 1422,
									"mutability": "mutable",
									"name": "usdt",
									"nameLocation": "382:4:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "368:18:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$232",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1421,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1420,
											"name": "IERC20",
											"nameLocations": [
												"368:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 232,
											"src": "368:6:8"
										},
										"referencedDeclaration": 232,
										"src": "368:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$232",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7cdc65f2",
									"id": 1424,
									"mutability": "mutable",
									"name": "creatorWallet",
									"nameLocation": "437:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "422:28:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1423,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "422:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e9e34a16",
									"id": 1426,
									"mutability": "mutable",
									"name": "systemMaintance",
									"nameLocation": "475:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "460:30:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1425,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "460:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f5d74d93",
									"id": 1428,
									"mutability": "mutable",
									"name": "teamDevelopment",
									"nameLocation": "512:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "497:30:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1427,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "497:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ec597e6f",
									"id": 1430,
									"mutability": "mutable",
									"name": "defaultRefId",
									"nameLocation": "546:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "534:24:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1429,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "534:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bff1f9e1",
									"id": 1432,
									"mutability": "mutable",
									"name": "totalUsers",
									"nameLocation": "577:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "565:22:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1431,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "565:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1435,
									"mutability": "constant",
									"name": "maxLayers",
									"nameLocation": "617:9:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "594:37:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1433,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "594:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3135",
										"id": 1434,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "629:2:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_15_by_1",
											"typeString": "int_const 15"
										},
										"value": "15"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"functionSelector": "01c234a8",
									"id": 1438,
									"mutability": "constant",
									"name": "PERCENTS_DIVIDER",
									"nameLocation": "664:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "640:48:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1436,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "640:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130303030",
										"id": 1437,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "683:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000_by_1",
											"typeString": "int_const 10000"
										},
										"value": "10000"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "32bc298c",
									"id": 1441,
									"mutability": "constant",
									"name": "TIME_STEP",
									"nameLocation": "719:9:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "695:42:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1439,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "695:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1440,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "731:6:8",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_86400_by_1",
											"typeString": "int_const 86400"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "375b43b4",
									"id": 1444,
									"mutability": "constant",
									"name": "ROI_CAP_MULTIPLIER",
									"nameLocation": "768:18:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "744:47:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1442,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "744:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3135",
										"id": 1443,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "789:2:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_15_by_1",
											"typeString": "int_const 15"
										},
										"value": "15"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "58c7d352",
									"id": 1447,
									"mutability": "constant",
									"name": "ROI_CAP_DIVIDER",
									"nameLocation": "830:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "806:44:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1445,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "806:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 1446,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "848:2:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "39ab3603",
									"id": 1450,
									"mutability": "mutable",
									"name": "registeredUserIds",
									"nameLocation": "878:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "864:31:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 1448,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "864:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1449,
										"nodeType": "ArrayTypeName",
										"src": "864:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1452,
									"mutability": "mutable",
									"name": "nonce",
									"nameLocation": "915:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "902:18:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1451,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "902:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "32fcd966",
									"id": 1455,
									"mutability": "constant",
									"name": "ACC_PRECISION",
									"nameLocation": "1104:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "1080:44:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1453,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1080:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653138",
										"id": 1454,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1120:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1e18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "78f6ad6d",
									"id": 1457,
									"mutability": "mutable",
									"name": "communityAccPerUser",
									"nameLocation": "1146:19:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "1131:34:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1456,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1131:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1461,
									"mutability": "mutable",
									"name": "communityDebt",
									"nameLocation": "1244:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "1210:47:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1460,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1458,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1218:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1210:24:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1459,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1226:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "c216212a",
									"id": 1510,
									"mutability": "mutable",
									"name": "packages",
									"nameLocation": "1302:8:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "1288:540:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 1462,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1288:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1463,
										"nodeType": "ArrayTypeName",
										"src": "1288:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"value": {
										"components": [
											{
												"commonType": {
													"typeIdentifier": "t_rational_15000000000000000000_by_1",
													"typeString": "int_const 15000000000000000000"
												},
												"id": 1466,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "3135",
													"id": 1464,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1324:2:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_15_by_1",
														"typeString": "int_const 15"
													},
													"value": "15"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 1465,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1329:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1324:9:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_15000000000000000000_by_1",
													"typeString": "int_const 15000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_25000000000000000000_by_1",
													"typeString": "int_const 25000000000000000000"
												},
												"id": 1469,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "3235",
													"id": 1467,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1356:2:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_25_by_1",
														"typeString": "int_const 25"
													},
													"value": "25"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 1468,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1361:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1356:9:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_25000000000000000000_by_1",
													"typeString": "int_const 25000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_50000000000000000000_by_1",
													"typeString": "int_const 50000000000000000000"
												},
												"id": 1472,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "3530",
													"id": 1470,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1388:2:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_50_by_1",
														"typeString": "int_const 50"
													},
													"value": "50"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1393:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1388:9:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_50000000000000000000_by_1",
													"typeString": "int_const 50000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_100000000000000000000_by_1",
													"typeString": "int_const 100000000000000000000"
												},
												"id": 1475,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "313030",
													"id": 1473,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1420:3:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_100_by_1",
														"typeString": "int_const 100"
													},
													"value": "100"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 1474,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1426:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1420:10:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_100000000000000000000_by_1",
													"typeString": "int_const 100000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_200000000000000000000_by_1",
													"typeString": "int_const 200000000000000000000"
												},
												"id": 1478,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "323030",
													"id": 1476,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1453:3:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_200_by_1",
														"typeString": "int_const 200"
													},
													"value": "200"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 1477,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1459:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1453:10:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_200000000000000000000_by_1",
													"typeString": "int_const 200000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_400000000000000000000_by_1",
													"typeString": "int_const 400000000000000000000"
												},
												"id": 1481,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "343030",
													"id": 1479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1486:3:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_400_by_1",
														"typeString": "int_const 400"
													},
													"value": "400"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 1480,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1492:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1486:10:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_400000000000000000000_by_1",
													"typeString": "int_const 400000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_800000000000000000000_by_1",
													"typeString": "int_const 800000000000000000000"
												},
												"id": 1484,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "383030",
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1519:3:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_800_by_1",
														"typeString": "int_const 800"
													},
													"value": "800"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 1483,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1525:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1519:10:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_800000000000000000000_by_1",
													"typeString": "int_const 800000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_1600000000000000000000_by_1",
													"typeString": "int_const 1600000000000000000000"
												},
												"id": 1487,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "31363030",
													"id": 1485,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1552:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1600_by_1",
														"typeString": "int_const 1600"
													},
													"value": "1600"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 1486,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1559:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1552:11:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1600000000000000000000_by_1",
													"typeString": "int_const 1600000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_3200000000000000000000_by_1",
													"typeString": "int_const 3200000000000000000000"
												},
												"id": 1490,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "33323030",
													"id": 1488,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1586:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_3200_by_1",
														"typeString": "int_const 3200"
													},
													"value": "3200"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 1489,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1593:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1586:11:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_3200000000000000000000_by_1",
													"typeString": "int_const 3200000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_6400000000000000000000_by_1",
													"typeString": "int_const 6400000000000000000000"
												},
												"id": 1493,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "36343030",
													"id": 1491,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1620:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6400_by_1",
														"typeString": "int_const 6400"
													},
													"value": "6400"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 1492,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1627:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1620:11:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_6400000000000000000000_by_1",
													"typeString": "int_const 6400000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_12800000000000000000000_by_1",
													"typeString": "int_const 12800000000000000000000"
												},
												"id": 1496,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "3132383030",
													"id": 1494,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1654:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_12800_by_1",
														"typeString": "int_const 12800"
													},
													"value": "12800"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 1495,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1662:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1654:12:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_12800000000000000000000_by_1",
													"typeString": "int_const 12800000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_25600000000000000000000_by_1",
													"typeString": "int_const 25600000000000000000000"
												},
												"id": 1499,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "3235363030",
													"id": 1497,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1689:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_25600_by_1",
														"typeString": "int_const 25600"
													},
													"value": "25600"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 1498,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1697:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1689:12:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_25600000000000000000000_by_1",
													"typeString": "int_const 25600000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_51200000000000000000000_by_1",
													"typeString": "int_const 51200000000000000000000"
												},
												"id": 1502,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "3531323030",
													"id": 1500,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1724:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_51200_by_1",
														"typeString": "int_const 51200"
													},
													"value": "51200"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 1501,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1732:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1724:12:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_51200000000000000000000_by_1",
													"typeString": "int_const 51200000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_102400000000000000000000_by_1",
													"typeString": "int_const 102400000000000000000000"
												},
												"id": 1505,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "313032343030",
													"id": 1503,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1759:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_102400_by_1",
														"typeString": "int_const 102400"
													},
													"value": "102400"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 1504,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1768:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1759:13:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_102400000000000000000000_by_1",
													"typeString": "int_const 102400000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_204800000000000000000000_by_1",
													"typeString": "int_const 204800000000000000000000"
												},
												"id": 1508,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "323034383030",
													"id": 1506,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1795:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_204800_by_1",
														"typeString": "int_const 204800"
													},
													"value": "204800"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 1507,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1804:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1795:13:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_204800000000000000000000_by_1",
													"typeString": "int_const 204800000000000000000000"
												}
											}
										],
										"id": 1509,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "1313:515:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint80_$15_memory_ptr",
											"typeString": "uint80[15] memory"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.Deposit",
									"id": 1519,
									"members": [
										{
											"constant": false,
											"id": 1512,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "1975:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 1519,
											"src": "1967:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1511,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1967:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1514,
											"mutability": "mutable",
											"name": "withdrawn",
											"nameLocation": "2000:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 1519,
											"src": "1992:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1513,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1992:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1516,
											"mutability": "mutable",
											"name": "start",
											"nameLocation": "2028:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1519,
											"src": "2020:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1515,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2020:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1518,
											"mutability": "mutable",
											"name": "depositType",
											"nameLocation": "2051:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 1519,
											"src": "2045:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1517,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "2045:5:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Deposit",
									"nameLocation": "1948:7:8",
									"nodeType": "StructDefinition",
									"scope": 2452,
									"src": "1941:131:8",
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.User",
									"id": 1554,
									"members": [
										{
											"constant": false,
											"id": 1521,
											"mutability": "mutable",
											"name": "account",
											"nameLocation": "2111:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 1554,
											"src": "2103:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1520,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2103:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1525,
											"mutability": "mutable",
											"name": "deposits",
											"nameLocation": "2139:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 1554,
											"src": "2129:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Deposit_$1519_storage_$dyn_storage_ptr",
												"typeString": "struct Storage.Deposit[]"
											},
											"typeName": {
												"baseType": {
													"id": 1523,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1522,
														"name": "Deposit",
														"nameLocations": [
															"2129:7:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1519,
														"src": "2129:7:8"
													},
													"referencedDeclaration": 1519,
													"src": "2129:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Deposit_$1519_storage_ptr",
														"typeString": "struct Storage.Deposit"
													}
												},
												"id": 1524,
												"nodeType": "ArrayTypeName",
												"src": "2129:9:8",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Deposit_$1519_storage_$dyn_storage_ptr",
													"typeString": "struct Storage.Deposit[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1527,
											"mutability": "mutable",
											"name": "checkpoint",
											"nameLocation": "2166:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 1554,
											"src": "2158:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1526,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2158:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1529,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "2192:2:8",
											"nodeType": "VariableDeclaration",
											"scope": 1554,
											"src": "2187:7:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1528,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2187:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1531,
											"mutability": "mutable",
											"name": "sponsorId",
											"nameLocation": "2210:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 1554,
											"src": "2205:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1530,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2205:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1533,
											"mutability": "mutable",
											"name": "uplineId",
											"nameLocation": "2248:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 1554,
											"src": "2243:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1532,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2243:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1535,
											"mutability": "mutable",
											"name": "level",
											"nameLocation": "2297:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1554,
											"src": "2292:10:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1534,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2292:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1537,
											"mutability": "mutable",
											"name": "directTeam",
											"nameLocation": "2355:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 1554,
											"src": "2350:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1536,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2350:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1539,
											"mutability": "mutable",
											"name": "directPoolQualified",
											"nameLocation": "2407:19:8",
											"nodeType": "VariableDeclaration",
											"scope": 1554,
											"src": "2402:24:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1538,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2402:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1541,
											"mutability": "mutable",
											"name": "totalMatrixTeam",
											"nameLocation": "2485:15:8",
											"nodeType": "VariableDeclaration",
											"scope": 1554,
											"src": "2480:20:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1540,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2480:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1543,
											"mutability": "mutable",
											"name": "totalDeposit",
											"nameLocation": "2541:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 1554,
											"src": "2536:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1542,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2536:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1545,
											"mutability": "mutable",
											"name": "poollevel",
											"nameLocation": "2569:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 1554,
											"src": "2564:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1544,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2564:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1547,
											"mutability": "mutable",
											"name": "poolDeposit",
											"nameLocation": "2594:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 1554,
											"src": "2589:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1546,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2589:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1549,
											"mutability": "mutable",
											"name": "boosterlevel",
											"nameLocation": "2621:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 1554,
											"src": "2616:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1548,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2616:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1551,
											"mutability": "mutable",
											"name": "boosterDeposit",
											"nameLocation": "2649:14:8",
											"nodeType": "VariableDeclaration",
											"scope": 1554,
											"src": "2644:19:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1550,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2644:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1553,
											"mutability": "mutable",
											"name": "registrationTime",
											"nameLocation": "2679:16:8",
											"nodeType": "VariableDeclaration",
											"scope": 1554,
											"src": "2674:21:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1552,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2674:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "User",
									"nameLocation": "2087:4:8",
									"nodeType": "StructDefinition",
									"scope": 2452,
									"src": "2080:625:8",
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.UserIncome",
									"id": 1581,
									"members": [
										{
											"constant": false,
											"id": 1556,
											"mutability": "mutable",
											"name": "totalIncome",
											"nameLocation": "2776:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 1581,
											"src": "2771:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1555,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2771:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1558,
											"mutability": "mutable",
											"name": "sponsorIncome",
											"nameLocation": "2803:13:8",
											"nodeType": "VariableDeclaration",
											"scope": 1581,
											"src": "2798:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1557,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2798:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1560,
											"mutability": "mutable",
											"name": "matrixIncome",
											"nameLocation": "2832:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 1581,
											"src": "2827:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1559,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2827:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1562,
											"mutability": "mutable",
											"name": "levelBoosterIncome",
											"nameLocation": "2860:18:8",
											"nodeType": "VariableDeclaration",
											"scope": 1581,
											"src": "2855:23:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1561,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2855:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1564,
											"mutability": "mutable",
											"name": "levelIncome",
											"nameLocation": "2894:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 1581,
											"src": "2889:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1563,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2889:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1566,
											"mutability": "mutable",
											"name": "royaltyIncome",
											"nameLocation": "2921:13:8",
											"nodeType": "VariableDeclaration",
											"scope": 1581,
											"src": "2916:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1565,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2916:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1568,
											"mutability": "mutable",
											"name": "royaltyIncomeClaimed",
											"nameLocation": "2950:20:8",
											"nodeType": "VariableDeclaration",
											"scope": 1581,
											"src": "2945:25:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1567,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2945:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1570,
											"mutability": "mutable",
											"name": "communityIncome",
											"nameLocation": "3023:15:8",
											"nodeType": "VariableDeclaration",
											"scope": 1581,
											"src": "3018:20:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1569,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3018:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1572,
											"mutability": "mutable",
											"name": "poolIncome",
											"nameLocation": "3103:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 1581,
											"src": "3098:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1571,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3098:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1574,
											"mutability": "mutable",
											"name": "boosterIncome",
											"nameLocation": "3164:13:8",
											"nodeType": "VariableDeclaration",
											"scope": 1581,
											"src": "3159:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1573,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3159:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1576,
											"mutability": "mutable",
											"name": "weeklyContestIncome",
											"nameLocation": "3222:19:8",
											"nodeType": "VariableDeclaration",
											"scope": 1581,
											"src": "3217:24:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1575,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3217:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1578,
											"mutability": "mutable",
											"name": "monthlyRoyalty",
											"nameLocation": "3293:14:8",
											"nodeType": "VariableDeclaration",
											"scope": 1581,
											"src": "3288:19:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1577,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3288:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1580,
											"mutability": "mutable",
											"name": "monthlyTopRoyalty",
											"nameLocation": "3359:17:8",
											"nodeType": "VariableDeclaration",
											"scope": 1581,
											"src": "3354:22:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1579,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3354:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserIncome",
									"nameLocation": "2749:10:8",
									"nodeType": "StructDefinition",
									"scope": 2452,
									"src": "2742:678:8",
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.Income",
									"id": 1592,
									"members": [
										{
											"constant": false,
											"id": 1583,
											"mutability": "mutable",
											"name": "fromUserId",
											"nameLocation": "3458:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 1592,
											"src": "3453:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1582,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3453:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1585,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "3484:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 1592,
											"src": "3479:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1584,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3479:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1587,
											"mutability": "mutable",
											"name": "packageLevel",
											"nameLocation": "3506:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 1592,
											"src": "3501:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1586,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3501:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1589,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "3534:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 1592,
											"src": "3529:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1588,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3529:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1591,
											"mutability": "mutable",
											"name": "incomeType",
											"nameLocation": "3559:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 1592,
											"src": "3554:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1590,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3554:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Income",
									"nameLocation": "3435:6:8",
									"nodeType": "StructDefinition",
									"scope": 2452,
									"src": "3428:309:8",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1596,
									"mutability": "mutable",
									"name": "addressToId",
									"nameLocation": "3783:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "3749:45:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1595,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1593,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3757:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3749:24:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1594,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "3768:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1601,
									"mutability": "mutable",
									"name": "users",
									"nameLocation": "3832:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "3801:36:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$1554_storage_$",
										"typeString": "mapping(uint256 => struct Storage.User)"
									},
									"typeName": {
										"id": 1600,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1597,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "3809:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "3801:21:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$1554_storage_$",
											"typeString": "mapping(uint256 => struct Storage.User)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1599,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1598,
												"name": "User",
												"nameLocations": [
													"3817:4:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1554,
												"src": "3817:4:8"
											},
											"referencedDeclaration": 1554,
											"src": "3817:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_User_$1554_storage_ptr",
												"typeString": "struct Storage.User"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1606,
									"mutability": "mutable",
									"name": "userIncomes",
									"nameLocation": "3881:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "3844:48:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserIncome_$1581_storage_$",
										"typeString": "mapping(uint256 => struct Storage.UserIncome)"
									},
									"typeName": {
										"id": 1605,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1602,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "3852:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "3844:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserIncome_$1581_storage_$",
											"typeString": "mapping(uint256 => struct Storage.UserIncome)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1604,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1603,
												"name": "UserIncome",
												"nameLocations": [
													"3860:10:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1581,
												"src": "3860:10:8"
											},
											"referencedDeclaration": 1581,
											"src": "3860:10:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserIncome_$1581_storage_ptr",
												"typeString": "struct Storage.UserIncome"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1612,
									"mutability": "mutable",
									"name": "incomeHistory",
									"nameLocation": "3965:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "3930:48:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Income_$1592_storage_$dyn_storage_$",
										"typeString": "mapping(uint256 => struct Storage.Income[])"
									},
									"typeName": {
										"id": 1611,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1607,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "3938:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "3930:25:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Income_$1592_storage_$dyn_storage_$",
											"typeString": "mapping(uint256 => struct Storage.Income[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 1609,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1608,
													"name": "Income",
													"nameLocations": [
														"3946:6:8"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1592,
													"src": "3946:6:8"
												},
												"referencedDeclaration": 1592,
												"src": "3946:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Income_$1592_storage_ptr",
													"typeString": "struct Storage.Income"
												}
											},
											"id": 1610,
											"nodeType": "ArrayTypeName",
											"src": "3946:8:8",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Income_$1592_storage_$dyn_storage_ptr",
												"typeString": "struct Storage.Income[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1619,
									"mutability": "mutable",
									"name": "teams",
									"nameLocation": "4035:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "3985:55:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => uint256[]))"
									},
									"typeName": {
										"id": 1618,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1613,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "3993:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "3985:40:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => uint256[]))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1617,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1614,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "4009:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "4001:23:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
												"typeString": "mapping(uint256 => uint256[])"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"baseType": {
													"id": 1615,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4017:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1616,
												"nodeType": "ArrayTypeName",
												"src": "4017:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1623,
									"mutability": "mutable",
									"name": "matrixDirect",
									"nameLocation": "4112:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "4081:43:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1622,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1620,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "4089:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4081:21:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1621,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "4097:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1628,
									"mutability": "mutable",
									"name": "directReferrals",
									"nameLocation": "4200:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "4167:48:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(uint256 => uint256[])"
									},
									"typeName": {
										"id": 1627,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1624,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "4175:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4167:23:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(uint256 => uint256[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 1625,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "4183:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 1626,
											"nodeType": "ArrayTypeName",
											"src": "4183:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "0c28361b1bd0a8a8cd2daf76b402a306e7c3ed3e7bb56820ba81a5edab4636e0",
									"id": 1642,
									"name": "UserJoined",
									"nameLocation": "4230:10:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1630,
												"indexed": true,
												"mutability": "mutable",
												"name": "matrixId",
												"nameLocation": "4255:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "4241:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1629,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4241:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1632,
												"indexed": true,
												"mutability": "mutable",
												"name": "userId",
												"nameLocation": "4280:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "4265:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1631,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4265:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1634,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4304:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "4288:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4288:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1636,
												"indexed": false,
												"mutability": "mutable",
												"name": "parentId",
												"nameLocation": "4317:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "4310:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1635,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4310:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1638,
												"indexed": false,
												"mutability": "mutable",
												"name": "parentAddr",
												"nameLocation": "4335:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "4327:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1640,
												"indexed": false,
												"mutability": "mutable",
												"name": "position",
												"nameLocation": "4353:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "4347:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1639,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4347:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4240:122:8"
									},
									"src": "4224:139:8"
								},
								{
									"anonymous": false,
									"eventSelector": "792af4ddd1dc413b17bea369ca90e7ae463cc96b773c936c70b33d8b08bc096f",
									"id": 1650,
									"name": "RewardSent",
									"nameLocation": "4375:10:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1644,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4402:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "4386:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4386:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1646,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4414:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "4406:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4406:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1648,
												"indexed": false,
												"mutability": "mutable",
												"name": "level",
												"nameLocation": "4429:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "4422:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1647,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4422:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4385:50:8"
									},
									"src": "4369:67:8"
								},
								{
									"anonymous": false,
									"eventSelector": "309bb360e8b69c23937ccc5fb01f9aeeead1c95a99604e175113ff82f2b1723a",
									"id": 1660,
									"name": "Registration",
									"nameLocation": "4466:12:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1652,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4495:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "4479:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4479:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1654,
												"indexed": true,
												"mutability": "mutable",
												"name": "sponsor",
												"nameLocation": "4517:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "4501:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4501:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1656,
												"indexed": true,
												"mutability": "mutable",
												"name": "userId",
												"nameLocation": "4539:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "4526:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1655,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4526:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1658,
												"indexed": false,
												"mutability": "mutable",
												"name": "uplineId",
												"nameLocation": "4552:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "4547:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1657,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4547:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4478:83:8"
									},
									"src": "4460:102:8"
								},
								{
									"anonymous": false,
									"eventSelector": "babb6a363fd9a057996d09882c0b74b710d121707d19eeffd91c51c3171a7c91",
									"id": 1670,
									"name": "Upgrade",
									"nameLocation": "4574:7:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1662,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4598:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "4582:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4582:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1664,
												"indexed": true,
												"mutability": "mutable",
												"name": "userId",
												"nameLocation": "4617:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "4604:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1663,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4604:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1666,
												"indexed": false,
												"mutability": "mutable",
												"name": "packageLevel",
												"nameLocation": "4630:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "4625:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1665,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4625:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1668,
												"indexed": false,
												"mutability": "mutable",
												"name": "depositType",
												"nameLocation": "4651:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "4644:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1667,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4644:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4581:82:8"
									},
									"src": "4568:96:8"
								},
								{
									"anonymous": false,
									"eventSelector": "e17b61d324ce17328f433d0ab62581c0f0aa997312bae80fbdfcd2aa9b91d6e3",
									"id": 1682,
									"name": "IncomeDistributed",
									"nameLocation": "4676:17:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1672,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4710:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1682,
												"src": "4694:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4694:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1674,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4730:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1682,
												"src": "4714:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4714:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1676,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4741:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1682,
												"src": "4736:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1675,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4736:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1678,
												"indexed": false,
												"mutability": "mutable",
												"name": "packageLevel",
												"nameLocation": "4754:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1682,
												"src": "4749:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1677,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4749:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1680,
												"indexed": false,
												"mutability": "mutable",
												"name": "incomeType",
												"nameLocation": "4773:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1682,
												"src": "4768:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1679,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4768:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4693:91:8"
									},
									"src": "4670:115:8"
								},
								{
									"anonymous": false,
									"eventSelector": "5cbb4caf17c10875f33a7c303c1862bcd2fca5faed9a98d1f6e8f41bf720491f",
									"id": 1692,
									"name": "LotteryReward",
									"nameLocation": "4797:13:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1684,
												"indexed": true,
												"mutability": "mutable",
												"name": "winner",
												"nameLocation": "4827:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "4811:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4811:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1686,
												"indexed": true,
												"mutability": "mutable",
												"name": "fromUserId",
												"nameLocation": "4848:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "4835:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1685,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4835:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1688,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4865:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "4860:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1687,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4860:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1690,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "4878:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "4873:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1689,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4873:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4810:78:8"
									},
									"src": "4791:98:8"
								},
								{
									"anonymous": false,
									"eventSelector": "ed2ed4e697131e475ee1946b709d36d74793101a68ffaa7386f98886a32d8d9f",
									"id": 1700,
									"name": "CommunityBonusDistributed",
									"nameLocation": "4901:25:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1694,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4932:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "4927:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1693,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4927:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1696,
												"indexed": false,
												"mutability": "mutable",
												"name": "usersCount",
												"nameLocation": "4945:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "4940:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1695,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4940:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1698,
												"indexed": false,
												"mutability": "mutable",
												"name": "perUser",
												"nameLocation": "4962:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "4957:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1697,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4957:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4926:44:8"
									},
									"src": "4895:76:8"
								},
								{
									"constant": false,
									"functionSelector": "ae4708dc",
									"id": 1711,
									"mutability": "mutable",
									"name": "poolPackages",
									"nameLocation": "5042:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "5028:93:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 1701,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "5028:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1702,
										"nodeType": "ArrayTypeName",
										"src": "5028:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"value": {
										"components": [
											{
												"hexValue": "3735653138",
												"id": 1703,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5058:5:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_75000000000000000000_by_1",
													"typeString": "int_const 75000000000000000000"
												},
												"value": "75e18"
											},
											{
												"hexValue": "333030653138",
												"id": 1704,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5065:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_300000000000000000000_by_1",
													"typeString": "int_const 300000000000000000000"
												},
												"value": "300e18"
											},
											{
												"hexValue": "31323030653138",
												"id": 1705,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5073:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1200000000000000000000_by_1",
													"typeString": "int_const 1200000000000000000000"
												},
												"value": "1200e18"
											},
											{
												"hexValue": "34383030653138",
												"id": 1706,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5082:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_4800000000000000000000_by_1",
													"typeString": "int_const 4800000000000000000000"
												},
												"value": "4800e18"
											},
											{
												"hexValue": "3139323030653138",
												"id": 1707,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5091:8:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_19200000000000000000000_by_1",
													"typeString": "int_const 19200000000000000000000"
												},
												"value": "19200e18"
											},
											{
												"hexValue": "3736383030653138",
												"id": 1708,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5101:8:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_76800000000000000000000_by_1",
													"typeString": "int_const 76800000000000000000000"
												},
												"value": "76800e18"
											},
											{
												"hexValue": "333037323030653138",
												"id": 1709,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5111:9:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_307200000000000000000000_by_1",
													"typeString": "int_const 307200000000000000000000"
												},
												"value": "307200e18"
											}
										],
										"id": 1710,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "5057:64:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint80_$7_memory_ptr",
											"typeString": "uint80[7] memory"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2350268f",
									"id": 1723,
									"mutability": "mutable",
									"name": "glbBoosterPackages",
									"nameLocation": "5142:18:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "5128:105:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 1712,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "5128:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1713,
										"nodeType": "ArrayTypeName",
										"src": "5128:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"value": {
										"components": [
											{
												"hexValue": "313030653138",
												"id": 1714,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5165:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_100000000000000000000_by_1",
													"typeString": "int_const 100000000000000000000"
												},
												"value": "100e18"
											},
											{
												"hexValue": "323030653138",
												"id": 1715,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5173:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_200000000000000000000_by_1",
													"typeString": "int_const 200000000000000000000"
												},
												"value": "200e18"
											},
											{
												"hexValue": "343030653138",
												"id": 1716,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5181:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_400000000000000000000_by_1",
													"typeString": "int_const 400000000000000000000"
												},
												"value": "400e18"
											},
											{
												"hexValue": "383030653138",
												"id": 1717,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5189:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_800000000000000000000_by_1",
													"typeString": "int_const 800000000000000000000"
												},
												"value": "800e18"
											},
											{
												"hexValue": "31363030653138",
												"id": 1718,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5197:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1600000000000000000000_by_1",
													"typeString": "int_const 1600000000000000000000"
												},
												"value": "1600e18"
											},
											{
												"hexValue": "33323030653138",
												"id": 1719,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5206:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_3200000000000000000000_by_1",
													"typeString": "int_const 3200000000000000000000"
												},
												"value": "3200e18"
											},
											{
												"hexValue": "36343030653138",
												"id": 1720,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5215:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_6400000000000000000000_by_1",
													"typeString": "int_const 6400000000000000000000"
												},
												"value": "6400e18"
											},
											{
												"hexValue": "3132383030653138",
												"id": 1721,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5224:8:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_12800000000000000000000_by_1",
													"typeString": "int_const 12800000000000000000000"
												},
												"value": "12800e18"
											}
										],
										"id": 1722,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "5163:70:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint80_$8_memory_ptr",
											"typeString": "uint80[8] memory"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2132d204",
									"id": 1735,
									"mutability": "mutable",
									"name": "minLevelForPool",
									"nameLocation": "5255:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "5240:57:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$7_storage",
										"typeString": "uint256[7]"
									},
									"typeName": {
										"baseType": {
											"id": 1724,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "5240:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1726,
										"length": {
											"hexValue": "37",
											"id": 1725,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "5245:1:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_7_by_1",
												"typeString": "int_const 7"
											},
											"value": "7"
										},
										"nodeType": "ArrayTypeName",
										"src": "5240:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$7_storage_ptr",
											"typeString": "uint256[7]"
										}
									},
									"value": {
										"components": [
											{
												"hexValue": "33",
												"id": 1727,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5274:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_3_by_1",
													"typeString": "int_const 3"
												},
												"value": "3"
											},
											{
												"hexValue": "35",
												"id": 1728,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5277:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_5_by_1",
													"typeString": "int_const 5"
												},
												"value": "5"
											},
											{
												"hexValue": "37",
												"id": 1729,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5280:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_7_by_1",
													"typeString": "int_const 7"
												},
												"value": "7"
											},
											{
												"hexValue": "39",
												"id": 1730,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5283:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_9_by_1",
													"typeString": "int_const 9"
												},
												"value": "9"
											},
											{
												"hexValue": "3131",
												"id": 1731,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5286:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_11_by_1",
													"typeString": "int_const 11"
												},
												"value": "11"
											},
											{
												"hexValue": "3133",
												"id": 1732,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5290:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_13_by_1",
													"typeString": "int_const 13"
												},
												"value": "13"
											},
											{
												"hexValue": "3135",
												"id": 1733,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5294:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_15_by_1",
													"typeString": "int_const 15"
												},
												"value": "15"
											}
										],
										"id": 1734,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "5273:24:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint8_$7_memory_ptr",
											"typeString": "uint8[7] memory"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d0a2fd79",
									"id": 1748,
									"mutability": "mutable",
									"name": "minLevelForGlbBooster",
									"nameLocation": "5319:21:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "5304:64:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$8_storage",
										"typeString": "uint256[8]"
									},
									"typeName": {
										"baseType": {
											"id": 1736,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "5304:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1738,
										"length": {
											"hexValue": "38",
											"id": 1737,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "5309:1:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_8_by_1",
												"typeString": "int_const 8"
											},
											"value": "8"
										},
										"nodeType": "ArrayTypeName",
										"src": "5304:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$8_storage_ptr",
											"typeString": "uint256[8]"
										}
									},
									"value": {
										"components": [
											{
												"hexValue": "34",
												"id": 1739,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5344:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_4_by_1",
													"typeString": "int_const 4"
												},
												"value": "4"
											},
											{
												"hexValue": "35",
												"id": 1740,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5347:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_5_by_1",
													"typeString": "int_const 5"
												},
												"value": "5"
											},
											{
												"hexValue": "36",
												"id": 1741,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5350:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_6_by_1",
													"typeString": "int_const 6"
												},
												"value": "6"
											},
											{
												"hexValue": "37",
												"id": 1742,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5353:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_7_by_1",
													"typeString": "int_const 7"
												},
												"value": "7"
											},
											{
												"hexValue": "38",
												"id": 1743,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5356:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_8_by_1",
													"typeString": "int_const 8"
												},
												"value": "8"
											},
											{
												"hexValue": "39",
												"id": 1744,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5359:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_9_by_1",
													"typeString": "int_const 9"
												},
												"value": "9"
											},
											{
												"hexValue": "3130",
												"id": 1745,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5362:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											{
												"hexValue": "3131",
												"id": 1746,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5365:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_11_by_1",
													"typeString": "int_const 11"
												},
												"value": "11"
											}
										],
										"id": 1747,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "5343:25:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint8_$8_memory_ptr",
											"typeString": "uint8[8] memory"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "956a3228",
									"id": 1761,
									"mutability": "mutable",
									"name": "minPoolForGlbBooster",
									"nameLocation": "5390:20:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "5375:61:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$8_storage",
										"typeString": "uint256[8]"
									},
									"typeName": {
										"baseType": {
											"id": 1749,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "5375:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1751,
										"length": {
											"hexValue": "38",
											"id": 1750,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "5380:1:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_8_by_1",
												"typeString": "int_const 8"
											},
											"value": "8"
										},
										"nodeType": "ArrayTypeName",
										"src": "5375:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$8_storage_ptr",
											"typeString": "uint256[8]"
										}
									},
									"value": {
										"components": [
											{
												"hexValue": "30",
												"id": 1752,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5414:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0"
											},
											{
												"hexValue": "31",
												"id": 1753,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5417:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											{
												"hexValue": "31",
												"id": 1754,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5420:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											{
												"hexValue": "31",
												"id": 1755,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5423:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											{
												"hexValue": "31",
												"id": 1756,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5426:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											{
												"hexValue": "31",
												"id": 1757,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5429:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											{
												"hexValue": "31",
												"id": 1758,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5432:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											{
												"hexValue": "31",
												"id": 1759,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5434:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											}
										],
										"id": 1760,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "5413:23:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint8_$8_memory_ptr",
											"typeString": "uint8[8] memory"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.UserPool",
									"id": 1772,
									"members": [
										{
											"constant": false,
											"id": 1763,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "5479:2:8",
											"nodeType": "VariableDeclaration",
											"scope": 1772,
											"src": "5474:7:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1762,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "5474:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1765,
											"mutability": "mutable",
											"name": "mainid",
											"nameLocation": "5512:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 1772,
											"src": "5507:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1764,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "5507:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1767,
											"mutability": "mutable",
											"name": "poolId",
											"nameLocation": "5534:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 1772,
											"src": "5529:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1766,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "5529:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1769,
											"mutability": "mutable",
											"name": "parentId",
											"nameLocation": "5556:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 1772,
											"src": "5551:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1768,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "5551:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1771,
											"mutability": "mutable",
											"name": "bonusCount",
											"nameLocation": "5582:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 1772,
											"src": "5577:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1770,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "5577:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserPool",
									"nameLocation": "5454:8:8",
									"nodeType": "StructDefinition",
									"scope": 2452,
									"src": "5447:165:8",
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.UserPoolTopup",
									"id": 1777,
									"members": [
										{
											"constant": false,
											"id": 1774,
											"mutability": "mutable",
											"name": "nextPoolAmt",
											"nameLocation": "5661:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 1777,
											"src": "5656:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1773,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "5656:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1776,
											"mutability": "mutable",
											"name": "reTopupAmt",
											"nameLocation": "5695:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 1777,
											"src": "5690:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1775,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "5690:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserPoolTopup",
									"nameLocation": "5631:13:8",
									"nodeType": "StructDefinition",
									"scope": 2452,
									"src": "5624:94:8",
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.UserBooster",
									"id": 1788,
									"members": [
										{
											"constant": false,
											"id": 1779,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "5786:2:8",
											"nodeType": "VariableDeclaration",
											"scope": 1788,
											"src": "5781:7:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1778,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "5781:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1781,
											"mutability": "mutable",
											"name": "poolId",
											"nameLocation": "5805:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 1788,
											"src": "5800:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1780,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "5800:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1783,
											"mutability": "mutable",
											"name": "parentId",
											"nameLocation": "5827:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 1788,
											"src": "5822:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1782,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "5822:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1785,
											"mutability": "mutable",
											"name": "bonusCount",
											"nameLocation": "5853:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 1788,
											"src": "5848:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1784,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "5848:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1787,
											"mutability": "mutable",
											"name": "joinTime",
											"nameLocation": "5880:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 1788,
											"src": "5875:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1786,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "5875:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserBooster",
									"nameLocation": "5758:11:8",
									"nodeType": "StructDefinition",
									"scope": 2452,
									"src": "5751:157:8",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1795,
									"mutability": "mutable",
									"name": "userPooltopup",
									"nameLocation": "6010:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "5952:71:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_UserPoolTopup_$1777_storage_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.UserPoolTopup))"
									},
									"typeName": {
										"id": 1794,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1789,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "5960:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "5952:48:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_UserPoolTopup_$1777_storage_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.UserPoolTopup))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1793,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1790,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "5977:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "5969:30:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserPoolTopup_$1777_storage_$",
												"typeString": "mapping(uint256 => struct Storage.UserPoolTopup)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1792,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1791,
													"name": "UserPoolTopup",
													"nameLocations": [
														"5985:13:8"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1777,
													"src": "5985:13:8"
												},
												"referencedDeclaration": 1777,
												"src": "5985:13:8",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserPoolTopup_$1777_storage_ptr",
													"typeString": "struct Storage.UserPoolTopup"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1802,
									"mutability": "mutable",
									"name": "userPooldtl",
									"nameLocation": "6085:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "6032:64:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_UserPool_$1772_storage_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.UserPool))"
									},
									"typeName": {
										"id": 1801,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1796,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "6040:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "6032:43:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_UserPool_$1772_storage_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.UserPool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1800,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1797,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "6057:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "6049:25:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserPool_$1772_storage_$",
												"typeString": "mapping(uint256 => struct Storage.UserPool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1799,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1798,
													"name": "UserPool",
													"nameLocations": [
														"6065:8:8"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1772,
													"src": "6065:8:8"
												},
												"referencedDeclaration": 1772,
												"src": "6065:8:8",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserPool_$1772_storage_ptr",
													"typeString": "struct Storage.UserPool"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1809,
									"mutability": "mutable",
									"name": "userChildren",
									"nameLocation": "6153:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "6103:62:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => uint256[]))"
									},
									"typeName": {
										"id": 1808,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1803,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "6111:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "6103:40:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => uint256[]))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1807,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1804,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "6127:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "6119:23:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
												"typeString": "mapping(uint256 => uint256[])"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"baseType": {
													"id": 1805,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6135:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1806,
												"nodeType": "ArrayTypeName",
												"src": "6135:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1816,
									"mutability": "mutable",
									"name": "userIdPerPool",
									"nameLocation": "6245:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "6195:63:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => uint256[]))"
									},
									"typeName": {
										"id": 1815,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1810,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "6203:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "6195:40:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => uint256[]))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1814,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1811,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "6219:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "6211:23:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
												"typeString": "mapping(uint256 => uint256[])"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"baseType": {
													"id": 1812,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6227:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1813,
												"nodeType": "ArrayTypeName",
												"src": "6227:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1821,
									"mutability": "mutable",
									"name": "poolUsers",
									"nameLocation": "6330:9:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "6297:42:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(uint256 => uint256[])"
									},
									"typeName": {
										"id": 1820,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1817,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "6305:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "6297:23:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(uint256 => uint256[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 1818,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "6313:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 1819,
											"nodeType": "ArrayTypeName",
											"src": "6313:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1827,
									"mutability": "mutable",
									"name": "userHasPool",
									"nameLocation": "6424:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "6376:59:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => bool))"
									},
									"typeName": {
										"id": 1826,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1822,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "6384:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "6376:38:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1825,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1823,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "6400:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "6392:21:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
												"typeString": "mapping(uint256 => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1824,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "6408:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1834,
									"mutability": "mutable",
									"name": "userBoosterdtl",
									"nameLocation": "6539:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "6483:70:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_UserBooster_$1788_storage_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.UserBooster))"
									},
									"typeName": {
										"id": 1833,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1828,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "6491:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "6483:46:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_UserBooster_$1788_storage_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.UserBooster))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1832,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1829,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "6508:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "6500:28:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserBooster_$1788_storage_$",
												"typeString": "mapping(uint256 => struct Storage.UserBooster)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1831,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1830,
													"name": "UserBooster",
													"nameLocations": [
														"6516:11:8"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1788,
													"src": "6516:11:8"
												},
												"referencedDeclaration": 1788,
												"src": "6516:11:8",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserBooster_$1788_storage_ptr",
													"typeString": "struct Storage.UserBooster"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1841,
									"mutability": "mutable",
									"name": "userBoosterChildren",
									"nameLocation": "6611:19:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "6560:70:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => uint256[]))"
									},
									"typeName": {
										"id": 1840,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1835,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "6568:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "6560:41:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => uint256[]))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1839,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1836,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "6585:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "6577:23:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
												"typeString": "mapping(uint256 => uint256[])"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"baseType": {
													"id": 1837,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6593:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1838,
												"nodeType": "ArrayTypeName",
												"src": "6593:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1846,
									"mutability": "mutable",
									"name": "boosterUsers",
									"nameLocation": "6670:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "6637:45:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(uint256 => uint256[])"
									},
									"typeName": {
										"id": 1845,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1842,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "6645:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "6637:23:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(uint256 => uint256[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 1843,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "6653:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 1844,
											"nodeType": "ArrayTypeName",
											"src": "6653:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1852,
									"mutability": "mutable",
									"name": "userHasbooster",
									"nameLocation": "6770:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "6722:62:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => bool))"
									},
									"typeName": {
										"id": 1851,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1847,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "6730:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "6722:38:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1850,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1848,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "6746:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "6738:21:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
												"typeString": "mapping(uint256 => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1849,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "6754:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"functionSelector": "76f5f700",
									"id": 1855,
									"mutability": "constant",
									"name": "WEEK_DURATION",
									"nameLocation": "6845:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "6824:43:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1853,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "6824:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "37",
										"id": 1854,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6861:6:8",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_604800_by_1",
											"typeString": "int_const 604800"
										},
										"value": "7"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "ebe0ff15",
									"id": 1858,
									"mutability": "constant",
									"name": "WeeklyCapping",
									"nameLocation": "6898:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "6877:44:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1856,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "6877:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030653138",
										"id": 1857,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6914:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000"
										},
										"value": "1000e18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ca8e9121",
									"id": 1861,
									"mutability": "mutable",
									"name": "currentWeeklyRound",
									"nameLocation": "6945:18:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "6933:34:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1859,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "6933:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1860,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6966:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fddc806f",
									"id": 1864,
									"mutability": "mutable",
									"name": "currentWeeklyStartTime",
									"nameLocation": "6986:22:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "6974:38:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1862,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "6974:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1863,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7011:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3080b5bc",
									"id": 1867,
									"mutability": "mutable",
									"name": "WeeklyTotalReward",
									"nameLocation": "7033:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "7021:33:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1865,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "7021:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1866,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7053:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.WeeklyContest",
									"id": 1886,
									"members": [
										{
											"constant": false,
											"id": 1869,
											"mutability": "mutable",
											"name": "roundId",
											"nameLocation": "7107:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 1886,
											"src": "7102:12:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1868,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7102:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1871,
											"mutability": "mutable",
											"name": "totalReward",
											"nameLocation": "7134:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 1886,
											"src": "7129:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1870,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7129:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1873,
											"mutability": "mutable",
											"name": "totalUsers",
											"nameLocation": "7161:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 1886,
											"src": "7156:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1872,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7156:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1875,
											"mutability": "mutable",
											"name": "perUserReward",
											"nameLocation": "7187:13:8",
											"nodeType": "VariableDeclaration",
											"scope": 1886,
											"src": "7182:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1874,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7182:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1877,
											"mutability": "mutable",
											"name": "claimedCount",
											"nameLocation": "7216:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 1886,
											"src": "7211:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1876,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7211:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1879,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "7244:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 1886,
											"src": "7239:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1878,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7239:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1881,
											"mutability": "mutable",
											"name": "endTime",
											"nameLocation": "7269:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 1886,
											"src": "7264:12:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1880,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7264:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1883,
											"mutability": "mutable",
											"name": "carryForward",
											"nameLocation": "7292:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 1886,
											"src": "7287:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1882,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7287:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1885,
											"mutability": "mutable",
											"name": "closed",
											"nameLocation": "7320:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 1886,
											"src": "7315:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1884,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "7315:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "WeeklyContest",
									"nameLocation": "7077:13:8",
									"nodeType": "StructDefinition",
									"scope": 2452,
									"src": "7070:264:8",
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.weeklyUser",
									"id": 1899,
									"members": [
										{
											"constant": false,
											"id": 1888,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "7378:2:8",
											"nodeType": "VariableDeclaration",
											"scope": 1899,
											"src": "7373:7:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1887,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7373:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1890,
											"mutability": "mutable",
											"name": "joinTime",
											"nameLocation": "7396:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 1899,
											"src": "7391:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1889,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7391:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1892,
											"mutability": "mutable",
											"name": "roundId",
											"nameLocation": "7420:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 1899,
											"src": "7415:12:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1891,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7415:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1894,
											"mutability": "mutable",
											"name": "claimTime",
											"nameLocation": "7444:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 1899,
											"src": "7439:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1893,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7439:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1896,
											"mutability": "mutable",
											"name": "isClaimed",
											"nameLocation": "7469:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 1899,
											"src": "7464:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1895,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "7464:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1898,
											"mutability": "mutable",
											"name": "isQualified",
											"nameLocation": "7495:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 1899,
											"src": "7490:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1897,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "7490:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "weeklyUser",
									"nameLocation": "7352:10:8",
									"nodeType": "StructDefinition",
									"scope": 2452,
									"src": "7345:169:8",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1904,
									"mutability": "mutable",
									"name": "weeklyContestdtl",
									"nameLocation": "7561:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "7520:57:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_WeeklyContest_$1886_storage_$",
										"typeString": "mapping(uint256 => struct Storage.WeeklyContest)"
									},
									"typeName": {
										"id": 1903,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1900,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "7529:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "7520:31:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_WeeklyContest_$1886_storage_$",
											"typeString": "mapping(uint256 => struct Storage.WeeklyContest)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1902,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1901,
												"name": "WeeklyContest",
												"nameLocations": [
													"7537:13:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1886,
												"src": "7537:13:8"
											},
											"referencedDeclaration": 1886,
											"src": "7537:13:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_WeeklyContest_$1886_storage_ptr",
												"typeString": "struct Storage.WeeklyContest"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1909,
									"mutability": "mutable",
									"name": "weeklyQualifiedUsers",
									"nameLocation": "7635:20:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "7612:43:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(uint256 => uint256[])"
									},
									"typeName": {
										"id": 1908,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1905,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "7620:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "7612:22:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(uint256 => uint256[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 1906,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7627:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 1907,
											"nodeType": "ArrayTypeName",
											"src": "7627:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1916,
									"mutability": "mutable",
									"name": "weeklyUserdtl",
									"nameLocation": "7739:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "7685:67:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_weeklyUser_$1899_storage_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.weeklyUser))"
									},
									"typeName": {
										"id": 1915,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1910,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "7693:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "7685:44:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_weeklyUser_$1899_storage_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.weeklyUser))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1914,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1911,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7709:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "7701:27:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_weeklyUser_$1899_storage_$",
												"typeString": "mapping(uint256 => struct Storage.weeklyUser)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1913,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1912,
													"name": "weeklyUser",
													"nameLocations": [
														"7717:10:8"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1899,
													"src": "7717:10:8"
												},
												"referencedDeclaration": 1899,
												"src": "7717:10:8",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_weeklyUser_$1899_storage_ptr",
													"typeString": "struct Storage.weeklyUser"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1923,
									"mutability": "mutable",
									"name": "weeklyUserDirects",
									"nameLocation": "7836:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "7786:67:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => uint256[]))"
									},
									"typeName": {
										"id": 1922,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1917,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "7794:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "7786:40:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => uint256[]))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1921,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1918,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7810:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "7802:23:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
												"typeString": "mapping(uint256 => uint256[])"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"baseType": {
													"id": 1919,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7818:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1920,
												"nodeType": "ArrayTypeName",
												"src": "7818:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "ca8a78d1841a8dafbb8ff53c869b3fa9a69abd051022178024f84b680ffd2e3c",
									"id": 1939,
									"name": "WeeklyClosed",
									"nameLocation": "7912:12:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1925,
												"indexed": false,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "7930:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1939,
												"src": "7925:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1924,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7925:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1927,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalUsers",
												"nameLocation": "7944:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1939,
												"src": "7939:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1926,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7939:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1929,
												"indexed": false,
												"mutability": "mutable",
												"name": "perUserReward",
												"nameLocation": "7961:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1939,
												"src": "7956:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1928,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7956:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1931,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalReward",
												"nameLocation": "7981:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1939,
												"src": "7976:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1930,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7976:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1933,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalDistributed",
												"nameLocation": "7999:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 1939,
												"src": "7994:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1932,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7994:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1935,
												"indexed": false,
												"mutability": "mutable",
												"name": "leftoverReward",
												"nameLocation": "8022:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1939,
												"src": "8017:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1934,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8017:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1937,
												"indexed": false,
												"mutability": "mutable",
												"name": "endTime",
												"nameLocation": "8043:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1939,
												"src": "8038:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1936,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8038:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7924:127:8"
									},
									"src": "7906:146:8"
								},
								{
									"anonymous": false,
									"eventSelector": "96ee4f374d0394c5383b347dc3b7ec04a1eceddcd2e25521157bce21c42b24d5",
									"id": 1949,
									"name": "WeeklyRewardClaim",
									"nameLocation": "8064:17:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1941,
												"indexed": false,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "8087:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "8082:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1940,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8082:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1943,
												"indexed": false,
												"mutability": "mutable",
												"name": "userId",
												"nameLocation": "8101:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "8096:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1942,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8096:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1945,
												"indexed": false,
												"mutability": "mutable",
												"name": "perUserReward",
												"nameLocation": "8114:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "8109:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1944,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8109:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1947,
												"indexed": false,
												"mutability": "mutable",
												"name": "claimTime",
												"nameLocation": "8135:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "8130:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1946,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8130:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8081:64:8"
									},
									"src": "8058:88:8"
								},
								{
									"anonymous": false,
									"eventSelector": "360cb96d3e85b4fc299ddfa9a572850fc70961c86f0f1703f033143b0e5a82cf",
									"id": 1957,
									"name": "WeeklyContestQualified",
									"nameLocation": "8158:22:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1951,
												"indexed": false,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "8186:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1957,
												"src": "8181:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1950,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8181:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1953,
												"indexed": false,
												"mutability": "mutable",
												"name": "userId",
												"nameLocation": "8200:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1957,
												"src": "8195:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1952,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8195:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1955,
												"indexed": false,
												"mutability": "mutable",
												"name": "joinTime",
												"nameLocation": "8213:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1957,
												"src": "8208:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1954,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8208:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8180:42:8"
									},
									"src": "8152:71:8"
								},
								{
									"constant": true,
									"functionSelector": "2a891534",
									"id": 1960,
									"mutability": "constant",
									"name": "MONTH_DURATION",
									"nameLocation": "8301:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "8280:45:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1958,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "8280:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3330",
										"id": 1959,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8318:7:8",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2592000_by_1",
											"typeString": "int_const 2592000"
										},
										"value": "30"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "c8df2908",
									"id": 1963,
									"mutability": "constant",
									"name": "monthlyCapping",
									"nameLocation": "8353:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "8332:46:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1961,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "8332:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130303030653138",
										"id": 1962,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8370:8:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000000"
										},
										"value": "10000e18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c9ed0708",
									"id": 1966,
									"mutability": "mutable",
									"name": "currentMonthlyRound",
									"nameLocation": "8403:19:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "8391:35:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1964,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "8391:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1965,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8425:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e898fc38",
									"id": 1969,
									"mutability": "mutable",
									"name": "currentMonthlyStartTime",
									"nameLocation": "8445:23:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "8433:39:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1967,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "8433:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1968,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8471:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a59d17d1",
									"id": 1972,
									"mutability": "mutable",
									"name": "monthlyTotalReward",
									"nameLocation": "8491:18:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "8479:34:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1970,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "8479:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1971,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8512:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.monthlyRoyalty",
									"id": 1991,
									"members": [
										{
											"constant": false,
											"id": 1974,
											"mutability": "mutable",
											"name": "roundId",
											"nameLocation": "8560:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 1991,
											"src": "8555:12:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1973,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8555:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1976,
											"mutability": "mutable",
											"name": "totalReward",
											"nameLocation": "8587:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 1991,
											"src": "8582:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1975,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8582:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1978,
											"mutability": "mutable",
											"name": "totalUsers",
											"nameLocation": "8614:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 1991,
											"src": "8609:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1977,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8609:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1980,
											"mutability": "mutable",
											"name": "perUserReward",
											"nameLocation": "8640:13:8",
											"nodeType": "VariableDeclaration",
											"scope": 1991,
											"src": "8635:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1979,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8635:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1982,
											"mutability": "mutable",
											"name": "claimedCount",
											"nameLocation": "8669:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 1991,
											"src": "8664:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1981,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8664:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1984,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "8697:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 1991,
											"src": "8692:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1983,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8692:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1986,
											"mutability": "mutable",
											"name": "endTime",
											"nameLocation": "8722:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 1991,
											"src": "8717:12:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1985,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8717:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1988,
											"mutability": "mutable",
											"name": "carryForward",
											"nameLocation": "8745:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 1991,
											"src": "8740:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1987,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8740:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1990,
											"mutability": "mutable",
											"name": "closed",
											"nameLocation": "8773:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 1991,
											"src": "8768:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1989,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "8768:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "monthlyRoyalty",
									"nameLocation": "8529:14:8",
									"nodeType": "StructDefinition",
									"scope": 2452,
									"src": "8522:265:8",
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.monthlyRoyaltyUser",
									"id": 2006,
									"members": [
										{
											"constant": false,
											"id": 1993,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "8836:2:8",
											"nodeType": "VariableDeclaration",
											"scope": 2006,
											"src": "8831:7:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1992,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8831:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1995,
											"mutability": "mutable",
											"name": "joinTime",
											"nameLocation": "8854:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 2006,
											"src": "8849:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1994,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8849:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1997,
											"mutability": "mutable",
											"name": "qualifiedRoundId",
											"nameLocation": "8878:16:8",
											"nodeType": "VariableDeclaration",
											"scope": 2006,
											"src": "8873:21:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1996,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8873:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1999,
											"mutability": "mutable",
											"name": "claimTime",
											"nameLocation": "8911:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 2006,
											"src": "8906:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1998,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8906:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2003,
											"mutability": "mutable",
											"name": "isClaimed",
											"nameLocation": "8953:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 2006,
											"src": "8931:31:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
												"typeString": "mapping(uint256 => bool)"
											},
											"typeName": {
												"id": 2002,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 2000,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8939:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "8931:21:8",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
													"typeString": "mapping(uint256 => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 2001,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8947:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2005,
											"mutability": "mutable",
											"name": "isQualified",
											"nameLocation": "8979:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 2006,
											"src": "8974:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2004,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "8974:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "monthlyRoyaltyUser",
									"nameLocation": "8802:18:8",
									"nodeType": "StructDefinition",
									"scope": 2452,
									"src": "8795:203:8",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2011,
									"mutability": "mutable",
									"name": "monthlyRoyaltydtl",
									"nameLocation": "9046:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "9004:59:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_monthlyRoyalty_$1991_storage_$",
										"typeString": "mapping(uint256 => struct Storage.monthlyRoyalty)"
									},
									"typeName": {
										"id": 2010,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2007,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "9013:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "9004:32:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_monthlyRoyalty_$1991_storage_$",
											"typeString": "mapping(uint256 => struct Storage.monthlyRoyalty)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2009,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2008,
												"name": "monthlyRoyalty",
												"nameLocations": [
													"9021:14:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1991,
												"src": "9021:14:8"
											},
											"referencedDeclaration": 1991,
											"src": "9021:14:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_monthlyRoyalty_$1991_storage_ptr",
												"typeString": "struct Storage.monthlyRoyalty"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2014,
									"mutability": "mutable",
									"name": "monthlyQualifiedUsers",
									"nameLocation": "9105:21:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "9098:28:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 2012,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "9098:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 2013,
										"nodeType": "ArrayTypeName",
										"src": "9098:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2019,
									"mutability": "mutable",
									"name": "monthlyRoyaltyUserdtl",
									"nameLocation": "9201:21:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "9156:66:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_monthlyRoyaltyUser_$2006_storage_$",
										"typeString": "mapping(uint256 => struct Storage.monthlyRoyaltyUser)"
									},
									"typeName": {
										"id": 2018,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2015,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "9164:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "9156:35:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_monthlyRoyaltyUser_$2006_storage_$",
											"typeString": "mapping(uint256 => struct Storage.monthlyRoyaltyUser)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2017,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2016,
												"name": "monthlyRoyaltyUser",
												"nameLocations": [
													"9172:18:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2006,
												"src": "9172:18:8"
											},
											"referencedDeclaration": 2006,
											"src": "9172:18:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2006_storage_ptr",
												"typeString": "struct Storage.monthlyRoyaltyUser"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2024,
									"mutability": "mutable",
									"name": "monthlyUserDirects",
									"nameLocation": "9262:18:8",
									"nodeType": "VariableDeclaration",
									"scope": 2452,
									"src": "9229:51:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(uint256 => uint256[])"
									},
									"typeName": {
										"id": 2023,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2020,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "9237:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "9229:23:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(uint256 => uint256[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 2021,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "9245:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 2022,
											"nodeType": "ArrayTypeName",
											"src": "9245:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "1b674071adfa65db18518e4868ae7d5f54dd365c69e0babe9b704cbade8fe4bb",
									"id": 2040,
									"name": "MonthlyClosed",
									"nameLocation": "9336:13:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2026,
												"indexed": false,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "9355:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2040,
												"src": "9350:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2025,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9350:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2028,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalUsers",
												"nameLocation": "9369:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2040,
												"src": "9364:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2027,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9364:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2030,
												"indexed": false,
												"mutability": "mutable",
												"name": "perUserReward",
												"nameLocation": "9386:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 2040,
												"src": "9381:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2029,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9381:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2032,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalReward",
												"nameLocation": "9406:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2040,
												"src": "9401:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2031,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9401:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2034,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalDistributed",
												"nameLocation": "9424:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 2040,
												"src": "9419:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2033,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9419:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2036,
												"indexed": false,
												"mutability": "mutable",
												"name": "leftoverReward",
												"nameLocation": "9447:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 2040,
												"src": "9442:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2035,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9442:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2038,
												"indexed": false,
												"mutability": "mutable",
												"name": "endTime",
												"nameLocation": "9468:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2040,
												"src": "9463:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2037,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9463:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9349:127:8"
									},
									"src": "9330:147:8"
								},
								{
									"anonymous": false,
									"eventSelector": "8211032682f8fd8be8ff252e0a106cdb6ad4b10427152b4d93c2bc9a1f11c3c2",
									"id": 2050,
									"name": "MonthlyRewardClaim",
									"nameLocation": "9489:18:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2042,
												"indexed": false,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "9513:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "9508:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2041,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9508:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2044,
												"indexed": false,
												"mutability": "mutable",
												"name": "userId",
												"nameLocation": "9527:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "9522:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2043,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9522:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2046,
												"indexed": false,
												"mutability": "mutable",
												"name": "perUserReward",
												"nameLocation": "9540:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "9535:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2045,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9535:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2048,
												"indexed": false,
												"mutability": "mutable",
												"name": "claimTime",
												"nameLocation": "9561:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "9556:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2047,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9556:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9507:64:8"
									},
									"src": "9483:89:8"
								},
								{
									"anonymous": false,
									"eventSelector": "f6a9043e8a94fb100c6ffccc7e8e52a17b095ff05b25fa8c57388532b44c3fc4",
									"id": 2058,
									"name": "MonthlyContestQualified",
									"nameLocation": "9584:23:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2052,
												"indexed": false,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "9613:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "9608:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2051,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9608:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2054,
												"indexed": false,
												"mutability": "mutable",
												"name": "userId",
												"nameLocation": "9627:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "9622:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2053,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9622:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2056,
												"indexed": false,
												"mutability": "mutable",
												"name": "joinTime",
												"nameLocation": "9640:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "9635:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2055,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9635:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9607:42:8"
									},
									"src": "9578:72:8"
								},
								{
									"body": {
										"id": 2061,
										"nodeType": "Block",
										"src": "9675:17:8",
										"statements": []
									},
									"id": 2062,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2059,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9672:2:8"
									},
									"returnParameters": {
										"id": 2060,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9675:0:8"
									},
									"scope": 2452,
									"src": "9661:31:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2111,
										"nodeType": "Block",
										"src": "9761:564:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2068,
																"name": "creatorWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1424,
																"src": "9776:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2071,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9801:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9793:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2069,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9793:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 2072,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9793:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9776:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "666565206164647273206e6f7420736574",
															"id": 2074,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9804:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24633079efecc28c5aede41112c3990abdd9e7b0bb26db3b9a203d1a67268b03",
																"typeString": "literal_string \"fee addrs not set\""
															},
															"value": "fee addrs not set"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24633079efecc28c5aede41112c3990abdd9e7b0bb26db3b9a203d1a67268b03",
																"typeString": "literal_string \"fee addrs not set\""
															}
														],
														"id": 2067,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9768:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9768:56:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2076,
												"nodeType": "ExpressionStatement",
												"src": "9768:56:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2080,
															"name": "creatorWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1424,
															"src": "9940:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2081,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2064,
															"src": "9955:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2077,
															"name": "usdt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1422,
															"src": "9922:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														"id": 2079,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9927:12:8",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 277,
														"src": "9922:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$232_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9922:41:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2083,
												"nodeType": "ExpressionStatement",
												"src": "9922:41:8"
											},
											{
												"assignments": [
													2086
												],
												"declarations": [
													{
														"constant": false,
														"id": 2086,
														"mutability": "mutable",
														"name": "creatorIncome",
														"nameLocation": "10042:13:8",
														"nodeType": "VariableDeclaration",
														"scope": 2111,
														"src": "10023:32:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserIncome_$1581_storage_ptr",
															"typeString": "struct Storage.UserIncome"
														},
														"typeName": {
															"id": 2085,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2084,
																"name": "UserIncome",
																"nameLocations": [
																	"10023:10:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1581,
																"src": "10023:10:8"
															},
															"referencedDeclaration": 1581,
															"src": "10023:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserIncome_$1581_storage_ptr",
																"typeString": "struct Storage.UserIncome"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2090,
												"initialValue": {
													"baseExpression": {
														"id": 2087,
														"name": "userIncomes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1606,
														"src": "10058:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserIncome_$1581_storage_$",
															"typeString": "mapping(uint256 => struct Storage.UserIncome storage ref)"
														}
													},
													"id": 2089,
													"indexExpression": {
														"id": 2088,
														"name": "defaultRefId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1430,
														"src": "10070:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10058:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserIncome_$1581_storage",
														"typeString": "struct Storage.UserIncome storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10023:60:8"
											},
											{
												"expression": {
													"id": 2095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2091,
															"name": "creatorIncome",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2086,
															"src": "10090:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserIncome_$1581_storage_ptr",
																"typeString": "struct Storage.UserIncome storage pointer"
															}
														},
														"id": 2093,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "10104:11:8",
														"memberName": "totalIncome",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1556,
														"src": "10090:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2094,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2064,
														"src": "10119:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10090:36:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2096,
												"nodeType": "ExpressionStatement",
												"src": "10090:36:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10198:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"id": 2103,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2064,
																	"src": "10218:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 2104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10250:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"expression": {
																		"id": 2105,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "10273:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10279:9:8",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "10273:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "35",
																	"id": 2107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10311:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	},
																	"value": "5"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	}
																],
																"id": 2101,
																"name": "Income",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1592,
																"src": "10168:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Income_$1592_storage_ptr_$",
																	"typeString": "type(struct Storage.Income storage pointer)"
																}
															},
															"id": 2108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"10186:10:8",
																"10210:6:8",
																"10236:12:8",
																"10262:9:8",
																"10299:10:8"
															],
															"names": [
																"fromUserId",
																"amount",
																"packageLevel",
																"timestamp",
																"incomeType"
															],
															"nodeType": "FunctionCall",
															"src": "10168:152:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Income_$1592_memory_ptr",
																"typeString": "struct Storage.Income memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Income_$1592_memory_ptr",
																"typeString": "struct Storage.Income memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 2097,
																"name": "incomeHistory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1612,
																"src": "10135:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Income_$1592_storage_$dyn_storage_$",
																	"typeString": "mapping(uint256 => struct Storage.Income storage ref[] storage ref)"
																}
															},
															"id": 2099,
															"indexExpression": {
																"id": 2098,
																"name": "defaultRefId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1430,
																"src": "10149:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10135:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Income_$1592_storage_$dyn_storage",
																"typeString": "struct Storage.Income storage ref[] storage ref"
															}
														},
														"id": 2100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10163:4:8",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "10135:32:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Income_$1592_storage_$dyn_storage_ptr_$_t_struct$_Income_$1592_storage_$returns$__$attached_to$_t_array$_t_struct$_Income_$1592_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct Storage.Income storage ref[] storage pointer,struct Storage.Income storage ref)"
														}
													},
													"id": 2109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10135:186:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2110,
												"nodeType": "ExpressionStatement",
												"src": "10135:186:8"
											}
										]
									},
									"id": 2112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_sendToCreator",
									"nameLocation": "9723:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2064,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "9743:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2112,
												"src": "9738:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2063,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9738:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9737:14:8"
									},
									"returnParameters": {
										"id": 2066,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9761:0:8"
									},
									"scope": 2452,
									"src": "9714:611:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2303,
										"nodeType": "Block",
										"src": "10449:1816:8",
										"statements": [
											{
												"assignments": [
													2127
												],
												"declarations": [
													{
														"constant": false,
														"id": 2127,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "10469:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 2303,
														"src": "10456:17:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$1554_storage_ptr",
															"typeString": "struct Storage.User"
														},
														"typeName": {
															"id": 2126,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2125,
																"name": "User",
																"nameLocations": [
																	"10456:4:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1554,
																"src": "10456:4:8"
															},
															"referencedDeclaration": 1554,
															"src": "10456:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$1554_storage_ptr",
																"typeString": "struct Storage.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2131,
												"initialValue": {
													"baseExpression": {
														"id": 2128,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1601,
														"src": "10476:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$1554_storage_$",
															"typeString": "mapping(uint256 => struct Storage.User storage ref)"
														}
													},
													"id": 2130,
													"indexExpression": {
														"id": 2129,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2114,
														"src": "10482:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10476:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$1554_storage",
														"typeString": "struct Storage.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10456:34:8"
											},
											{
												"assignments": [
													2133
												],
												"declarations": [
													{
														"constant": false,
														"id": 2133,
														"mutability": "mutable",
														"name": "userAddress",
														"nameLocation": "10505:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 2303,
														"src": "10497:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10497:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2136,
												"initialValue": {
													"expression": {
														"id": 2134,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2127,
														"src": "10519:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$1554_storage_ptr",
															"typeString": "struct Storage.User storage pointer"
														}
													},
													"id": 2135,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "10524:7:8",
													"memberName": "account",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1521,
													"src": "10519:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10497:34:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2138,
																"name": "userAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2133,
																"src": "10546:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2141,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10569:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10561:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2139,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10561:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 2142,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10561:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10546:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642075736572",
															"id": 2144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10573:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d34e7942b50fb081b1a15c529d5017673bd90fd52cb4962fa3d50206a7121a1b",
																"typeString": "literal_string \"Invalid user\""
															},
															"value": "Invalid user"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d34e7942b50fb081b1a15c529d5017673bd90fd52cb4962fa3d50206a7121a1b",
																"typeString": "literal_string \"Invalid user\""
															}
														],
														"id": 2137,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10538:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10538:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2146,
												"nodeType": "ExpressionStatement",
												"src": "10538:50:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2148,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2118,
																"src": "10603:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2149,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10613:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10603:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f20616d6f756e74",
															"id": 2151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10616:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4",
																"typeString": "literal_string \"Zero amount\""
															},
															"value": "Zero amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4",
																"typeString": "literal_string \"Zero amount\""
															}
														],
														"id": 2147,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10595:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10595:35:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2153,
												"nodeType": "ExpressionStatement",
												"src": "10595:35:8"
											},
											{
												"assignments": [
													2156
												],
												"declarations": [
													{
														"constant": false,
														"id": 2156,
														"mutability": "mutable",
														"name": "income",
														"nameLocation": "10765:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 2303,
														"src": "10746:25:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserIncome_$1581_storage_ptr",
															"typeString": "struct Storage.UserIncome"
														},
														"typeName": {
															"id": 2155,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2154,
																"name": "UserIncome",
																"nameLocations": [
																	"10746:10:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1581,
																"src": "10746:10:8"
															},
															"referencedDeclaration": 1581,
															"src": "10746:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserIncome_$1581_storage_ptr",
																"typeString": "struct Storage.UserIncome"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2160,
												"initialValue": {
													"baseExpression": {
														"id": 2157,
														"name": "userIncomes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1606,
														"src": "10774:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserIncome_$1581_storage_$",
															"typeString": "mapping(uint256 => struct Storage.UserIncome storage ref)"
														}
													},
													"id": 2159,
													"indexExpression": {
														"id": 2158,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2114,
														"src": "10786:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10774:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserIncome_$1581_storage",
														"typeString": "struct Storage.UserIncome storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10746:48:8"
											},
											{
												"expression": {
													"id": 2165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2161,
															"name": "income",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2156,
															"src": "10801:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserIncome_$1581_storage_ptr",
																"typeString": "struct Storage.UserIncome storage pointer"
															}
														},
														"id": 2163,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "10808:11:8",
														"memberName": "totalIncome",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1556,
														"src": "10801:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2164,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2118,
														"src": "10823:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10801:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2166,
												"nodeType": "ExpressionStatement",
												"src": "10801:29:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2167,
														"name": "_incomeType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2122,
														"src": "10909:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2168,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10924:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "10909:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2178,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2176,
															"name": "_incomeType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2122,
															"src": "10974:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "32",
															"id": 2177,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10989:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "10974:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2185,
																"name": "_incomeType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2122,
																"src": "11038:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "33",
																"id": 2186,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11053:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"src": "11038:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2196,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2194,
																	"name": "_incomeType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2122,
																	"src": "11108:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11123:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11108:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2203,
																		"name": "_incomeType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2122,
																		"src": "11312:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "38",
																		"id": 2204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11327:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	"src": "11312:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2214,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2212,
																			"name": "_incomeType",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2122,
																			"src": "11384:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "3130",
																			"id": 2213,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11399:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "11384:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2223,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2221,
																				"name": "_incomeType",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2122,
																				"src": "11447:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "3131",
																				"id": 2222,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11462:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_11_by_1",
																					"typeString": "int_const 11"
																				},
																				"value": "11"
																			},
																			"src": "11447:17:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2232,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2230,
																					"name": "_incomeType",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2122,
																					"src": "11513:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"hexValue": "3132",
																					"id": 2231,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "11528:2:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_12_by_1",
																						"typeString": "int_const 12"
																					},
																					"value": "12"
																				},
																				"src": "11513:17:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseBody": {
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2241,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2239,
																						"name": "_incomeType",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2122,
																						"src": "11585:11:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "3133",
																						"id": 2240,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11600:2:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_13_by_1",
																							"typeString": "int_const 13"
																						},
																						"value": "13"
																					},
																					"src": "11585:17:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2250,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2248,
																							"name": "_incomeType",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2122,
																							"src": "11652:11:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "3134",
																							"id": 2249,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "11667:2:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_14_by_1",
																								"typeString": "int_const 14"
																							},
																							"value": "14"
																						},
																						"src": "11652:17:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": {
																						"expression": {
																							"arguments": [
																								{
																									"hexValue": "556e6b6e6f776e20696e636f6d652074797065",
																									"id": 2258,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "string",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "11725:21:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_stringliteral_362cd1cd93870aa625050dba699b71f0dd1830454709724c3f6a93954bf62033",
																										"typeString": "literal_string \"Unknown income type\""
																									},
																									"value": "Unknown income type"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_stringliteral_362cd1cd93870aa625050dba699b71f0dd1830454709724c3f6a93954bf62033",
																										"typeString": "literal_string \"Unknown income type\""
																									}
																								],
																								"id": 2257,
																								"name": "revert",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [
																									4294967277,
																									4294967277
																								],
																								"referencedDeclaration": 4294967277,
																								"src": "11718:6:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																									"typeString": "function (string memory) pure"
																								}
																							},
																							"id": 2259,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "11718:29:8",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_tuple$__$",
																								"typeString": "tuple()"
																							}
																						},
																						"id": 2260,
																						"nodeType": "ExpressionStatement",
																						"src": "11718:29:8"
																					},
																					"id": 2261,
																					"nodeType": "IfStatement",
																					"src": "11648:99:8",
																					"trueBody": {
																						"expression": {
																							"id": 2255,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftHandSide": {
																								"expression": {
																									"id": 2251,
																									"name": "income",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2156,
																									"src": "11671:6:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_UserIncome_$1581_storage_ptr",
																										"typeString": "struct Storage.UserIncome storage pointer"
																									}
																								},
																								"id": 2253,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": true,
																								"memberLocation": "11678:17:8",
																								"memberName": "monthlyTopRoyalty",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1580,
																								"src": "11671:24:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "Assignment",
																							"operator": "+=",
																							"rightHandSide": {
																								"id": 2254,
																								"name": "_amount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2118,
																								"src": "11699:7:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "11671:35:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 2256,
																						"nodeType": "ExpressionStatement",
																						"src": "11671:35:8"
																					}
																				},
																				"id": 2262,
																				"nodeType": "IfStatement",
																				"src": "11581:166:8",
																				"trueBody": {
																					"expression": {
																						"id": 2246,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"expression": {
																								"id": 2242,
																								"name": "income",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2156,
																								"src": "11604:6:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserIncome_$1581_storage_ptr",
																									"typeString": "struct Storage.UserIncome storage pointer"
																								}
																							},
																							"id": 2244,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"memberLocation": "11611:14:8",
																							"memberName": "monthlyRoyalty",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1578,
																							"src": "11604:21:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "+=",
																						"rightHandSide": {
																							"id": 2245,
																							"name": "_amount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2118,
																							"src": "11629:7:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "11604:32:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2247,
																					"nodeType": "ExpressionStatement",
																					"src": "11604:32:8"
																				}
																			},
																			"id": 2263,
																			"nodeType": "IfStatement",
																			"src": "11509:238:8",
																			"trueBody": {
																				"expression": {
																					"id": 2237,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"id": 2233,
																							"name": "income",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2156,
																							"src": "11532:6:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserIncome_$1581_storage_ptr",
																								"typeString": "struct Storage.UserIncome storage pointer"
																							}
																						},
																						"id": 2235,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberLocation": "11539:19:8",
																						"memberName": "weeklyContestIncome",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1576,
																						"src": "11532:26:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "+=",
																					"rightHandSide": {
																						"id": 2236,
																						"name": "_amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2118,
																						"src": "11562:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11532:37:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2238,
																				"nodeType": "ExpressionStatement",
																				"src": "11532:37:8"
																			}
																		},
																		"id": 2264,
																		"nodeType": "IfStatement",
																		"src": "11443:304:8",
																		"trueBody": {
																			"expression": {
																				"id": 2228,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"expression": {
																						"id": 2224,
																						"name": "income",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2156,
																						"src": "11466:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserIncome_$1581_storage_ptr",
																							"typeString": "struct Storage.UserIncome storage pointer"
																						}
																					},
																					"id": 2226,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": true,
																					"memberLocation": "11473:13:8",
																					"memberName": "boosterIncome",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1574,
																					"src": "11466:20:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "+=",
																				"rightHandSide": {
																					"id": 2227,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2118,
																					"src": "11490:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11466:31:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2229,
																			"nodeType": "ExpressionStatement",
																			"src": "11466:31:8"
																		}
																	},
																	"id": 2265,
																	"nodeType": "IfStatement",
																	"src": "11380:367:8",
																	"trueBody": {
																		"expression": {
																			"id": 2219,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 2215,
																					"name": "income",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2156,
																					"src": "11403:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserIncome_$1581_storage_ptr",
																						"typeString": "struct Storage.UserIncome storage pointer"
																					}
																				},
																				"id": 2217,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "11410:10:8",
																				"memberName": "poolIncome",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1572,
																				"src": "11403:17:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 2218,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2118,
																				"src": "11424:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "11403:28:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2220,
																		"nodeType": "ExpressionStatement",
																		"src": "11403:28:8"
																	}
																},
																"id": 2266,
																"nodeType": "IfStatement",
																"src": "11308:439:8",
																"trueBody": {
																	"expression": {
																		"id": 2210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"expression": {
																				"id": 2206,
																				"name": "income",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2156,
																				"src": "11330:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserIncome_$1581_storage_ptr",
																					"typeString": "struct Storage.UserIncome storage pointer"
																				}
																			},
																			"id": 2208,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberLocation": "11337:15:8",
																			"memberName": "communityIncome",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1570,
																			"src": "11330:22:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 2209,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2118,
																			"src": "11356:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11330:33:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2211,
																	"nodeType": "ExpressionStatement",
																	"src": "11330:33:8"
																}
															},
															"id": 2267,
															"nodeType": "IfStatement",
															"src": "11104:643:8",
															"trueBody": {
																"expression": {
																	"id": 2201,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"id": 2197,
																			"name": "income",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2156,
																			"src": "11126:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserIncome_$1581_storage_ptr",
																				"typeString": "struct Storage.UserIncome storage pointer"
																			}
																		},
																		"id": 2199,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberLocation": "11133:11:8",
																		"memberName": "levelIncome",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1564,
																		"src": "11126:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "+=",
																	"rightHandSide": {
																		"id": 2200,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2118,
																		"src": "11148:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11126:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2202,
																"nodeType": "ExpressionStatement",
																"src": "11126:29:8"
															}
														},
														"id": 2268,
														"nodeType": "IfStatement",
														"src": "11034:713:8",
														"trueBody": {
															"expression": {
																"id": 2192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2188,
																		"name": "income",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2156,
																		"src": "11056:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserIncome_$1581_storage_ptr",
																			"typeString": "struct Storage.UserIncome storage pointer"
																		}
																	},
																	"id": 2190,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "11063:18:8",
																	"memberName": "levelBoosterIncome",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1562,
																	"src": "11056:25:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 2191,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2118,
																	"src": "11085:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11056:36:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2193,
															"nodeType": "ExpressionStatement",
															"src": "11056:36:8"
														}
													},
													"id": 2269,
													"nodeType": "IfStatement",
													"src": "10970:777:8",
													"trueBody": {
														"expression": {
															"id": 2183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 2179,
																	"name": "income",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2156,
																	"src": "10992:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserIncome_$1581_storage_ptr",
																		"typeString": "struct Storage.UserIncome storage pointer"
																	}
																},
																"id": 2181,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "10999:12:8",
																"memberName": "matrixIncome",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1560,
																"src": "10992:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2182,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2118,
																"src": "11015:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10992:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2184,
														"nodeType": "ExpressionStatement",
														"src": "10992:30:8"
													}
												},
												"id": 2270,
												"nodeType": "IfStatement",
												"src": "10900:847:8",
												"trueBody": {
													"expression": {
														"id": 2174,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"expression": {
																"id": 2170,
																"name": "income",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2156,
																"src": "10927:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserIncome_$1581_storage_ptr",
																	"typeString": "struct Storage.UserIncome storage pointer"
																}
															},
															"id": 2172,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"memberLocation": "10934:13:8",
															"memberName": "sponsorIncome",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1558,
															"src": "10927:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"id": 2173,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2118,
															"src": "10951:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "10927:31:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2175,
													"nodeType": "ExpressionStatement",
													"src": "10927:31:8"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2276,
																	"name": "_fromUserId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2116,
																	"src": "11903:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2277,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2118,
																	"src": "11933:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2278,
																	"name": "_packageLevel",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2120,
																	"src": "11965:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 2279,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "12000:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12006:9:8",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "12000:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2281,
																	"name": "_incomeType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2122,
																	"src": "12038:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2275,
																"name": "Income",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1592,
																"src": "11873:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Income_$1592_storage_ptr_$",
																	"typeString": "type(struct Storage.Income storage pointer)"
																}
															},
															"id": 2282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"11891:10:8",
																"11925:6:8",
																"11951:12:8",
																"11989:9:8",
																"12026:10:8"
															],
															"names": [
																"fromUserId",
																"amount",
																"packageLevel",
																"timestamp",
																"incomeType"
															],
															"nodeType": "FunctionCall",
															"src": "11873:184:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Income_$1592_memory_ptr",
																"typeString": "struct Storage.Income memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Income_$1592_memory_ptr",
																"typeString": "struct Storage.Income memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 2271,
																"name": "incomeHistory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1612,
																"src": "11845:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Income_$1592_storage_$dyn_storage_$",
																	"typeString": "mapping(uint256 => struct Storage.Income storage ref[] storage ref)"
																}
															},
															"id": 2273,
															"indexExpression": {
																"id": 2272,
																"name": "_userId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2114,
																"src": "11859:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11845:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Income_$1592_storage_$dyn_storage",
																"typeString": "struct Storage.Income storage ref[] storage ref"
															}
														},
														"id": 2274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11868:4:8",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "11845:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Income_$1592_storage_$dyn_storage_ptr_$_t_struct$_Income_$1592_storage_$returns$__$attached_to$_t_array$_t_struct$_Income_$1592_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct Storage.Income storage ref[] storage pointer,struct Storage.Income storage ref)"
														}
													},
													"id": 2283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11845:213:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2284,
												"nodeType": "ExpressionStatement",
												"src": "11845:213:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2288,
															"name": "userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2133,
															"src": "12131:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2289,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2118,
															"src": "12144:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2285,
															"name": "usdt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1422,
															"src": "12113:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														"id": 2287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12118:12:8",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 277,
														"src": "12113:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$232_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12113:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2291,
												"nodeType": "ExpressionStatement",
												"src": "12113:39:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2293,
															"name": "userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2133,
															"src": "12184:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 2294,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1601,
																	"src": "12197:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$1554_storage_$",
																		"typeString": "mapping(uint256 => struct Storage.User storage ref)"
																	}
																},
																"id": 2296,
																"indexExpression": {
																	"id": 2295,
																	"name": "_fromUserId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2116,
																	"src": "12203:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12197:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$1554_storage",
																	"typeString": "struct Storage.User storage ref"
																}
															},
															"id": 2297,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12216:7:8",
															"memberName": "account",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1521,
															"src": "12197:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2298,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2118,
															"src": "12225:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2299,
															"name": "_packageLevel",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2120,
															"src": "12234:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2300,
															"name": "_incomeType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2122,
															"src": "12249:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2292,
														"name": "IncomeDistributed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1682,
														"src": "12166:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint256)"
														}
													},
													"id": 2301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12166:95:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2302,
												"nodeType": "EmitStatement",
												"src": "12161:100:8"
											}
										]
									},
									"id": 2304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_distributeIncome",
									"nameLocation": "10340:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2114,
												"mutability": "mutable",
												"name": "_userId",
												"nameLocation": "10363:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2304,
												"src": "10358:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2113,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10358:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2116,
												"mutability": "mutable",
												"name": "_fromUserId",
												"nameLocation": "10376:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2304,
												"src": "10371:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2115,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10371:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "10393:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2304,
												"src": "10388:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2117,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10388:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2120,
												"mutability": "mutable",
												"name": "_packageLevel",
												"nameLocation": "10407:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 2304,
												"src": "10402:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2119,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10402:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2122,
												"mutability": "mutable",
												"name": "_incomeType",
												"nameLocation": "10427:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2304,
												"src": "10422:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2121,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10422:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10357:82:8"
									},
									"returnParameters": {
										"id": 2124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10449:0:8"
									},
									"scope": 2452,
									"src": "10331:1934:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2325,
										"nodeType": "Block",
										"src": "12340:142:8",
										"statements": [
											{
												"condition": {
													"id": 2317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "12355:45:8",
													"subExpression": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 2311,
																	"name": "weeklyUserdtl",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1916,
																	"src": "12356:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_weeklyUser_$1899_storage_$_$",
																		"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.weeklyUser storage ref))"
																	}
																},
																"id": 2313,
																"indexExpression": {
																	"id": 2312,
																	"name": "_roundId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2308,
																	"src": "12370:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12356:23:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_weeklyUser_$1899_storage_$",
																	"typeString": "mapping(uint256 => struct Storage.weeklyUser storage ref)"
																}
															},
															"id": 2315,
															"indexExpression": {
																"id": 2314,
																"name": "_userId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2306,
																"src": "12380:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12356:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_weeklyUser_$1899_storage",
																"typeString": "struct Storage.weeklyUser storage ref"
															}
														},
														"id": 2316,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12389:11:8",
														"memberName": "isQualified",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1898,
														"src": "12356:44:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2324,
												"nodeType": "IfStatement",
												"src": "12351:124:8",
												"trueBody": {
													"id": 2323,
													"nodeType": "Block",
													"src": "12402:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2319,
																		"name": "_userId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2306,
																		"src": "12445:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2320,
																		"name": "_roundId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2308,
																		"src": "12454:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2318,
																	"name": "_weeklyContestQualifier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2451,
																	"src": "12421:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256)"
																	}
																},
																"id": 2321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12421:42:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2322,
															"nodeType": "ExpressionStatement",
															"src": "12421:42:8"
														}
													]
												}
											}
										]
									},
									"id": 2326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_tryWeeklyContestQualify",
									"nameLocation": "12278:24:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2306,
												"mutability": "mutable",
												"name": "_userId",
												"nameLocation": "12308:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2326,
												"src": "12303:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2305,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12303:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2308,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "12322:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2326,
												"src": "12317:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2307,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12317:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12302:29:8"
									},
									"returnParameters": {
										"id": 2310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12340:0:8"
									},
									"scope": 2452,
									"src": "12269:213:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2450,
										"nodeType": "Block",
										"src": "12558:1432:8",
										"statements": [
											{
												"assignments": [
													2334
												],
												"declarations": [
													{
														"constant": false,
														"id": 2334,
														"mutability": "mutable",
														"name": "currentRound",
														"nameLocation": "12583:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 2450,
														"src": "12578:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2333,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "12578:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2336,
												"initialValue": {
													"id": 2335,
													"name": "currentWeeklyRound",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1861,
													"src": "12598:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12578:38:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2338,
																"name": "_roundId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2330,
																"src": "12643:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2339,
																"name": "currentWeeklyRound",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1861,
																"src": "12655:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12643:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420726f756e64",
															"id": 2341,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12675:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_44c340b938e2069377635f73a0f638cb6cf336fba68596e44d590f0f2dbd81ab",
																"typeString": "literal_string \"Invalid round\""
															},
															"value": "Invalid round"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_44c340b938e2069377635f73a0f638cb6cf336fba68596e44d590f0f2dbd81ab",
																"typeString": "literal_string \"Invalid round\""
															}
														],
														"id": 2337,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12635:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12635:56:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2343,
												"nodeType": "ExpressionStatement",
												"src": "12635:56:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "12710:34:8",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 2345,
																		"name": "weeklyContestdtl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1904,
																		"src": "12711:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_WeeklyContest_$1886_storage_$",
																			"typeString": "mapping(uint256 => struct Storage.WeeklyContest storage ref)"
																		}
																	},
																	"id": 2347,
																	"indexExpression": {
																		"id": 2346,
																		"name": "_roundId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2330,
																		"src": "12728:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12711:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_WeeklyContest_$1886_storage",
																		"typeString": "struct Storage.WeeklyContest storage ref"
																	}
																},
																"id": 2348,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12738:6:8",
																"memberName": "closed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1885,
																"src": "12711:33:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f756e6420636c6f736564",
															"id": 2350,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12746:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7cb136aac2cef2ec9b6251ba0be0eaf9eb87f73f326b238f4495e8c0d58e6f97",
																"typeString": "literal_string \"Round closed\""
															},
															"value": "Round closed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7cb136aac2cef2ec9b6251ba0be0eaf9eb87f73f326b238f4495e8c0d58e6f97",
																"typeString": "literal_string \"Round closed\""
															}
														],
														"id": 2344,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12702:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12702:59:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2352,
												"nodeType": "ExpressionStatement",
												"src": "12702:59:8"
											},
											{
												"assignments": [
													2355
												],
												"declarations": [
													{
														"constant": false,
														"id": 2355,
														"mutability": "mutable",
														"name": "userBoosterJoinDtl",
														"nameLocation": "12791:18:8",
														"nodeType": "VariableDeclaration",
														"scope": 2450,
														"src": "12772:37:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserBooster_$1788_memory_ptr",
															"typeString": "struct Storage.UserBooster"
														},
														"typeName": {
															"id": 2354,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2353,
																"name": "UserBooster",
																"nameLocations": [
																	"12772:11:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1788,
																"src": "12772:11:8"
															},
															"referencedDeclaration": 1788,
															"src": "12772:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserBooster_$1788_storage_ptr",
																"typeString": "struct Storage.UserBooster"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2361,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2356,
															"name": "userBoosterdtl",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1834,
															"src": "12812:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_UserBooster_$1788_storage_$_$",
																"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.UserBooster storage ref))"
															}
														},
														"id": 2358,
														"indexExpression": {
															"hexValue": "31",
															"id": 2357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12827:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12812:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserBooster_$1788_storage_$",
															"typeString": "mapping(uint256 => struct Storage.UserBooster storage ref)"
														}
													},
													"id": 2360,
													"indexExpression": {
														"id": 2359,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2328,
														"src": "12830:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12812:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserBooster_$1788_storage",
														"typeString": "struct Storage.UserBooster storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12772:66:8"
											},
											{
												"assignments": [
													2363
												],
												"declarations": [
													{
														"constant": false,
														"id": 2363,
														"mutability": "mutable",
														"name": "hasEnoughDirects",
														"nameLocation": "12856:16:8",
														"nodeType": "VariableDeclaration",
														"scope": 2450,
														"src": "12851:21:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2362,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "12851:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2372,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 2364,
																	"name": "weeklyUserDirects",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1923,
																	"src": "12875:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
																		"typeString": "mapping(uint256 => mapping(uint256 => uint256[] storage ref))"
																	}
																},
																"id": 2366,
																"indexExpression": {
																	"id": 2365,
																	"name": "currentRound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2334,
																	"src": "12893:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12875:31:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(uint256 => uint256[] storage ref)"
																}
															},
															"id": 2368,
															"indexExpression": {
																"id": 2367,
																"name": "_userId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2328,
																"src": "12907:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12875:40:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 2369,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12916:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "12875:47:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "35",
														"id": 2370,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12926:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "12875:52:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12851:76:8"
											},
											{
												"assignments": [
													2374
												],
												"declarations": [
													{
														"constant": false,
														"id": 2374,
														"mutability": "mutable",
														"name": "boosterEarlyJoin",
														"nameLocation": "12943:16:8",
														"nodeType": "VariableDeclaration",
														"scope": 2450,
														"src": "12938:21:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2373,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "12938:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2390,
												"initialValue": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2378,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2375,
																		"name": "userBoosterJoinDtl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2355,
																		"src": "12977:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserBooster_$1788_memory_ptr",
																			"typeString": "struct Storage.UserBooster memory"
																		}
																	},
																	"id": 2376,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12996:2:8",
																	"memberName": "id",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1779,
																	"src": "12977:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2377,
																	"name": "_userId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2328,
																	"src": "13002:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12977:32:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2387,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2379,
																		"name": "userBoosterJoinDtl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2355,
																		"src": "13027:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserBooster_$1788_memory_ptr",
																			"typeString": "struct Storage.UserBooster memory"
																		}
																	},
																	"id": 2380,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13046:8:8",
																	"memberName": "joinTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1787,
																	"src": "13027:27:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 2381,
																				"name": "users",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1601,
																				"src": "13058:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$1554_storage_$",
																					"typeString": "mapping(uint256 => struct Storage.User storage ref)"
																				}
																			},
																			"id": 2383,
																			"indexExpression": {
																				"id": 2382,
																				"name": "_userId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2328,
																				"src": "13064:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "13058:14:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_User_$1554_storage",
																				"typeString": "struct Storage.User storage ref"
																			}
																		},
																		"id": 2384,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "13073:16:8",
																		"memberName": "registrationTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1553,
																		"src": "13058:31:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 2385,
																		"name": "TIME_STEP",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1441,
																		"src": "13092:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "13058:43:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13027:74:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "12977:124:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 2389,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "12962:150:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12938:174:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2392,
																"name": "hasEnoughDirects",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2363,
																"src": "13131:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"id": 2393,
																"name": "boosterEarlyJoin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2374,
																"src": "13151:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "13131:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656c696769626c6520666f72207765656b6c7920636f6e74657374",
															"id": 2395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13169:33:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_118c80ebb328a86f89c9abb7dbb00582133be73c782846c45c96fae9ea1c5087",
																"typeString": "literal_string \"Not eligible for weekly contest\""
															},
															"value": "Not eligible for weekly contest"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_118c80ebb328a86f89c9abb7dbb00582133be73c782846c45c96fae9ea1c5087",
																"typeString": "literal_string \"Not eligible for weekly contest\""
															}
														],
														"id": 2391,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13123:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13123:80:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2397,
												"nodeType": "ExpressionStatement",
												"src": "13123:80:8"
											},
											{
												"assignments": [
													2400
												],
												"declarations": [
													{
														"constant": false,
														"id": 2400,
														"mutability": "mutable",
														"name": "weeklyuserdtl",
														"nameLocation": "13552:13:8",
														"nodeType": "VariableDeclaration",
														"scope": 2450,
														"src": "13533:32:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_weeklyUser_$1899_storage_ptr",
															"typeString": "struct Storage.weeklyUser"
														},
														"typeName": {
															"id": 2399,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2398,
																"name": "weeklyUser",
																"nameLocations": [
																	"13533:10:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1899,
																"src": "13533:10:8"
															},
															"referencedDeclaration": 1899,
															"src": "13533:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_weeklyUser_$1899_storage_ptr",
																"typeString": "struct Storage.weeklyUser"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2406,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2401,
															"name": "weeklyUserdtl",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1916,
															"src": "13568:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_weeklyUser_$1899_storage_$_$",
																"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.weeklyUser storage ref))"
															}
														},
														"id": 2403,
														"indexExpression": {
															"id": 2402,
															"name": "currentRound",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2334,
															"src": "13582:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13568:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_weeklyUser_$1899_storage_$",
															"typeString": "mapping(uint256 => struct Storage.weeklyUser storage ref)"
														}
													},
													"id": 2405,
													"indexExpression": {
														"id": 2404,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2328,
														"src": "13596:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13568:36:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_weeklyUser_$1899_storage",
														"typeString": "struct Storage.weeklyUser storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13533:71:8"
											},
											{
												"condition": {
													"expression": {
														"id": 2407,
														"name": "weeklyuserdtl",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2400,
														"src": "13619:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_weeklyUser_$1899_storage_ptr",
															"typeString": "struct Storage.weeklyUser storage pointer"
														}
													},
													"id": 2408,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "13633:11:8",
													"memberName": "isQualified",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1898,
													"src": "13619:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2410,
												"nodeType": "IfStatement",
												"src": "13615:38:8",
												"trueBody": {
													"functionReturnParameters": 2332,
													"id": 2409,
													"nodeType": "Return",
													"src": "13646:7:8"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "13671:26:8",
															"subExpression": {
																"expression": {
																	"id": 2412,
																	"name": "weeklyuserdtl",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2400,
																	"src": "13672:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_weeklyUser_$1899_storage_ptr",
																		"typeString": "struct Storage.weeklyUser storage pointer"
																	}
																},
																"id": 2413,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "13686:11:8",
																"memberName": "isQualified",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1898,
																"src": "13672:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616c7265616479205175616c6966696564",
															"id": 2415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13699:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_399ca2f997c2fc8a2f7ce1d19c94796738fd981bf8b1d0dce11a52d57ce1b131",
																"typeString": "literal_string \"already Qualified\""
															},
															"value": "already Qualified"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_399ca2f997c2fc8a2f7ce1d19c94796738fd981bf8b1d0dce11a52d57ce1b131",
																"typeString": "literal_string \"already Qualified\""
															}
														],
														"id": 2411,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13663:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13663:56:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2417,
												"nodeType": "ExpressionStatement",
												"src": "13663:56:8"
											},
											{
												"expression": {
													"id": 2422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2418,
															"name": "weeklyuserdtl",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2400,
															"src": "13732:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_weeklyUser_$1899_storage_ptr",
																"typeString": "struct Storage.weeklyUser storage pointer"
															}
														},
														"id": 2420,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "13746:2:8",
														"memberName": "id",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1888,
														"src": "13732:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2421,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2328,
														"src": "13751:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13732:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2423,
												"nodeType": "ExpressionStatement",
												"src": "13732:26:8"
											},
											{
												"expression": {
													"id": 2429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2424,
															"name": "weeklyuserdtl",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2400,
															"src": "13769:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_weeklyUser_$1899_storage_ptr",
																"typeString": "struct Storage.weeklyUser storage pointer"
															}
														},
														"id": 2426,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "13783:8:8",
														"memberName": "joinTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1890,
														"src": "13769:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2427,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "13794:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2428,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13800:9:8",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "13794:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13769:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2430,
												"nodeType": "ExpressionStatement",
												"src": "13769:40:8"
											},
											{
												"expression": {
													"id": 2435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2431,
															"name": "weeklyuserdtl",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2400,
															"src": "13820:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_weeklyUser_$1899_storage_ptr",
																"typeString": "struct Storage.weeklyUser storage pointer"
															}
														},
														"id": 2433,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "13834:7:8",
														"memberName": "roundId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1892,
														"src": "13820:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2434,
														"name": "currentRound",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2334,
														"src": "13844:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13820:36:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2436,
												"nodeType": "ExpressionStatement",
												"src": "13820:36:8"
											},
											{
												"expression": {
													"id": 2441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2437,
															"name": "weeklyuserdtl",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2400,
															"src": "13867:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_weeklyUser_$1899_storage_ptr",
																"typeString": "struct Storage.weeklyUser storage pointer"
															}
														},
														"id": 2439,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "13881:11:8",
														"memberName": "isQualified",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1898,
														"src": "13867:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2440,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13895:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "13867:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2442,
												"nodeType": "ExpressionStatement",
												"src": "13867:32:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2444,
															"name": "currentRound",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2334,
															"src": "13943:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2445,
															"name": "_userId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2328,
															"src": "13957:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2446,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "13966:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13972:9:8",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "13966:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2443,
														"name": "WeeklyContestQualified",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1957,
														"src": "13920:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 2448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13920:62:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2449,
												"nodeType": "EmitStatement",
												"src": "13915:67:8"
											}
										]
									},
									"id": 2451,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_weeklyContestQualifier",
									"nameLocation": "12497:23:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2328,
												"mutability": "mutable",
												"name": "_userId",
												"nameLocation": "12526:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2451,
												"src": "12521:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2327,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12521:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2330,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "12540:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2451,
												"src": "12535:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2329,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12535:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12520:29:8"
									},
									"returnParameters": {
										"id": 2332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12558:0:8"
									},
									"scope": 2452,
									"src": "12488:1502:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2453,
							"src": "292:13701:8",
							"usedErrors": [],
							"usedEvents": [
								1642,
								1650,
								1660,
								1670,
								1682,
								1692,
								1700,
								1939,
								1949,
								1957,
								2040,
								2050,
								2058
							]
						}
					],
					"src": "33:13960:8"
				},
				"id": 8
			}
		}
	}
}