{
	"id": "72ab8b5a42bf2da048d17c7397a9bff4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"viaIR": true,
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/modules/InfinityPool.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n    pragma solidity ^0.8.30;\r\n\r\n\r\n    import \"./Storage.sol\";\r\n\r\n    contract InfinityPool is Storage {\r\n   \r\n    \r\n    constructor() { \r\n       \r\n    }\r\n\r\n    function canBuyNextPool(uint userId) public view returns (bool eligible, string memory reason) {\r\n        User storage user = users[userId];\r\n        uint nextPool = user.poollevel;\r\n        if (nextPool >= poolPackages.length) {\r\n            return (false, \"You are already at the highest pool\");\r\n        }\r\n\r\n        uint requiredLevel = minLevelForPool[nextPool];\r\n\r\n        if (user.level < requiredLevel) {\r\n            return (false, \"You need to reach a higher level first\");\r\n        }\r\n\r\n        if (nextPool > 0 && user.poollevel < nextPool) {\r\n            return (false, \"Buy previous pool first\");\r\n        }\r\n\r\n        return (true, \"Eligible to buy next pool\");\r\n    }\r\n\r\n\r\n    function RetopPoolByEarning(uint _userId, uint _poolId) external {\r\n   \r\n        User storage user = users[_userId];\r\n        require(user.account == msg.sender, \"Not your account\");\r\n        require(user.poollevel < 7, \"At max pool\");\r\n        //require(_upgradeType == 1 || _upgradeType == 2, \"Invalid upgrade type\");\r\n\r\n        uint256 packagePrice;\r\n\r\n        packagePrice = poolPackages[_poolId];\r\n    \r\n        UserPoolTopup storage top = userPooltopup[_poolId][_userId];\r\n        require(top.reTopupAmt >= packagePrice, \"Not enough reTopup balance\");\r\n\r\n        // Deduct balance\r\n        top.reTopupAmt -= packagePrice;\r\n\r\n        // Record deposit\r\n        user.poolDeposit += packagePrice;\r\n\r\n        // Place new entry in same pool\r\n        _placeInPool(_poolId, _userId, packagePrice);\r\n\r\n        // Log\r\n        user.deposits.push(Deposit({\r\n            amount: packagePrice,\r\n            withdrawn: 0,\r\n            start: block.timestamp,\r\n            depositType: 10 // Retopup via earning\r\n        }));\r\n\r\n        emit Upgrade(msg.sender, _userId, _poolId, \"Pool ReTopup (Earning)\");\r\n    \r\n\r\n   \r\n    }\r\n    function upgradePoolByEarning(uint32 _userId, uint _poolId) external {\r\n        // _upgradeType = 1 → Retopup (same pool)\r\n        // _upgradeType = 2 → Upgrade to next pool\r\n\r\n        User storage user = users[_userId];\r\n        require(user.account == msg.sender, \"Not your account\");\r\n        require(user.poollevel < 7, \"At max pool\");\r\n    \r\n\r\n        uint256 packagePrice;\r\n        uint256 targetPool;\r\n\r\n    \r\n    \r\n        require(_poolId + 1 < poolPackages.length, \"No higher pool\");\r\n        packagePrice = poolPackages[_poolId + 1];\r\n        targetPool = _poolId + 1;\r\n\r\n        //uint requiredLevel = minLevelForPool[_poolId]; \r\n       // require(user.level >= requiredLevel, \"Upgrade your level first\");\r\n\r\n        // Check internal funds\r\n        UserPoolTopup storage top = userPooltopup[_poolId][_userId];\r\n        require(top.nextPoolAmt >= packagePrice, \"Not enough next pool balance\");\r\n        require(!userHasPool[_userId][targetPool], \"Already purchased next pool\");\r\n\r\n        // Deduct funds\r\n        top.nextPoolAmt -= packagePrice;\r\n\r\n        // Update user info\r\n        user.poollevel += 1;\r\n    \r\n        user.poolDeposit += packagePrice;\r\n        userHasPool[_userId][targetPool] = true;\r\n\r\n        // Place in next pool\r\n        _placeInPool(targetPool, _userId, packagePrice);\r\n\r\n        // Record deposit\r\n        user.deposits.push(Deposit({\r\n            amount: packagePrice,\r\n            withdrawn: 0,\r\n            start: block.timestamp,\r\n            depositType: 11 // Upgrade via earning\r\n        }));\r\n\r\n        emit Upgrade(msg.sender, _userId, targetPool + 1, \"Pool Upgrade (Earning)\");\r\n    \r\n    }\r\n\r\n    function upgradePool(uint _userId) external {\r\n        User storage user = users[_userId];\r\n        require(user.account == msg.sender, \"Not your account\");\r\n        require(user.poollevel < 7, \"At max level\");\r\n        \r\n        uint nextLevel = user.poollevel;\r\n\r\n        uint nextPool = user.poollevel; // next pool to buy (0-based index)\r\n        uint requiredLevel = minLevelForPool[nextPool]; // required main level for this pool\r\n\r\n        //  Check 1: Ensure user has required main level\r\n        require(user.level >= requiredLevel, \"Upgrade your level first\");\r\n\r\n        //  Check 2: Must buy sequentially (can't skip pools)\r\n        if (nextPool > 0) {\r\n            require(user.poollevel == nextPool, \"Buy previous pool first\");\r\n        }\r\n        require(!userHasPool[_userId][nextPool], \"Pool already purchased\");\r\n \r\n       \r\n\r\n        uint packagePrice = poolPackages[nextPool];\r\n        \r\n        // Transfer USDT for the next package\r\n        usdt.transferFrom(msg.sender, address(this), packagePrice);\r\n        \r\n        if(nextPool == 0){\r\n            uint _sponsorId = user.sponsorId;\r\n            if(users[_sponsorId].registrationTime + 172800 <= block.timestamp){\r\n                 users[_sponsorId].directPoolQualified += 1;\r\n            }\r\n        }\r\n        user.poollevel += 1;\r\n        userHasPool[_userId][nextPool] = true;\r\n        user.poolDeposit += packagePrice;\r\n        _placeInPool(nextLevel, _userId, packagePrice);\r\n            // add in Deposit \r\n        user.deposits.push(Deposit({\r\n            amount: packagePrice,\r\n            withdrawn: 0,\r\n            start: block.timestamp,\r\n            depositType:10\r\n        }));\r\n\r\n        emit Upgrade(msg.sender, _userId, nextPool + 1, \"Pool\");\r\n    }\r\n\r\n    \r\n    function _placeInPool(uint256 poolId, uint userMainId, uint packagePrice) private {\r\n        require(poolId < poolPackages.length, \"Invalid\");\r\n        require(msg.value == poolPackages[poolId], \"Incorrect amount\");\r\n\r\n        //uint [] memory usersLen = poolUsers[poolId];\r\n       \r\n        uint index = poolUsers[poolId].length;// usersLen.length;               // current index for new user\r\n        uint newUserId = defaultRefId + uint(index);\r\n        poolUsers[poolId].push(newUserId);\r\n        // parent by formula\r\n        uint256 parentIndex = (index - 1) / 3;\r\n        uint parentId = poolUsers[poolId][parentIndex]; //usersLen[parentIndex];\r\n\r\n         userPooldtl[poolId][newUserId] = UserPool({\r\n                id: newUserId,\r\n                mainid: userMainId,\r\n                poolId: poolId,\r\n                parentId: parentId,\r\n                bonusCount: 0\r\n            });\r\n           \r\n        userIdPerPool[poolId][userMainId].push(newUserId);\r\n        userChildren[poolId][parentId].push(newUserId);\r\n        _distributePoolIncome( parentId, poolId, userMainId, packagePrice);\r\n    }\r\n\r\n    function _distributePoolIncome( uint _parentId, uint _poolId, uint _userMainId, uint _amount) private {\r\n       \r\n        uint currentParent = _parentId;       \r\n        uint amountPerLevel = _amount / 3;  \r\n        uint totalDistributed = 0;\r\n\r\n        for(uint i=0; i<3; i++){\r\n           \r\n            if (currentParent == 0 || currentParent == defaultRefId) {\r\n            // Send *remaining* amount to creator, not just one share\r\n                uint remaining = _amount - totalDistributed;\r\n                if (remaining > 0) {\r\n                    _sendToCreator(remaining);\r\n                }\r\n                break;\r\n            }\r\n\r\n            UserPool storage userp = userPooldtl[_poolId][currentParent];\r\n            uint parentMainId = userp.mainid; //parent main id\r\n            if (userp.bonusCount < 39) {\r\n                userp.bonusCount += 1;\r\n\r\n                if (userp.bonusCount <= 24) {\r\n                    _payPoolIncome(parentMainId, _userMainId, amountPerLevel, 1, 10);\r\n                } else if (userp.bonusCount <= 36) {\r\n                    userPooltopup[_poolId][parentMainId].nextPoolAmt += amountPerLevel;\r\n                } else {\r\n                    userPooltopup[_poolId][parentMainId].reTopupAmt += amountPerLevel;\r\n                }\r\n\r\n            }         \r\n            totalDistributed += amountPerLevel; // Track amount given so far\r\n            currentParent = userp.parentId;\r\n        }     \r\n         // If we finished all 3 levels normally but still have rounding dust\r\n        uint _remaining = _amount - totalDistributed;\r\n        if (_remaining > 0) {\r\n            _sendToCreator(_remaining);\r\n        }  \r\n    }\r\n    function _payPoolIncome(uint receiverId, uint fromId, uint amount, uint packageLevel, uint _incomeType) private {\r\n       \r\n\r\n        UserIncome storage inc = userIncomes[receiverId];\r\n        inc.totalIncome += amount;\r\n        if(_incomeType == 10){\r\n             inc.poolIncome += amount;\r\n        }\r\n        if(_incomeType == 11){\r\n             inc.boosterIncome += amount;\r\n        }\r\n        \r\n       \r\n\r\n        incomeHistory[receiverId].push(Income({\r\n            fromUserId: fromId,\r\n            amount: amount,\r\n            packageLevel: packageLevel,\r\n            timestamp: block.timestamp,\r\n            incomeType: _incomeType // infintiy pool income\r\n        }));\r\n\r\n        address to = users[receiverId].account;\r\n        uint netamount = (amount* 95 )/100;\r\n        usdt.transfer(to, netamount);\r\n        _sendToCreator((amount*5) / 100);\r\n\r\n        emit IncomeDistributed(to, users[fromId].account, amount, packageLevel, _incomeType);\r\n    }\r\n   \r\n   \r\n    function upgradeBooster(uint _userId) external {\r\n        User storage user = users[_userId];\r\n        require(user.account == msg.sender, \"Not your account\");\r\n        require(user.boosterlevel < 8, \"At max level\");\r\n        \r\n        //uint nextLevel = user.boosterlevel;\r\n\r\n        uint nextPool = user.boosterlevel; // next pool to buy (0-based index)\r\n        uint requiredLevel = minLevelForGlbBooster[nextPool]; // required main level for this pool\r\n        uint requiredPool = minPoolForGlbBooster[nextPool]; // required main level for this pool\r\n        //  Check 1: Ensure user has required main level\r\n        require(user.level >= requiredLevel && user.poollevel >= requiredPool, \"Upgrade Slot and Pool\");\r\n\r\n        //  Check 2: Must buy sequentially (can't skip pools)\r\n        if (nextPool > 0) {\r\n            require(user.boosterlevel == nextPool, \"Buy previous pool first\");\r\n        }\r\n        require(!userHasbooster[_userId][nextPool], \"Pool already purchased\");\r\n\r\n        uint packagePrice = glbBoosterPackages[nextPool];\r\n        \r\n        // Transfer USDT for the next package\r\n        usdt.transferFrom(msg.sender, address(this), packagePrice);\r\n        \r\n        user.boosterlevel += 1;\r\n        userHasbooster[_userId][nextPool] = true;\r\n        user.boosterDeposit += packagePrice;\r\n        _placeInBooster(nextPool, _userId, packagePrice);\r\n            // add in Deposit \r\n        user.deposits.push(Deposit({\r\n            amount: packagePrice,\r\n            withdrawn: 0,\r\n            start: block.timestamp,\r\n            depositType:11\r\n        }));\r\n\r\n        emit Upgrade(msg.sender, _userId, nextPool + 1, \"Booster\");\r\n    }\r\n\r\n    \r\n    function _placeInBooster(uint256 poolId, uint userMainId, uint packagePrice) private {\r\n        require(poolId < glbBoosterPackages.length, \"Invalid\");\r\n        require(msg.value == glbBoosterPackages[poolId], \"Incorrect amount\");\r\n\r\n        //uint [] memory usersLen = boosterUsers[poolId];\r\n       \r\n        uint index = boosterUsers[poolId].length; //usersLen.length;               // current index for new user\r\n        //uint newUserId = userMainId;//defaultRefId + uint(index);\r\n        boosterUsers[poolId].push(userMainId);\r\n        // parent by formula\r\n        uint256 parentIndex = (index - 1) / 3;\r\n        uint parentId = boosterUsers[poolId][parentIndex]; //usersLen[parentIndex];\r\n\r\n        userBoosterdtl[poolId][userMainId] = UserBooster({\r\n                id: userMainId,               \r\n                poolId: poolId,\r\n                parentId: parentId,\r\n                bonusCount: 0,\r\n                joinTime: block.timestamp\r\n            });\r\n        userBoosterChildren[poolId][parentId].push(userMainId);\r\n\r\n       \r\n        if(poolId == 1  ){\r\n            User memory userdtl = users[userMainId];\r\n            weeklyUserDirects[currentWeeklyRound][userdtl.sponsorId].push(userMainId);\r\n            uint directsCount = weeklyUserDirects[currentWeeklyRound][userdtl.sponsorId].length;\r\n\r\n            if(userdtl.registrationTime + TIME_STEP >= block.timestamp){\r\n                _tryWeeklyContestQualify(userMainId, currentWeeklyRound);\r\n            }\r\n            if( directsCount >= 5){\r\n                 _tryWeeklyContestQualify(userdtl.sponsorId, currentWeeklyRound);\r\n            }\r\n            \r\n        }\r\n\r\n\r\n        if (parentId == 0 || parentId == defaultRefId) {\r\n            _sendToCreator(packagePrice);\r\n            return;\r\n        }  \r\n        UserBooster storage userB = userBoosterdtl[poolId][parentId];\r\n        if( userB.bonusCount<3)\r\n        {\r\n            userB.bonusCount +=1; \r\n            _payPoolIncome(parentId, userMainId, packagePrice, 1, 11);  \r\n        }\r\n        else{\r\n            _sendToCreator(packagePrice);\r\n            return;\r\n        }\r\n       \r\n           // _distributePoolIncome( parentId, poolId, userMainId, packagePrice);\r\n    }\r\n    \r\n   \r\n}\r\n"
			},
			"contracts/modules/Storage.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.30;\r\n\r\n//import \"../interfaces/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\n\r\ncontract Storage is ReentrancyGuard {\r\n    using SafeERC20 for IERC20;\r\n    IERC20 public usdt;\r\n    //address public owner;\r\n    address public creatorWallet;   \r\n    address public systemMaintance;\r\n    address public teamDevelopment;\r\n    uint public defaultRefId;\r\n    uint public totalUsers;\r\n    uint internal constant maxLayers = 15;\r\n\r\n    uint256 public constant PERCENTS_DIVIDER = 10000;\r\n    uint256 public constant TIME_STEP = 1 days;\r\n    uint256 public constant ROI_CAP_MULTIPLIER = 15; // 1.5x\r\n    uint256 public constant ROI_CAP_DIVIDER = 10;\r\n\r\n\r\n \r\n    uint[] public registeredUserIds;\r\n    uint private nonce; // add this at the top of your contract\r\n  \r\n    // Package prices in USDT (with 18 decimals)\r\n\r\n        // --- Community bonus accrual (pull-based) ---\r\n    uint256 public constant ACC_PRECISION = 1e18;\r\n    uint256 public communityAccPerUser;                 // global accumulator\r\n    mapping(uint => uint256) internal communityDebt;      // user snapshot\r\n\r\n    uint[] public packages = [\r\n        15 * 1e18,      // 15$\r\n        25 * 1e18,      // 25$\r\n        50 * 1e18,      // 50$\r\n        100 * 1e18,     // 100$\r\n        200 * 1e18,     // 200$\r\n        400 * 1e18,     // 400$\r\n        800 * 1e18,     // 800$\r\n        1600 * 1e18,    // 1600$\r\n        3200 * 1e18,    // 3200$\r\n        6400 * 1e18,    // 6400$\r\n        12800 * 1e18,   // 12800$\r\n        25600 * 1e18,   // 25600$\r\n        51200 * 1e18,   // 51200$\r\n        102400 * 1e18,  // 102400$\r\n        204800 * 1e18   // 204800$\r\n    ];\r\n\r\n        //  User struct into basic info and relationships\r\n\r\n        /*User main struct and mappings*/\r\n    struct Deposit {\r\n        uint256 amount;\r\n        uint256 withdrawn;\r\n        uint256 start; \r\n        uint8 depositType;  \r\n    }\r\n\r\n    struct User {\r\n        address account;\r\n        Deposit[] deposits;\r\n        uint256 checkpoint;\r\n        uint id;\r\n        uint sponsorId;  // Referrer\r\n        uint uplineId;   // Placement in matrix\r\n        uint level;      // Current package level (1-15)\r\n        uint directTeam; // Direct referrals count\r\n        uint directPoolQualified; // Direct referrals count in infinity pool\r\n        uint totalMatrixTeam; // Total users in matrix\r\n        uint totalDeposit;\r\n        uint poollevel;\r\n        uint poolDeposit;\r\n        uint boosterlevel;\r\n        uint boosterDeposit;\r\n        uint registrationTime;\r\n\r\n    }\r\n     // struct for bonus calc\r\n    struct UserIncome {\r\n        uint totalIncome;\r\n        uint sponsorIncome;\r\n        uint matrixIncome;\r\n        uint levelBoosterIncome;\r\n        uint levelIncome;\r\n        uint royaltyIncome;\r\n        uint royaltyIncomeClaimed; // Track claimed royalty for capping\r\n        uint communityIncome;        // <-- NEW: total community bonus claimed\r\n        uint poolIncome;        // <-- Infinity Pool Income\r\n        uint boosterIncome;        // <-- booster Income\r\n        uint weeklyContestIncome;        // <-- weekly contest Income\r\n        uint monthlyRoyalty;        // <-- weekly contest Income\r\n        uint monthlyTopRoyalty;        // <-- weekly contest Income\r\n    }\r\n\r\n    struct Income {\r\n        uint fromUserId;\r\n        uint amount;\r\n        uint packageLevel;\r\n        uint timestamp;\r\n        uint incomeType; // 1: Sponsor, 2: Matrix, 3: Level, 4: Level Booster, 5: Creator, 6: Royalty , 7 Lottery  , 8 Roi Income, 10 Infintiy Pool, 11 Booster Income,12 weekly contest\r\n    }\r\n\r\n\r\n\r\n    mapping(address => uint) internal addressToId;\r\n    mapping(uint => User) internal users;\r\n    mapping(uint => UserIncome) internal userIncomes; // New mapping for income data\r\n    mapping(uint => Income[]) internal incomeHistory;\r\n    mapping(uint => mapping(uint => uint[])) internal teams; // Matrix team structure by level\r\n    mapping(uint => uint) internal matrixDirect; // Count of direct matrix referrals\r\n    mapping(uint => uint[]) internal directReferrals;\r\n\r\n    event UserJoined(uint8 indexed matrixId, uint32 indexed userId, address indexed user, uint32 parentId, address parentAddr, uint8 position);\r\n    event RewardSent(address indexed to, uint256 amount, string level);\r\n\r\n     // Events\r\n    event Registration(address indexed user, address indexed sponsor, uint indexed userId, uint uplineId);\r\n    event Upgrade(address indexed user, uint indexed userId, uint packageLevel, string depositType);\r\n    event IncomeDistributed(address indexed to, address indexed from, uint amount, uint packageLevel, uint incomeType);\r\n    event LotteryReward(address indexed winner, uint indexed fromUserId, uint amount, uint timestamp);\r\n    event CommunityBonusDistributed(uint amount, uint usersCount, uint perUser);\r\n\r\n  \r\n    // Infinity Pool and booster bonus \r\n\r\n\r\n    uint[] public poolPackages = [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18];\r\n    uint[] public glbBoosterPackages = [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18];\r\n    uint[7] public minLevelForPool = [3, 5, 7, 9, 11, 13, 15];\r\n    uint[8] public minLevelForGlbBooster = [4, 5, 6, 7, 8, 9, 10,11];\r\n    uint[8] public minPoolForGlbBooster = [0, 1, 1, 1, 1, 1, 1,1];\r\n\r\n\r\n    struct UserPool {\r\n        uint id;               \r\n        uint mainid;\r\n        uint poolId;\r\n        uint parentId;  \r\n        uint bonusCount;            \r\n    }\r\n    \r\n    struct UserPoolTopup{\r\n         uint nextPoolAmt;       \r\n        uint reTopupAmt;     \r\n    }\r\n\r\n      // Golbal Booster\r\n    struct UserBooster {\r\n        uint id; \r\n        uint poolId;\r\n        uint parentId;  \r\n        uint bonusCount;\r\n         uint joinTime;            \r\n    }\r\n\r\n    /* mapping for Infinity Pool*/\r\n    mapping(uint =>  mapping(uint => UserPoolTopup)) internal userPooltopup;\r\n\r\n    mapping(uint =>  mapping(uint => UserPool)) internal userPooldtl;\r\n    mapping(uint => mapping(uint => uint[])) internal userChildren;// in each pool id wise\r\n    mapping(uint => mapping(uint => uint[])) internal userIdPerPool;// will store user ids pool wise\r\n    mapping(uint => uint[]) internal poolUsers; // store all users  pool wise\r\n    mapping(uint => mapping(uint => bool)) internal userHasPool; \r\n\r\n    /* mapping for Global Booster */\r\n    mapping(uint =>  mapping(uint => UserBooster)) internal userBoosterdtl;\r\n    mapping(uint =>  mapping(uint => uint[])) internal userBoosterChildren;\r\n    mapping(uint => uint[]) internal boosterUsers;  // store all users booster wise\r\n    mapping(uint => mapping(uint => bool)) internal userHasbooster; \r\n\r\n   \r\n    // weekly contest, monthly royalty and top royalty\r\n\r\n    uint public constant WEEK_DURATION = 7 days;\r\n    uint public constant MONTH_DURATION = 30 days;\r\n    uint public constant WeeklyCapping = 1000e18;\r\n    uint public constant monthlyCapping = 10000e18;\r\n\r\n    uint public currentWeeklyRound = 1;    \r\n    uint public currentMonthlyRound = 1;\r\n    uint public currentWeeklyStartTime = 0;\r\n    uint public currentMonthlyStartTime = 0;\r\n    uint public WeeklyTotalReward = 0;\r\n\r\n\r\n    struct WeeklyContest {\r\n        uint roundId;    \r\n        uint totalReward;\r\n        uint totalUsers;\r\n        uint perUserReward;\r\n        uint claimedCount;\r\n        uint startTime;\r\n        uint endTime;\r\n        uint carryForward;\r\n        bool closed;\r\n    }\r\n   \r\n    struct weeklyUser{\r\n        uint id;\r\n        uint joinTime;\r\n        uint roundId ;\r\n        uint claimTime;\r\n        bool isClaimed; \r\n        bool isQualified;\r\n    }\r\n    mapping (uint => WeeklyContest) internal weeklyContestdtl;// details of weekly contest\r\n    mapping(uint=> uint[]) weeklyQualifiedUsers; // qualifieduserweekly\r\n    mapping(uint => mapping(uint => weeklyUser)) internal weeklyUserdtl;// details of weekly user))\r\n    mapping(uint => mapping(uint => uint[])) internal weeklyUserDirects;//details users direct in current weekly round\r\n    event WeeklyClosed(uint roundId, uint totalUsers, uint perUserReward, uint distributedAmount, uint leftoverReward, uint endTime);\r\n    event WeeklyRewardClaim(uint roundId, uint userId, uint perUserReward,  uint claimTime);\r\n    event WeeklyContestQualified(uint roundId, uint userId, uint joinTime);\r\n\r\n\r\n   \r\n    constructor() {\r\n       \r\n    }\r\n    \r\n\r\n    function _sendToCreator(uint _amount) internal {\r\n    require(creatorWallet != address(0),\"fee addrs not set\");\r\n    // 100% split to creator\r\n    \r\n    // Send dust to creator (you can pick any bucket)\r\n    usdt.safeTransfer(creatorWallet, _amount);\r\n  \r\n\r\n    // Bookkeeping for the full routed amount\r\n    UserIncome storage creatorIncome = userIncomes[defaultRefId];\r\n    creatorIncome.totalIncome += _amount;\r\n\r\n    incomeHistory[defaultRefId].push(Income({\r\n        fromUserId: 0,\r\n        amount: _amount,\r\n        packageLevel: 0,\r\n        timestamp: block.timestamp,\r\n        incomeType: 5\r\n    }));\r\n}\r\n\r\n\r\nfunction _distributeIncome(uint _userId,uint _fromUserId,uint _amount, uint _packageLevel, uint _incomeType) internal {\r\n    User storage user = users[_userId];\r\n    address userAddress = user.account;\r\n    require(userAddress != address(0), \"Invalid user\");\r\n    require(_amount > 0, \"Zero amount\");\r\n\r\n\r\n    // Transfer tokens\r\n    //usdt.safeTransfer(userAddress, _amount);\r\n   //( userAddress, _amount);\r\n\r\n    UserIncome storage income = userIncomes[_userId];\r\n    income.totalIncome += _amount;\r\n        // --- Update specific income field based on type ---\r\n    if      (_incomeType == 1) income.sponsorIncome += _amount;\r\n    else if (_incomeType == 2) income.matrixIncome += _amount;\r\n    else if (_incomeType == 3) income.levelBoosterIncome += _amount;\r\n    else if (_incomeType == 4) income.levelIncome += _amount;\r\n   // else if (_incomeType == 5) income.royaltyIncome += _amount;\r\n    //else if (_incomeType == 6) income.royaltyIncomeClaimed += _amount;\r\n    else if (_incomeType == 8) income.communityIncome += _amount;\r\n   \r\n    else if (_incomeType == 10) income.poolIncome += _amount;\r\n    else if (_incomeType == 11) income.boosterIncome += _amount;\r\n    else if (_incomeType == 12) income.weeklyContestIncome += _amount;\r\n    else if (_incomeType == 13) income.monthlyRoyalty += _amount;\r\n    else if (_incomeType == 14) income.monthlyTopRoyalty += _amount;\r\n    else revert(\"Unknown income type\");\r\n   \r\n        // --- Update total income ---\r\n    \r\n\r\n    // Record income in user history\r\n    incomeHistory[_userId].push(Income({\r\n        fromUserId: _fromUserId,\r\n        amount: _amount,\r\n        packageLevel: _packageLevel,\r\n        timestamp: block.timestamp,\r\n        incomeType: _incomeType\r\n    }));\r\n    //usdt.transfer(userAddress, _amount);\r\n  \r\n    usdt.safeTransfer(userAddress, _amount);\r\n\r\n    emit IncomeDistributed(userAddress, users[_fromUserId].account, _amount, _packageLevel, _incomeType);\r\n}\r\n\r\nfunction _tryWeeklyContestQualify(uint _userId, uint _roundId)internal {\r\n        if (!weeklyUserdtl[_roundId][_userId].isQualified) {\r\n                _weeklyContestQualifier(_userId, _roundId);\r\n        }\r\n    }\r\n    function _weeklyContestQualifier(uint _userId, uint _roundId)internal {\r\n       \r\n        uint currentRound = currentWeeklyRound;        \r\n        require(_roundId == currentWeeklyRound, \"Invalid round\");\r\n        require(!weeklyContestdtl[_roundId].closed, \"Round closed\");\r\n        UserBooster memory userBoosterJoinDtl = userBoosterdtl[1][_userId];\r\n\r\n        bool hasEnoughDirects = weeklyUserDirects[currentRound][_userId].length >= 5;\r\n        bool boosterEarlyJoin = (\r\n            userBoosterJoinDtl.id == _userId && \r\n            userBoosterJoinDtl.joinTime <= users[_userId].registrationTime + TIME_STEP\r\n        );\r\n        require(hasEnoughDirects || boosterEarlyJoin, \"Not eligible for weekly contest\");\r\n        //require(weeklyUserDirects[currentRound][_userId].length >=5 ||  (userBoosterJoinDtl.id == _userId && userBoosterJoinDtl.joinTime <= users[_userId].registrationTime + TIME_STEP), \"not eligible\"); // (userBoosterJoinDtl.id = _userId && userBoosterJoinDtl.joinTime <= users[_userId].registrationTime)\r\n        \r\n        weeklyUser storage weeklyuserdtl = weeklyUserdtl[currentRound][_userId];\r\n        if (weeklyuserdtl.isQualified) return;\r\n        require(!weeklyuserdtl.isQualified, \"already Qualified\");\r\n\r\n        weeklyuserdtl.id = _userId;\r\n        weeklyuserdtl.joinTime = block.timestamp;\r\n        weeklyuserdtl.roundId = currentRound;\r\n        weeklyuserdtl.isQualified = true;\r\n   \r\n        emit WeeklyContestQualified(currentRound, _userId, block.timestamp);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 100,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200f1e1f57fd7a408f714c9bcbfcfa134ecf359aced058bf4df923caed95d0ddf564736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea26469706673582212200f1e1f57fd7a408f714c9bcbfcfa134ecf359aced058bf4df923caed95d0ddf564736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF 0x1E 0x1F JUMPI REVERT PUSH27 0x408F714C9BCBFCFA134ECF359ACED058BF4DF923CAED95D0DDF564 PUSH20 0x6F6C634300081E00330000000000000000000000 ",
							"sourceMap": "698:9376:5:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "5f80fdfea26469706673582212200f1e1f57fd7a408f714c9bcbfcfa134ecf359aced058bf4df923caed95d0ddf564736f6c634300081e0033",
							"opcodes": "PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF 0x1E 0x1F JUMPI REVERT PUSH27 0x408F714C9BCBFCFA134ECF359ACED058BF4DF923CAED95D0DDF564 PUSH20 0x6F6C634300081E00330000000000000000000000 ",
							"sourceMap": "698:9376:5:-:0;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "11400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "library_deploy_address"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200f1e1f57fd7a408f714c9bcbfcfa134ecf359aced058bf4df923caed95d0ddf564736f6c634300081e0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/modules/InfinityPool.sol",
								"contracts/modules/Storage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/modules/InfinityPool.sol": {
				"InfinityPool": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "usersCount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUser",
									"type": "uint256"
								}
							],
							"name": "CommunityBonusDistributed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "packageLevel",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "incomeType",
									"type": "uint256"
								}
							],
							"name": "IncomeDistributed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "winner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromUserId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "LotteryReward",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sponsor",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "uplineId",
									"type": "uint256"
								}
							],
							"name": "Registration",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "level",
									"type": "string"
								}
							],
							"name": "RewardSent",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "packageLevel",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "depositType",
									"type": "string"
								}
							],
							"name": "Upgrade",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint8",
									"name": "matrixId",
									"type": "uint8"
								},
								{
									"indexed": true,
									"internalType": "uint32",
									"name": "userId",
									"type": "uint32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint32",
									"name": "parentId",
									"type": "uint32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "parentAddr",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "position",
									"type": "uint8"
								}
							],
							"name": "UserJoined",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalUsers",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUserReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "distributedAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "leftoverReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								}
							],
							"name": "WeeklyClosed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "joinTime",
									"type": "uint256"
								}
							],
							"name": "WeeklyContestQualified",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUserReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "claimTime",
									"type": "uint256"
								}
							],
							"name": "WeeklyRewardClaim",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ACC_PRECISION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MONTH_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERCENTS_DIVIDER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ROI_CAP_DIVIDER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ROI_CAP_MULTIPLIER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_userId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								}
							],
							"name": "RetopPoolByEarning",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TIME_STEP",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WEEK_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WeeklyCapping",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WeeklyTotalReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								}
							],
							"name": "canBuyNextPool",
							"outputs": [
								{
									"internalType": "bool",
									"name": "eligible",
									"type": "bool"
								},
								{
									"internalType": "string",
									"name": "reason",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "communityAccPerUser",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "creatorWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentMonthlyRound",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentMonthlyStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentWeeklyRound",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentWeeklyStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "defaultRefId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "glbBoosterPackages",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "minLevelForGlbBooster",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "minLevelForPool",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "minPoolForGlbBooster",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "monthlyCapping",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "packages",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "poolPackages",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "registeredUserIds",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "systemMaintance",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "teamDevelopment",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalUsers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_userId",
									"type": "uint256"
								}
							],
							"name": "upgradeBooster",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_userId",
									"type": "uint256"
								}
							],
							"name": "upgradePool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "_userId",
									"type": "uint32"
								},
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								}
							],
							"name": "upgradePoolByEarning",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdt",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore(0x40, 0x80)\n  jumpi(tag_4, callvalue)\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  sstore\n  mload(0x40)\n  0x01e0\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  dup3\n  dup3\n  lt\n  or\n  tag_6\n  jumpi\n  0x40\n  mstore\n    /* \"contracts/modules/Storage.sol\":1324:1333  15 * 1e18 */\n  0xd02ab486cedc0000\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  dup2\n  mstore\n    /* \"contracts/modules/Storage.sol\":1356:1365  25 * 1e18 */\n  0x015af1d78b58c40000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1388:1397  50 * 1e18 */\n  0x02b5e3af16b1880000\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1420:1430  100 * 1e18 */\n  0x056bc75e2d63100000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x60\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1453:1463  200 * 1e18 */\n  0x0ad78ebc5ac6200000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x80\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1486:1496  400 * 1e18 */\n  0x15af1d78b58c400000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xa0\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1519:1529  800 * 1e18 */\n  0x2b5e3af16b18800000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xc0\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1552:1563  1600 * 1e18 */\n  0x56bc75e2d631000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xe0\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1586:1597  3200 * 1e18 */\n  0xad78ebc5ac62000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0100\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1620:1631  6400 * 1e18 */\n  0x015af1d78b58c4000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0120\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1654:1666  12800 * 1e18 */\n  0x02b5e3af16b188000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0140\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1689:1701  25600 * 1e18 */\n  0x056bc75e2d6310000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0160\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1724:1736  51200 * 1e18 */\n  0x0ad78ebc5ac620000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0180\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1759:1772  102400 * 1e18 */\n  0x15af1d78b58c40000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x01a0\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1795:1808  204800 * 1e18 */\n  0x2b5e3af16b1880000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x01c0\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0b\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  sload\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0f\n  0x0b\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  sstore\n  dup1\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0f\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  lt\n  tag_8\n  jumpi\ntag_9:\n  pop\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0b\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  keccak256\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\ntag_10:\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0f\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  dup2\n  lt\n  tag_11\n  jumpi\n  tag_13\n  tag_1\n  jump\t// in\ntag_13:\n    /* \"contracts/modules/Storage.sol\":5058:5063  75e18 */\n  0x0410d586a20a4c0000\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  dup2\n  mstore\n    /* \"contracts/modules/Storage.sol\":5065:5071  300e18 */\n  0x1043561a8829300000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5073:5080  1200e18 */\n  0x410d586a20a4c00000\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5082:5089  4800e18 */\n  0x01043561a88293000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x60\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5091:5099  19200e18 */\n  0x0410d586a20a4c000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x80\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5101:5109  76800e18 */\n  0x1043561a882930000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xa0\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5111:5120  307200e18 */\n  0x410d586a20a4c0000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xc0\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x13\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  sload\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n  0x13\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  sstore\n  dup1\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  lt\n  tag_14\n  jumpi\ntag_15:\n  pop\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x13\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  keccak256\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\ntag_16:\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  dup2\n  lt\n  tag_17\n  jumpi\n  tag_19\n  tag_2\n  jump\t// in\ntag_19:\n    /* \"contracts/modules/Storage.sol\":1420:1430  100 * 1e18 */\n  0x056bc75e2d63100000\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  dup2\n  mstore\n    /* \"contracts/modules/Storage.sol\":1453:1463  200 * 1e18 */\n  0x0ad78ebc5ac6200000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1486:1496  400 * 1e18 */\n  0x15af1d78b58c400000\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1519:1529  800 * 1e18 */\n  0x2b5e3af16b18800000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x60\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1552:1563  1600 * 1e18 */\n  0x56bc75e2d631000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x80\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1586:1597  3200 * 1e18 */\n  0xad78ebc5ac62000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xa0\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1620:1631  6400 * 1e18 */\n  0x015af1d78b58c4000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xc0\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1654:1666  12800 * 1e18 */\n  0x02b5e3af16b188000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xe0\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x14\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  sload\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n  0x14\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  sstore\n  dup1\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  lt\n  tag_20\n  jumpi\ntag_21:\n  pop\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x14\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  keccak256\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\ntag_22:\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  dup2\n  lt\n  tag_23\n  jumpi\n  tag_25\n  tag_1\n  jump\t// in\ntag_25:\n    /* \"contracts/modules/Storage.sol\":5274:5275  3 */\n  0x03\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  dup2\n  mstore\n  0x05\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":5273:5297  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":5273:5297  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5283:5284  9 */\n  0x09\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x60\n    /* \"contracts/modules/Storage.sol\":5273:5297  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0b\n  0x80\n    /* \"contracts/modules/Storage.sol\":5273:5297  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5290:5292  13 */\n  0x0d\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xa0\n    /* \"contracts/modules/Storage.sol\":5273:5297  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0f\n  0xc0\n    /* \"contracts/modules/Storage.sol\":5273:5297  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\ntag_26:\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  dup2\n  lt\n  tag_27\n  jumpi\n  tag_29\n  tag_2\n  jump\t// in\ntag_29:\n    /* \"contracts/modules/Storage.sol\":5344:5345  4 */\n  0x04\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  dup2\n  mstore\n  0x05\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":5343:5368  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5350:5351  6 */\n  0x06\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":5343:5368  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x60\n    /* \"contracts/modules/Storage.sol\":5343:5368  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x80\n    /* \"contracts/modules/Storage.sol\":5343:5368  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5283:5284  9 */\n  0x09\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xa0\n    /* \"contracts/modules/Storage.sol\":5343:5368  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5362:5364  10 */\n  0x0a\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xc0\n    /* \"contracts/modules/Storage.sol\":5343:5368  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0b\n  0xe0\n    /* \"contracts/modules/Storage.sol\":5343:5368  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\ntag_30:\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  dup2\n  lt\n  tag_31\n  jumpi\n  tag_33\n  tag_2\n  jump\t// in\ntag_33:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":5413:5436  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":5413:5436  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x60\n    /* \"contracts/modules/Storage.sol\":5413:5436  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x80\n    /* \"contracts/modules/Storage.sol\":5413:5436  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xa0\n    /* \"contracts/modules/Storage.sol\":5413:5436  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xc0\n    /* \"contracts/modules/Storage.sol\":5413:5436  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xe0\n    /* \"contracts/modules/Storage.sol\":5413:5436  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\ntag_34:\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  dup2\n  lt\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":7098:7099  1 */\n  0x36\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":7144:7145  1 */\n  0x37\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":7189:7190  0 */\n  0x38\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":7235:7236  0 */\n  0x39\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":7275:7276  0 */\n  0x3a\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  sstore\n  mload(0x40)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_35:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  swap1\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  0xff\n  dup5\n  mload\n  and\n  swap4\n  add\n  swap3\n  dup2\n    /* \"contracts/modules/Storage.sol\":5413:5436  [0, 1, 1, 1, 1, 1, 1,1] */\n  0x24\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  add\n  sstore\n  add\n  jump(tag_34)\ntag_31:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  swap1\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  0xff\n  dup5\n  mload\n  and\n  swap4\n  add\n  swap3\n  dup2\n    /* \"contracts/modules/Storage.sol\":5343:5368  [4, 5, 6, 7, 8, 9, 10,11] */\n  0x1c\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  add\n  sstore\n  add\n  jump(tag_30)\ntag_27:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  swap1\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  0xff\n  dup5\n  mload\n  and\n  swap4\n  add\n  swap3\n  dup2\n    /* \"contracts/modules/Storage.sol\":5273:5297  [3, 5, 7, 9, 11, 13, 15] */\n  0x15\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  add\n  sstore\n  add\n  jump(tag_26)\ntag_23:\n  dup2\n  mload\n  sub(shl(0x50, 0x01), 0x01)\n  and\n  dup2\n  dup5\n  add\n  sstore\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  add\n  jump(tag_22)\ntag_20:\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x14\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n  tag_37\n  swap1\n  0xce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ec\n  add\n  0xce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4f4\n  tag_3\n  jump\t// in\ntag_37:\n  dup2\n  jump(tag_21)\ntag_17:\n  dup2\n  mload\n  sub(shl(0x50, 0x01), 0x01)\n  and\n  dup2\n  dup5\n  add\n  sstore\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  add\n  jump(tag_16)\ntag_14:\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x13\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n  tag_38\n  swap1\n  0x66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a090\n  add\n  0x66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a097\n  tag_3\n  jump\t// in\ntag_38:\n  dup2\n  jump(tag_15)\ntag_11:\n  dup2\n  mload\n  sub(shl(0x50, 0x01), 0x01)\n  and\n  dup2\n  dup5\n  add\n  sstore\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  add\n  jump(tag_10)\ntag_8:\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0b\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n  tag_39\n  swap1\n  0x0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9\n  add\n  0x0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01dc8\n  tag_3\n  jump\t// in\ntag_39:\n  0x00\n  jump(tag_9)\ntag_6:\n  shl(0xe0, 0x4e487b71)\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  mstore\n  mstore(0x04, 0x41)\n  0x24\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n  revert\ntag_4:\n  0x00\n  dup1\n  revert\ntag_1:\n  mload(0x40)\n  swap1\n  0xe0\n  dup3\n  add\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  dup4\n  dup3\n  lt\n  or\n  tag_6\n  jumpi\n  0x40\n  mstore\n  jump\t// out\ntag_2:\n  mload(0x40)\n  swap1\n  0x0100\n  dup3\n  add\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  dup4\n  dup3\n  lt\n  or\n  tag_6\n  jumpi\n  0x40\n  mstore\n  jump\t// out\ntag_3:\n  dup2\n  dup2\n  lt\n  tag_45\n  jumpi\n  pop\n  pop\n  jump\t// out\ntag_45:\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_3)\nstop\n\nsub_0: assembly {\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x80\n      dup1\n      0x40\n      mstore\n      jumpi(tag_28, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_28:\n      shr(0xe0, calldataload(0x00))\n      swap1\n      dup2\n      0x01c234a8\n      eq\n      tag_30\n      jumpi\n      pop\n      dup1\n      0x2132d204\n      eq\n      tag_32\n      jumpi\n      dup1\n      0x2350268f\n      eq\n      tag_34\n      jumpi\n      dup1\n      0x2a891534\n      eq\n      tag_36\n      jumpi\n      dup1\n      0x2f48ab7d\n      eq\n      tag_38\n      jumpi\n      dup1\n      0x3080b5bc\n      eq\n      tag_40\n      jumpi\n      dup1\n      0x32bc298c\n      eq\n      tag_42\n      jumpi\n      dup1\n      0x32fcd966\n      eq\n      tag_44\n      jumpi\n      dup1\n      0x375b43b4\n      eq\n      tag_46\n      jumpi\n      dup1\n      0x39ab3603\n      eq\n      tag_48\n      jumpi\n      dup1\n      0x4060160a\n      eq\n      tag_50\n      jumpi\n      dup1\n      0x58c7d352\n      eq\n      tag_52\n      jumpi\n      dup1\n      0x67d52d4d\n      eq\n      tag_54\n      jumpi\n      dup1\n      0x76f5f700\n      eq\n      tag_56\n      jumpi\n      dup1\n      0x7848f0a3\n      eq\n      tag_58\n      jumpi\n      dup1\n      0x78f6ad6d\n      eq\n      tag_60\n      jumpi\n      dup1\n      0x7cdc65f2\n      eq\n      tag_62\n      jumpi\n      dup1\n      0x8e222e24\n      eq\n      tag_64\n      jumpi\n      dup1\n      0x956a3228\n      eq\n      tag_66\n      jumpi\n      dup1\n      0xae4708dc\n      eq\n      tag_68\n      jumpi\n      dup1\n      0xbc1fa7c0\n      eq\n      tag_70\n      jumpi\n      dup1\n      0xbff1f9e1\n      eq\n      tag_72\n      jumpi\n      dup1\n      0xc216212a\n      eq\n      tag_74\n      jumpi\n      dup1\n      0xc8df2908\n      eq\n      tag_76\n      jumpi\n      dup1\n      0xc9ed0708\n      eq\n      tag_78\n      jumpi\n      dup1\n      0xca8e9121\n      eq\n      tag_80\n      jumpi\n      dup1\n      0xd0a2fd79\n      eq\n      tag_82\n      jumpi\n      dup1\n      0xe898fc38\n      eq\n      tag_84\n      jumpi\n      dup1\n      0xe9e34a16\n      eq\n      tag_86\n      jumpi\n      dup1\n      0xebe0ff15\n      eq\n      tag_88\n      jumpi\n      dup1\n      0xec597e6f\n      eq\n      tag_90\n      jumpi\n      dup1\n      0xf5d74d93\n      eq\n      tag_92\n      jumpi\n      0xfddc806f\n      eq\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      jumpi(tag_98, callvalue)\n      jumpi(tag_98, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":7152:7190  uint public currentWeeklyStartTime = 0 */\n      0x38\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_98:\n      0x00\n      dup1\n      revert\n    tag_92:\n      jumpi(tag_98, callvalue)\n      jumpi(tag_98, slt(add(not(0x03), calldatasize), 0x00))\n      sload(0x04)\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_90:\n      jumpi(tag_98, callvalue)\n      jumpi(tag_98, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":534:558  uint public defaultRefId */\n      0x05\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_88:\n      jumpi(tag_98, callvalue)\n      jumpi(tag_98, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":6996:7003  1000e18 */\n      0x3635c9adc5dea00000\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup2\n      mstore\n      return\n    tag_86:\n      jumpi(tag_98, callvalue)\n      jumpi(tag_98, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"contracts/modules/Storage.sol\":460:490  address public systemMaintance */\n      0x03\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      sload\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_84:\n      jumpi(tag_98, callvalue)\n      jumpi(tag_98, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":7197:7236  uint public currentMonthlyStartTime = 0 */\n      0x39\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_82:\n      jumpi(tag_98, callvalue)\n      jumpi(tag_98, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      0x08\n        /* \"contracts/modules/Storage.sol\":5304:5368  uint[8] public minLevelForGlbBooster = [4, 5, 6, 7, 8, 9, 10,11] */\n      dup2\n      lt\n      iszero\n      tag_98\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n      swap1\n        /* \"contracts/modules/Storage.sol\":5304:5368  uint[8] public minLevelForGlbBooster = [4, 5, 6, 7, 8, 9, 10,11] */\n      0x1c\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_80:\n      jumpi(tag_98, callvalue)\n      jumpi(tag_98, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":7065:7099  uint public currentWeeklyRound = 1 */\n      0x36\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_78:\n      jumpi(tag_98, callvalue)\n      jumpi(tag_98, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":7110:7145  uint public currentMonthlyRound = 1 */\n      0x37\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_76:\n      jumpi(tag_98, callvalue)\n      jumpi(tag_98, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":7048:7056  10000e18 */\n      0x021e19e0c9bab2400000\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup2\n      mstore\n      return\n    tag_74:\n      jumpi(tag_98, callvalue)\n      jumpi(tag_98, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \"contracts/modules/Storage.sol\":1288:1828  uint[] public packages = [... */\n      0x0b\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      sload\n        /* \"contracts/modules/Storage.sol\":1288:1828  uint[] public packages = [... */\n      dup2\n      lt\n      iszero\n      tag_98\n      jumpi\n      0x0b\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      sload\n      dup2\n      lt\n      iszero\n      tag_144\n      jumpi\n        /* \"contracts/modules/Storage.sol\":1288:1828  uint[] public packages = [... */\n      0x0b\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x00\n      mstore\n      0x0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_144:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_72:\n      jumpi(tag_98, callvalue)\n      jumpi(tag_98, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":565:587  uint public totalUsers */\n      0x06\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_70:\n      jumpi(tag_98, callvalue)\n      jumpi(tag_98, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      dup1\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":9259:9264  users */\n      0x0d\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/InfinityPool.sol\":9284:9339  require(user.account == msg.sender, \"Not your account\") */\n      tag_154\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup3\n      sload\n      and\n        /* \"contracts/modules/InfinityPool.sol\":9308:9318  msg.sender */\n      caller\n        /* \"contracts/modules/InfinityPool.sol\":9292:9318  user.account == msg.sender */\n      eq\n        /* \"contracts/modules/InfinityPool.sol\":9284:9339  require(user.account == msg.sender, \"Not your account\") */\n      tag_4\n      jump\t// in\n    tag_154:\n        /* \"contracts/modules/InfinityPool.sol\":9259:9264  users */\n      0x0d\n        /* \"contracts/modules/InfinityPool.sol\":9358:9375  user.boosterlevel */\n      dup2\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      swap1\n      dup2\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":9358:9379  user.boosterlevel < 8 */\n      swap2\n        /* \"contracts/modules/InfinityPool.sol\":9378:9379  8 */\n      0x08\n        /* \"contracts/modules/InfinityPool.sol\":9358:9379  user.boosterlevel < 8 */\n      dup4\n      lt\n        /* \"contracts/modules/InfinityPool.sol\":9350:9396  require(user.boosterlevel < 8, \"At max level\") */\n      tag_155\n      dup2\n      tag_5\n      jump\t// in\n    tag_155:\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      iszero\n      tag_144\n      jumpi\n      dup3\n        /* \"contracts/modules/InfinityPool.sol\":9567:9588  minLevelForGlbBooster */\n      0x1c\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      add\n      sload\n      dup4\n        /* \"contracts/modules/InfinityPool.sol\":9666:9686  minPoolForGlbBooster */\n      0x24\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      add\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":9810:9820  user.level */\n      swap1\n      0x06\n      dup5\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":9810:9837  user.level >= requiredLevel */\n      lt\n      iszero\n        /* \"contracts/modules/InfinityPool.sol\":9810:9871  user.level >= requiredLevel && user.poollevel >= requiredPool */\n      swap1\n      dup2\n      tag_158\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n    tag_159:\n      pop\n      iszero\n      tag_160\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":9977:9989  nextPool > 0 */\n      dup3\n        /* \"contracts/modules/InfinityPool.sol\":9973:10083  if (nextPool > 0) {... */\n      tag_162\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n    tag_163:\n      dup4\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":10102:10116  userHasbooster */\n      0x35\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup4\n      0x00\n      mstore\n      0x20\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":10093:10162  require(!userHasbooster[_userId][nextPool], \"Pool already purchased\") */\n      tag_164\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      and(sload(keccak256(0x00, 0x40)), 0xff)\n        /* \"contracts/modules/InfinityPool.sol\":10101:10135  !userHasbooster[_userId][nextPool] */\n      iszero\n        /* \"contracts/modules/InfinityPool.sol\":10093:10162  require(!userHasbooster[_userId][nextPool], \"Pool already purchased\") */\n      tag_6\n      jump\t// in\n    tag_164:\n        /* \"contracts/modules/InfinityPool.sol\":10195:10223  glbBoosterPackages[nextPool] */\n      tag_165\n      dup4\n      tag_1\n      jump\t// in\n    tag_165:\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      swap1\n      sload\n      sload(0x01)\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n        /* \"contracts/modules/InfinityPool.sol\":10291:10349  usdt.transferFrom(msg.sender, address(this), packagePrice) */\n      dup2\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":9308:9318  msg.sender */\n      caller\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x04\n        /* \"contracts/modules/InfinityPool.sol\":10291:10349  usdt.transferFrom(msg.sender, address(this), packagePrice) */\n      dup3\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":10329:10333  this */\n      address\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x24\n      dup3\n      add\n      mstore\n      0x03\n      swap4\n      swap1\n      swap4\n      shl\n      swap2\n      swap1\n      swap2\n      shr\n      0x44\n      dup4\n      add\n      dup2\n      swap1\n      mstore\n      swap3\n      swap2\n      swap1\n      0x20\n      swap1\n      dup3\n      swap1\n      0x64\n      swap1\n      dup3\n      swap1\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/modules/InfinityPool.sol\":10291:10349  usdt.transferFrom(msg.sender, address(this), packagePrice) */\n      gas\n      call\n      dup1\n      iszero\n      tag_167\n      jumpi\n      tag_169\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n    tag_170:\n      pop\n      dup1\n      sload\n      swap3\n      0x01\n      dup5\n      add\n      dup1\n      swap5\n      gt\n      tag_177\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":10591:10759  user.deposits.push(Deposit({... */\n      tag_173\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      swap4\n      0x01\n      swap3\n      sstore\n      dup6\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":10102:10116  userHasbooster */\n      0x35\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup6\n      0x00\n      mstore\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup3\n      not(0xff)\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/modules/InfinityPool.sol\":10454:10473  user.boosterDeposit */\n      0x0e\n      dup2\n      add\n        /* \"contracts/modules/InfinityPool.sol\":10454:10489  user.boosterDeposit += packagePrice */\n      tag_174\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup5\n      dup3\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":10454:10489  user.boosterDeposit += packagePrice */\n      tag_12\n      jump\t// in\n    tag_174:\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      swap1\n      sstore\n        /* \"contracts/modules/InfinityPool.sol\":10535:10547  packagePrice */\n      tag_175\n      dup4\n      dup8\n      dup8\n      tag_22\n      jump\t// in\n    tag_175:\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      mload(0x40)\n      swap3\n      tag_176\n      dup5\n      tag_7\n      jump\t// in\n    tag_176:\n      dup4\n      mstore\n      0x00\n      0x20\n        /* \"contracts/modules/InfinityPool.sol\":10610:10758  Deposit({... */\n      dup5\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":10702:10717  block.timestamp */\n      timestamp\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x40\n        /* \"contracts/modules/InfinityPool.sol\":10610:10758  Deposit({... */\n      dup5\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":10744:10746  11 */\n      0x0b\n        /* \"contracts/modules/InfinityPool.sol\":10610:10758  Deposit({... */\n      0x60\n      dup5\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":10591:10604  user.deposits */\n      add\n        /* \"contracts/modules/InfinityPool.sol\":10591:10759  user.deposits.push(Deposit({... */\n      tag_13\n      jump\t// in\n    tag_173:\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x01\n      dup2\n      add\n      dup1\n      swap2\n      gt\n      tag_177\n      jumpi\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      0x40\n      0x20\n      dup3\n      add\n      mstore\n      0x07\n      0x40\n      dup3\n      add\n      mstore\n      shl(0xc9, 0x2137b7b9ba32b9)\n        /* \"contracts/modules/InfinityPool.sol\":10610:10758  Deposit({... */\n      0x60\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup3\n      add\n      mstore\n      mload(0x00)\n      codecopy(0x00, data_92fb4c3df386bc0d49f8847c66cda554c07c2df42e065e03d639278ecf8d94a7, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n      0x80\n        /* \"contracts/modules/InfinityPool.sol\":9308:9318  msg.sender */\n      caller\n        /* \"contracts/modules/InfinityPool.sol\":10777:10830  Upgrade(msg.sender, _userId, nextPool + 1, \"Booster\") */\n      swap3\n      log3\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      stop\n    tag_177:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x11)\n        /* \"contracts/modules/InfinityPool.sol\":9666:9686  minPoolForGlbBooster */\n      0x24\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x00\n      revert\n        /* \"contracts/modules/InfinityPool.sol\":10291:10349  usdt.transferFrom(msg.sender, address(this), packagePrice) */\n    tag_169:\n      tag_179\n      swap1\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n        /* \"contracts/modules/InfinityPool.sol\":10291:10349  usdt.transferFrom(msg.sender, address(this), packagePrice) */\n      returndatasize\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n        /* \"contracts/modules/InfinityPool.sol\":10291:10349  usdt.transferFrom(msg.sender, address(this), packagePrice) */\n      gt\n      tag_180\n      jumpi\n    tag_181:\n      tag_182\n      dup2\n      dup4\n      tag_9\n      jump\t// in\n    tag_182:\n      dup2\n      add\n      swap1\n      tag_10\n      jump\t// in\n    tag_179:\n      jump(tag_170)\n    tag_180:\n      pop\n      returndatasize\n      jump(tag_181)\n    tag_167:\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"contracts/modules/InfinityPool.sol\":9973:10083  if (nextPool > 0) {... */\n    tag_162:\n      jump(tag_163)\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n    tag_160:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x15\n        /* \"contracts/modules/InfinityPool.sol\":9666:9686  minPoolForGlbBooster */\n      0x24\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup3\n      add\n      mstore\n      shl(0x5a, 0x155c19dc9859194814db1bdd08185b9908141bdbdb)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"contracts/modules/InfinityPool.sol\":9810:9871  user.level >= requiredLevel && user.poollevel >= requiredPool */\n    tag_158:\n        /* \"contracts/modules/InfinityPool.sol\":9841:9855  user.poollevel */\n      swap1\n      pop\n      0x0b\n      dup4\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":9841:9871  user.poollevel >= requiredPool */\n      lt\n      iszero\n        /* \"contracts/modules/InfinityPool.sol\":9810:9871  user.level >= requiredLevel && user.poollevel >= requiredPool */\n      dup6\n      jump(tag_159)\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n    tag_68:\n      jumpi(tag_98, callvalue)\n      jumpi(tag_98, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \"contracts/modules/Storage.sol\":5028:5121  uint[] public poolPackages = [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n      0x13\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      sload\n        /* \"contracts/modules/Storage.sol\":5028:5121  uint[] public poolPackages = [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n      dup2\n      lt\n      iszero\n      tag_98\n      jumpi\n      tag_189\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n        /* \"contracts/modules/Storage.sol\":5028:5121  uint[] public poolPackages = [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n      swap2\n      tag_2\n      jump\t// in\n    tag_189:\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      swap1\n      sload\n      swap1\n      0x03\n      shl\n      shr\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_66:\n      jumpi(tag_98, callvalue)\n      jumpi(tag_98, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      0x08\n        /* \"contracts/modules/Storage.sol\":5375:5436  uint[8] public minPoolForGlbBooster = [0, 1, 1, 1, 1, 1, 1,1] */\n      dup2\n      lt\n      iszero\n      tag_98\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n      swap1\n        /* \"contracts/modules/Storage.sol\":5375:5436  uint[8] public minPoolForGlbBooster = [0, 1, 1, 1, 1, 1, 1,1] */\n      0x24\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_64:\n      jumpi(tag_98, callvalue)\n      jumpi(tag_98, slt(add(not(0x03), calldatasize), 0x40))\n      calldataload(0x04)\n      0xffffffff\n      dup2\n      and\n      dup1\n      swap2\n      sub\n      tag_98\n      jumpi\n      calldataload(0x24)\n      dup2\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":2220:2225  users */\n      0x0d\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/InfinityPool.sol\":2245:2300  require(user.account == msg.sender, \"Not your account\") */\n      tag_202\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup3\n      sload\n      and\n        /* \"contracts/modules/InfinityPool.sol\":2269:2279  msg.sender */\n      caller\n        /* \"contracts/modules/InfinityPool.sol\":2253:2279  user.account == msg.sender */\n      eq\n        /* \"contracts/modules/InfinityPool.sol\":2245:2300  require(user.account == msg.sender, \"Not your account\") */\n      tag_4\n      jump\t// in\n    tag_202:\n        /* \"contracts/modules/InfinityPool.sol\":2319:2333  user.poollevel */\n      0x0b\n      dup2\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      swap2\n        /* \"contracts/modules/InfinityPool.sol\":2311:2353  require(user.poollevel < 7, \"At max pool\") */\n      tag_203\n        /* \"contracts/modules/InfinityPool.sol\":2336:2337  7 */\n      0x07\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup5\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":2319:2337  user.poollevel < 7 */\n      lt\n        /* \"contracts/modules/InfinityPool.sol\":2311:2353  require(user.poollevel < 7, \"At max pool\") */\n      tag_15\n      jump\t// in\n    tag_203:\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x01\n      dup2\n      add\n      swap3\n      dup4\n      dup3\n      gt\n      tag_177\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":2468:2480  poolPackages */\n      0x13\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":2454:2487  _poolId + 1 < poolPackages.length */\n      dup5\n      lt\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      iszero\n      tag_206\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":2532:2557  poolPackages[_poolId + 1] */\n      tag_208\n      dup5\n      tag_2\n      jump\t// in\n    tag_208:\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      swap1\n      sload\n      swap1\n      0x03\n      shl\n      shr\n      dup3\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":2804:2817  userPooltopup */\n      0x2c\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup7\n      0x00\n      mstore\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup1\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":2854:2885  top.nextPoolAmt >= packagePrice */\n      dup3\n      dup2\n      lt\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      tag_209\n      jumpi\n      dup8\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":2938:2949  userHasPool */\n      0x31\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup8\n      0x00\n      mstore\n      0x20\n      mstore\n      jumpi(tag_211, and(sload(keccak256(0x00, 0x40)), 0xff))\n        /* \"contracts/modules/InfinityPool.sol\":3040:3071  top.nextPoolAmt -= packagePrice */\n      dup3\n      tag_213\n      swap2\n      tag_16\n      jump\t// in\n    tag_213:\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      swap1\n      sstore\n      dup2\n      sload\n      swap2\n      0x01\n      dup4\n      add\n      dup1\n      swap4\n      gt\n      tag_177\n      jumpi\n      0x02\n      swap5\n        /* \"contracts/modules/InfinityPool.sol\":3362:3554  user.deposits.push(Deposit({... */\n      tag_216\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      swap4\n      0x01\n      swap3\n      sstore\n        /* \"contracts/modules/InfinityPool.sol\":3149:3165  user.poolDeposit */\n      0x0c\n      dup2\n      add\n        /* \"contracts/modules/InfinityPool.sol\":3149:3181  user.poolDeposit += packagePrice */\n      tag_217\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup5\n      dup3\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":3149:3181  user.poolDeposit += packagePrice */\n      tag_12\n      jump\t// in\n    tag_217:\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      swap1\n      sstore\n      dup8\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":2938:2949  userHasPool */\n      0x31\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup8\n      0x00\n      mstore\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup3\n      not(0xff)\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/modules/InfinityPool.sol\":3275:3322  _placeInPool(targetPool, _userId, packagePrice) */\n      tag_175\n      dup4\n      dup10\n      dup10\n      tag_21\n      jump\t// in\n        /* \"contracts/modules/InfinityPool.sol\":3362:3554  user.deposits.push(Deposit({... */\n    tag_216:\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      add\n      dup1\n      swap2\n      gt\n      tag_177\n      jumpi\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      0x40\n      0x20\n      dup3\n      add\n      mstore\n      0x16\n      0x40\n      dup3\n      add\n      mstore\n      shl(0x50, 0x506f6f6c205570677261646520284561726e696e6729)\n        /* \"contracts/modules/InfinityPool.sol\":3381:3553  Deposit({... */\n      0x60\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup3\n      add\n      mstore\n      mload(0x00)\n      codecopy(0x00, data_92fb4c3df386bc0d49f8847c66cda554c07c2df42e065e03d639278ecf8d94a7, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n      0x80\n        /* \"contracts/modules/InfinityPool.sol\":2269:2279  msg.sender */\n      caller\n        /* \"contracts/modules/InfinityPool.sol\":3572:3642  Upgrade(msg.sender, _userId, targetPool + 1, \"Pool Upgrade (Earning)\") */\n      swap3\n      log3\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      stop\n    tag_211:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x416c726561647920707572636861736564206e65787420706f6f6c0000000000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_209:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1c\n      0x24\n      dup3\n      add\n      mstore\n      0x4e6f7420656e6f756768206e65787420706f6f6c2062616c616e636500000000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_206:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0e\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x92, 0x139bc81a1a59da195c881c1bdbdb)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_62:\n      jumpi(tag_98, callvalue)\n      jumpi(tag_98, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"contracts/modules/Storage.sol\":422:450  address public creatorWallet */\n      0x02\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      sload\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_60:\n      jumpi(tag_98, callvalue)\n      jumpi(tag_98, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":1131:1165  uint256 public communityAccPerUser */\n      0x09\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_58:\n      jumpi(tag_98, callvalue)\n      jumpi(tag_98, slt(add(not(0x03), calldatasize), 0x40))\n      calldataload(0x04)\n      calldataload(0x24)\n      dup2\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":987:992  users */\n      0x0d\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/InfinityPool.sol\":1012:1067  require(user.account == msg.sender, \"Not your account\") */\n      tag_234\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup3\n      sload\n      and\n        /* \"contracts/modules/InfinityPool.sol\":1036:1046  msg.sender */\n      caller\n        /* \"contracts/modules/InfinityPool.sol\":1020:1046  user.account == msg.sender */\n      eq\n        /* \"contracts/modules/InfinityPool.sol\":1012:1067  require(user.account == msg.sender, \"Not your account\") */\n      tag_4\n      jump\t// in\n    tag_234:\n        /* \"contracts/modules/InfinityPool.sol\":1078:1120  require(user.poollevel < 7, \"At max pool\") */\n      tag_235\n        /* \"contracts/modules/InfinityPool.sol\":1103:1104  7 */\n      0x07\n        /* \"contracts/modules/InfinityPool.sol\":1086:1100  user.poollevel */\n      0x0b\n      dup4\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":1086:1104  user.poollevel < 7 */\n      lt\n        /* \"contracts/modules/InfinityPool.sol\":1078:1120  require(user.poollevel < 7, \"At max pool\") */\n      tag_15\n      jump\t// in\n    tag_235:\n        /* \"contracts/modules/InfinityPool.sol\":1265:1286  poolPackages[_poolId] */\n      tag_236\n      dup3\n      tag_2\n      jump\t// in\n    tag_236:\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      swap1\n      sload\n      swap1\n      0x03\n      shl\n      shr\n      dup3\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":1331:1344  userPooltopup */\n      0x2c\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup5\n      0x00\n      mstore\n      0x20\n      mstore\n      0x01\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/InfinityPool.sol\":1381:1395  top.reTopupAmt */\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      swap2\n      dup3\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":1381:1411  top.reTopupAmt >= packagePrice */\n      swap1\n      dup3\n      dup3\n      lt\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      tag_237\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":1711:1903  user.deposits.push(Deposit({... */\n      tag_239\n        /* \"contracts/modules/InfinityPool.sol\":1482:1512  top.reTopupAmt -= packagePrice */\n      swap4\n      tag_240\n      dup5\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x01\n        /* \"contracts/modules/InfinityPool.sol\":1482:1512  top.reTopupAmt -= packagePrice */\n      swap5\n      tag_16\n      jump\t// in\n    tag_240:\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      swap1\n      sstore\n        /* \"contracts/modules/InfinityPool.sol\":1552:1568  user.poolDeposit */\n      0x0c\n      dup2\n      add\n        /* \"contracts/modules/InfinityPool.sol\":1552:1584  user.poolDeposit += packagePrice */\n      tag_241\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup5\n      dup3\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":1552:1584  user.poolDeposit += packagePrice */\n      tag_12\n      jump\t// in\n    tag_241:\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      swap1\n      sstore\n        /* \"contracts/modules/InfinityPool.sol\":1669:1681  packagePrice */\n      tag_242\n      dup4\n      dup8\n      dup8\n      tag_21\n      jump\t// in\n    tag_242:\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      mload(0x40)\n      swap3\n      tag_243\n      dup5\n      tag_7\n      jump\t// in\n    tag_243:\n      dup4\n      mstore\n      0x00\n      0x20\n        /* \"contracts/modules/InfinityPool.sol\":1730:1902  Deposit({... */\n      dup5\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":1822:1837  block.timestamp */\n      timestamp\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x40\n        /* \"contracts/modules/InfinityPool.sol\":1730:1902  Deposit({... */\n      dup5\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":1865:1867  10 */\n      0x0a\n        /* \"contracts/modules/InfinityPool.sol\":1730:1902  Deposit({... */\n      0x60\n      dup5\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":1711:1724  user.deposits */\n      add\n        /* \"contracts/modules/InfinityPool.sol\":1711:1903  user.deposits.push(Deposit({... */\n      tag_13\n      jump\t// in\n    tag_239:\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      0x40\n      0x20\n      dup3\n      add\n      mstore\n      0x16\n      0x40\n      dup3\n      add\n      mstore\n      shl(0x50, 0x506f6f6c205265546f70757020284561726e696e6729)\n        /* \"contracts/modules/InfinityPool.sol\":1730:1902  Deposit({... */\n      0x60\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup3\n      add\n      mstore\n      mload(0x00)\n      codecopy(0x00, data_92fb4c3df386bc0d49f8847c66cda554c07c2df42e065e03d639278ecf8d94a7, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n      0x80\n        /* \"contracts/modules/InfinityPool.sol\":1036:1046  msg.sender */\n      caller\n        /* \"contracts/modules/InfinityPool.sol\":1921:1984  Upgrade(msg.sender, _userId, _poolId, \"Pool ReTopup (Earning)\") */\n      swap3\n      log3\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      stop\n    tag_237:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1a\n      0x24\n      dup3\n      add\n      mstore\n      0x4e6f7420656e6f756768207265546f7075702062616c616e6365000000000000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_56:\n      jumpi(tag_98, callvalue)\n      jumpi(tag_98, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":6894:6900  7 days */\n      0x093a80\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup2\n      mstore\n      return\n    tag_54:\n      jumpi(tag_98, callvalue)\n      jumpi(tag_98, slt(add(not(0x03), calldatasize), 0x20))\n      0x60\n      tag_252\n      calldataload(0x04)\n      tag_14\n      jump\t// in\n    tag_252:\n      swap2\n      swap1\n      0x20\n      mload(0x40)\n      swap4\n      dup5\n      swap3\n      iszero\n      iszero\n      dup4\n      mstore\n      0x40\n      dup3\n      dup5\n      add\n      mstore\n      dup1\n      mload\n      swap2\n      dup3\n      swap2\n      dup3\n      0x40\n      dup7\n      add\n      mstore\n      add\n      dup5\n      dup5\n      add\n      mcopy\n      0x00\n      dup3\n      dup3\n      add\n      dup5\n      add\n      mstore\n      0x1f\n      add\n      not(0x1f)\n      and\n      dup2\n      add\n      sub\n      add\n      swap1\n      return\n    tag_52:\n      jumpi(tag_98, callvalue)\n      jumpi(tag_98, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":848:850  10 */\n      0x0a\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup2\n      mstore\n      return\n    tag_50:\n      jumpi(tag_98, callvalue)\n      jumpi(tag_98, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      dup1\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":3739:3744  users */\n      0x0d\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/InfinityPool.sol\":3764:3819  require(user.account == msg.sender, \"Not your account\") */\n      tag_261\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup3\n      sload\n      and\n        /* \"contracts/modules/InfinityPool.sol\":3788:3798  msg.sender */\n      caller\n        /* \"contracts/modules/InfinityPool.sol\":3772:3798  user.account == msg.sender */\n      eq\n        /* \"contracts/modules/InfinityPool.sol\":3764:3819  require(user.account == msg.sender, \"Not your account\") */\n      tag_4\n      jump\t// in\n    tag_261:\n        /* \"contracts/modules/InfinityPool.sol\":3838:3852  user.poollevel */\n      0x0b\n      dup2\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      swap1\n      dup2\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":3838:3856  user.poollevel < 7 */\n      swap2\n        /* \"contracts/modules/InfinityPool.sol\":3855:3856  7 */\n      0x07\n        /* \"contracts/modules/InfinityPool.sol\":3838:3856  user.poollevel < 7 */\n      dup4\n      lt\n        /* \"contracts/modules/InfinityPool.sol\":3830:3873  require(user.poollevel < 7, \"At max level\") */\n      tag_262\n      dup2\n      tag_5\n      jump\t// in\n    tag_262:\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      iszero\n      tag_144\n      jumpi\n      dup3\n        /* \"contracts/modules/InfinityPool.sol\":4036:4051  minLevelForPool */\n      0x15\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      add\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":4177:4187  user.level */\n      0x06\n      dup4\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":4177:4204  user.level >= requiredLevel */\n      lt\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      tag_265\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":4313:4325  nextPool > 0 */\n      dup3\n      iszero\n      swap1\n      dup2\n      iszero\n        /* \"contracts/modules/InfinityPool.sol\":4309:4416  if (nextPool > 0) {... */\n      tag_267\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n    tag_268:\n      dup5\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":4435:4446  userHasPool */\n      0x31\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup5\n      0x00\n      mstore\n      0x20\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":4426:4492  require(!userHasPool[_userId][nextPool], \"Pool already purchased\") */\n      tag_269\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      and(sload(keccak256(0x00, 0x40)), 0xff)\n        /* \"contracts/modules/InfinityPool.sol\":4434:4465  !userHasPool[_userId][nextPool] */\n      iszero\n        /* \"contracts/modules/InfinityPool.sol\":4426:4492  require(!userHasPool[_userId][nextPool], \"Pool already purchased\") */\n      tag_6\n      jump\t// in\n    tag_269:\n        /* \"contracts/modules/InfinityPool.sol\":4537:4559  poolPackages[nextPool] */\n      tag_270\n      dup5\n      tag_2\n      jump\t// in\n    tag_270:\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      swap1\n      sload\n      sload(0x01)\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n        /* \"contracts/modules/InfinityPool.sol\":4627:4685  usdt.transferFrom(msg.sender, address(this), packagePrice) */\n      dup2\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":3788:3798  msg.sender */\n      caller\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x04\n        /* \"contracts/modules/InfinityPool.sol\":4627:4685  usdt.transferFrom(msg.sender, address(this), packagePrice) */\n      dup3\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":4665:4669  this */\n      address\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x24\n      dup3\n      add\n      mstore\n      0x03\n      swap4\n      swap1\n      swap4\n      shl\n      swap2\n      swap1\n      swap2\n      shr\n      0x44\n      dup4\n      add\n      dup2\n      swap1\n      mstore\n      swap4\n      swap2\n      swap1\n      0x20\n      swap1\n      dup3\n      swap1\n      0x64\n      swap1\n      dup3\n      swap1\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/modules/InfinityPool.sol\":4627:4685  usdt.transferFrom(msg.sender, address(this), packagePrice) */\n      gas\n      call\n      dup1\n      iszero\n      tag_167\n      jumpi\n      tag_274\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n    tag_275:\n        /* \"contracts/modules/InfinityPool.sol\":4706:4940  if(nextPool == 0){... */\n      pop\n      tag_276\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n    tag_277:\n      dup1\n      sload\n      swap3\n      0x01\n      dup5\n      add\n      dup1\n      swap5\n      gt\n      tag_177\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":5160:5328  user.deposits.push(Deposit({... */\n      tag_280\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      swap4\n      0x01\n      swap3\n      sstore\n      dup6\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":4435:4446  userHasPool */\n      0x31\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup6\n      0x00\n      mstore\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup3\n      not(0xff)\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/modules/InfinityPool.sol\":5028:5044  user.poolDeposit */\n      0x0c\n      dup2\n      add\n        /* \"contracts/modules/InfinityPool.sol\":5028:5060  user.poolDeposit += packagePrice */\n      tag_241\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup5\n      dup3\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":5028:5060  user.poolDeposit += packagePrice */\n      tag_12\n      jump\t// in\n        /* \"contracts/modules/InfinityPool.sol\":5160:5328  user.deposits.push(Deposit({... */\n    tag_280:\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x01\n      dup2\n      add\n      dup1\n      swap2\n      gt\n      tag_177\n      jumpi\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      0x40\n      0x20\n      dup3\n      add\n      mstore\n      0x04\n      0x40\n      dup3\n      add\n      mstore\n      shl(0xe2, 0x141bdbdb)\n        /* \"contracts/modules/InfinityPool.sol\":5179:5327  Deposit({... */\n      0x60\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup3\n      add\n      mstore\n      mload(0x00)\n      codecopy(0x00, data_92fb4c3df386bc0d49f8847c66cda554c07c2df42e065e03d639278ecf8d94a7, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n      0x80\n        /* \"contracts/modules/InfinityPool.sol\":3788:3798  msg.sender */\n      caller\n        /* \"contracts/modules/InfinityPool.sol\":5346:5396  Upgrade(msg.sender, _userId, nextPool + 1, \"Pool\") */\n      swap3\n      log3\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      stop\n        /* \"contracts/modules/InfinityPool.sol\":4706:4940  if(nextPool == 0){... */\n    tag_276:\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x04\n        /* \"contracts/modules/InfinityPool.sol\":4756:4770  user.sponsorId */\n      dup4\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      sload\n      dup1\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":3739:3744  users */\n      0x0d\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":4788:4822  users[_sponsorId].registrationTime */\n      0x0f\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/InfinityPool.sol\":4788:4822  users[_sponsorId].registrationTime */\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":4825:4831  172800 */\n      0x02a300\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup2\n      add\n      dup1\n      swap2\n      gt\n      tag_177\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":4835:4850  block.timestamp */\n      timestamp\n      lt\n        /* \"contracts/modules/InfinityPool.sol\":4788:4850  users[_sponsorId].registrationTime + 172800 <= block.timestamp */\n      iszero\n        /* \"contracts/modules/InfinityPool.sol\":4785:4929  if(users[_sponsorId].registrationTime + 172800 <= block.timestamp){... */\n      tag_288\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":4706:4940  if(nextPool == 0){... */\n    tag_289:\n      pop\n      jump(tag_277)\n        /* \"contracts/modules/InfinityPool.sol\":4785:4929  if(users[_sponsorId].registrationTime + 172800 <= block.timestamp){... */\n    tag_288:\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":3739:3744  users */\n      0x0d\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":4871:4908  users[_sponsorId].directPoolQualified */\n      0x08\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/InfinityPool.sol\":4871:4908  users[_sponsorId].directPoolQualified */\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup1\n      sload\n      swap1\n      0x01\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_177\n      jumpi\n      sstore\n        /* \"contracts/modules/InfinityPool.sol\":4785:4929  if(users[_sponsorId].registrationTime + 172800 <= block.timestamp){... */\n      dup6\n      jump(tag_289)\n        /* \"contracts/modules/InfinityPool.sol\":4627:4685  usdt.transferFrom(msg.sender, address(this), packagePrice) */\n    tag_274:\n      tag_292\n      swap1\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n        /* \"contracts/modules/InfinityPool.sol\":4627:4685  usdt.transferFrom(msg.sender, address(this), packagePrice) */\n      returndatasize\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n        /* \"contracts/modules/InfinityPool.sol\":4627:4685  usdt.transferFrom(msg.sender, address(this), packagePrice) */\n      gt\n      tag_180\n      jumpi\n      tag_182\n      dup2\n      dup4\n      tag_9\n      jump\t// in\n    tag_292:\n      jump(tag_275)\n        /* \"contracts/modules/InfinityPool.sol\":4309:4416  if (nextPool > 0) {... */\n    tag_267:\n      jump(tag_268)\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n    tag_265:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x18\n      0x24\n      dup3\n      add\n      mstore\n      0x5570677261646520796f7572206c6576656c2066697273740000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_48:\n      jumpi(tag_98, callvalue)\n      jumpi(tag_98, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \"contracts/modules/Storage.sol\":864:895  uint[] public registeredUserIds */\n      0x07\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      sload\n        /* \"contracts/modules/Storage.sol\":864:895  uint[] public registeredUserIds */\n      dup2\n      lt\n      iszero\n      tag_98\n      jumpi\n      0x07\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      sload\n      dup2\n      lt\n      iszero\n      tag_144\n      jumpi\n        /* \"contracts/modules/Storage.sol\":864:895  uint[] public registeredUserIds */\n      0x07\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x00\n      mstore\n      0xa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_46:\n      jumpi(tag_98, callvalue)\n      jumpi(tag_98, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":789:791  15 */\n      0x0f\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup2\n      mstore\n      return\n    tag_44:\n      jumpi(tag_98, callvalue)\n      jumpi(tag_98, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":1120:1124  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup2\n      mstore\n      return\n    tag_42:\n      jumpi(tag_98, callvalue)\n      jumpi(tag_98, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":731:737  1 days */\n      0x015180\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup2\n      mstore\n      return\n    tag_40:\n      jumpi(tag_98, callvalue)\n      jumpi(tag_98, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":7243:7276  uint public WeeklyTotalReward = 0 */\n      0x3a\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_38:\n      jumpi(tag_98, callvalue)\n      jumpi(tag_98, slt(add(not(0x03), calldatasize), 0x00))\n      sload(0x01)\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_36:\n      jumpi(tag_98, callvalue)\n      jumpi(tag_98, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":6945:6952  30 days */\n      0x278d00\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup2\n      mstore\n      return\n    tag_34:\n      jumpi(tag_98, callvalue)\n      jumpi(tag_98, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \"contracts/modules/Storage.sol\":5128:5233  uint[] public glbBoosterPackages = [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n      0x14\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      sload\n        /* \"contracts/modules/Storage.sol\":5128:5233  uint[] public glbBoosterPackages = [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n      dup2\n      lt\n      iszero\n      tag_98\n      jumpi\n      tag_189\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n        /* \"contracts/modules/Storage.sol\":5128:5233  uint[] public glbBoosterPackages = [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n      swap2\n      tag_1\n      jump\t// in\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n    tag_32:\n      jumpi(tag_98, callvalue)\n      jumpi(tag_98, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      0x07\n        /* \"contracts/modules/Storage.sol\":5240:5297  uint[7] public minLevelForPool = [3, 5, 7, 9, 11, 13, 15] */\n      dup2\n      lt\n      iszero\n      tag_98\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n      swap1\n        /* \"contracts/modules/Storage.sol\":5240:5297  uint[7] public minLevelForPool = [3, 5, 7, 9, 11, 13, 15] */\n      0x15\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_30:\n      jumpi(tag_98, callvalue)\n      jumpi(tag_98, slt(add(not(0x03), calldatasize), 0x00))\n      dup1\n        /* \"contracts/modules/Storage.sol\":683:688  10000 */\n      0x2710\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n      swap3\n      mstore\n      return\n    tag_1:\n        /* \"contracts/modules/Storage.sol\":5128:5233  uint[] public glbBoosterPackages = [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n      0x14\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      sload\n      dup2\n      lt\n      iszero\n      tag_144\n      jumpi\n        /* \"contracts/modules/Storage.sol\":5128:5233  uint[] public glbBoosterPackages = [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n      0x14\n      0x00\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      swap1\n      0x00\n      swap1\n      jump\t// out\n    tag_2:\n        /* \"contracts/modules/InfinityPool.sol\":4537:4549  poolPackages */\n      0x13\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      sload\n      dup2\n      lt\n      iszero\n      tag_144\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":4537:4549  poolPackages */\n      0x13\n      0x00\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      swap1\n      0x00\n      swap1\n      jump\t// out\n    tag_3:\n      dup1\n      sload\n      dup3\n      lt\n      iszero\n      tag_144\n      jumpi\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      swap1\n      0x00\n      swap1\n      jump\t// out\n    tag_4:\n      iszero\n      tag_351\n      jumpi\n      jump\t// out\n    tag_351:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x10\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x82, 0x139bdd081e5bdd5c881858d8dbdd5b9d)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_5:\n      iszero\n      tag_353\n      jumpi\n      jump\t// out\n    tag_353:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa2, 0x105d081b585e081b195d995b)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_6:\n      iszero\n      tag_355\n      jumpi\n      jump\t// out\n    tag_355:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x16\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x52, 0x141bdbdb08185b1c9958591e481c1d5c98da185cd959)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_7:\n      0x80\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_357\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_357:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_8:\n      0xa0\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_357\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_9:\n      swap1\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_357\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_10:\n      swap1\n      dup2\n      0x20\n      swap2\n      sub\n      slt\n      tag_98\n      jumpi\n      mload\n      dup1\n      iszero\n      iszero\n      dup2\n      sub\n      tag_98\n      jumpi\n      swap1\n      jump\t// out\n    tag_12:\n      swap2\n      swap1\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_177\n      jumpi\n      jump\t// out\n    tag_13:\n      dup1\n      sload\n      shl(0x40, 0x01)\n      dup2\n      lt\n      iszero\n      tag_357\n      jumpi\n      0x01\n      dup2\n      add\n      dup1\n      dup4\n      sstore\n      dup2\n      lt\n      iszero\n      tag_144\n      jumpi\n      0x03\n      0x60\n      swap2\n      0xff\n      swap4\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      shl\n      add\n      dup5\n      mload\n      dup2\n      sstore\n      0x20\n      dup6\n      add\n      mload\n      0x01\n      dup3\n      add\n      sstore\n      0x40\n      dup6\n      add\n      mload\n      0x02\n      dup3\n      add\n      sstore\n      add\n      swap3\n      add\n      mload\n      and\n      not(0xff)\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n      jump\t// out\n        /* \"contracts/modules/InfinityPool.sol\":193:876  function canBuyNextPool(uint userId) public view returns (bool eligible, string memory reason) {... */\n    tag_14:\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x60\n      swap1\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":319:324  users */\n      0x0d\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/InfinityPool.sol\":359:373  user.poollevel */\n      0x0b\n      dup2\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      sload\n      swap2\n        /* \"contracts/modules/InfinityPool.sol\":400:412  poolPackages */\n      0x13\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":388:419  nextPool >= poolPackages.length */\n      dup4\n      lt\n      iszero\n        /* \"contracts/modules/InfinityPool.sol\":384:501  if (nextPool >= poolPackages.length) {... */\n      tag_373\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      pop\n      0x07\n      dup3\n      lt\n      iszero\n      tag_144\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":576:586  user.level */\n      0x06\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup3\n        /* \"contracts/modules/InfinityPool.sol\":534:549  minLevelForPool */\n      0x15\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      add\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":576:586  user.level */\n      swap2\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":576:602  user.level < requiredLevel */\n      lt\n        /* \"contracts/modules/InfinityPool.sol\":572:687  if (user.level < requiredLevel) {... */\n      tag_377\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":703:715  nextPool > 0 */\n      iszero\n      iszero\n        /* \"contracts/modules/InfinityPool.sol\":703:744  nextPool > 0 && user.poollevel < nextPool */\n      dup1\n      tag_379\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":193:876  function canBuyNextPool(uint userId) public view returns (bool eligible, string memory reason) {... */\n    tag_380:\n        /* \"contracts/modules/InfinityPool.sol\":699:814  if (nextPool > 0 && user.poollevel < nextPool) {... */\n      tag_381\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":834:838  true */\n      0x01\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      swap1\n      mload(0x40)\n      tag_383\n      0x40\n      dup3\n      tag_9\n      jump\t// in\n    tag_383:\n      0x19\n      dup2\n      mstore\n      0x456c696769626c6520746f20627579206e65787420706f6f6c00000000000000\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":193:876  function canBuyNextPool(uint userId) public view returns (bool eligible, string memory reason) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/modules/InfinityPool.sol\":699:814  if (nextPool > 0 && user.poollevel < nextPool) {... */\n    tag_381:\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x00\n      swap1\n      mload(0x40)\n      tag_384\n      0x40\n      dup3\n      tag_9\n      jump\t// in\n    tag_384:\n      0x17\n      dup2\n      mstore\n      0x4275792070726576696f757320706f6f6c206669727374000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":761:802  return (false, \"Buy previous pool first\") */\n      swap1\n      jump\t// out\n        /* \"contracts/modules/InfinityPool.sol\":703:744  nextPool > 0 && user.poollevel < nextPool */\n    tag_379:\n      pop\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x00\n        /* \"contracts/modules/InfinityPool.sol\":703:744  nextPool > 0 && user.poollevel < nextPool */\n      jump(tag_380)\n        /* \"contracts/modules/InfinityPool.sol\":572:687  if (user.level < requiredLevel) {... */\n    tag_377:\n        /* \"contracts/modules/InfinityPool.sol\":619:675  return (false, \"You need to reach a higher level first\") */\n      pop\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x00\n      swap1\n      mload(0x40)\n      tag_385\n      0x60\n      dup3\n      tag_9\n      jump\t// in\n    tag_385:\n      0x26\n      dup2\n      mstore\n      0x596f75206e65656420746f207265616368206120686967686572206c6576656c\n      0x20\n      dup3\n      add\n      mstore\n      shl(0xd2, 0x08199a5c9cdd)\n      0x40\n      dup3\n      add\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":619:675  return (false, \"You need to reach a higher level first\") */\n      swap1\n      jump\t// out\n        /* \"contracts/modules/InfinityPool.sol\":384:501  if (nextPool >= poolPackages.length) {... */\n    tag_373:\n        /* \"contracts/modules/InfinityPool.sol\":436:489  return (false, \"You are already at the highest pool\") */\n      swap3\n      swap2\n      pop\n      pop\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x00\n      swap2\n      tag_386\n      mload(0x40)\n      swap2\n      dup3\n      tag_9\n      jump\t// in\n    tag_386:\n      0x23\n      dup2\n      mstore\n      0x596f752061726520616c72656164792061742074686520686967686573742070\n      0x20\n      dup3\n      add\n      mstore\n      shl(0xea, 0x1bdbdb)\n      0x40\n      dup3\n      add\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":436:489  return (false, \"You are already at the highest pool\") */\n      swap1\n      jump\t// out\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n    tag_15:\n      iszero\n      tag_387\n      jumpi\n      jump\t// out\n    tag_387:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0b\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xaa, 0x105d081b585e081c1bdbdb)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_16:\n      swap2\n      swap1\n      dup3\n      sub\n      swap2\n      dup3\n      gt\n      tag_177\n      jumpi\n      jump\t// out\n    tag_17:\n      iszero\n      tag_391\n      jumpi\n      jump\t// out\n    tag_391:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x07\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xca, 0x125b9d985b1a59)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_18:\n      iszero\n      tag_393\n      jumpi\n      jump\t// out\n    tag_393:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x10\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x82, 0x125b98dbdc9c9958dd08185b5bdd5b9d)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_19:\n      dup1\n      sload\n      shl(0x40, 0x01)\n      dup2\n      lt\n      iszero\n      tag_357\n      jumpi\n      tag_397\n      swap2\n      0x01\n      dup3\n      add\n      dup2\n      sstore\n      tag_3\n      jump\t// in\n    tag_397:\n      dup2\n      swap3\n      swap2\n      sload\n      swap1\n      0x03\n      shl\n      swap2\n      dup3\n      shl\n      swap2\n      not(0x00)\n      swap1\n      shl\n      not\n      and\n      or\n      swap1\n      sstore\n      jump\t// out\n        /* \"contracts/modules/InfinityPool.sol\":5418:6526  function _placeInPool(uint256 poolId, uint userMainId, uint packagePrice) private {... */\n    tag_21:\n      swap3\n      swap2\n        /* \"contracts/modules/InfinityPool.sol\":5511:5559  require(poolId < poolPackages.length, \"Invalid\") */\n      tag_398\n        /* \"contracts/modules/InfinityPool.sol\":5528:5540  poolPackages */\n      0x13\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":5519:5547  poolId < poolPackages.length */\n      dup6\n      lt\n        /* \"contracts/modules/InfinityPool.sol\":5511:5559  require(poolId < poolPackages.length, \"Invalid\") */\n      tag_17\n      jump\t// in\n    tag_398:\n        /* \"contracts/modules/InfinityPool.sol\":5570:5632  require(msg.value == poolPackages[poolId], \"Incorrect amount\") */\n      tag_399\n        /* \"contracts/modules/InfinityPool.sol\":5591:5611  poolPackages[poolId] */\n      tag_400\n      dup6\n      tag_2\n      jump\t// in\n    tag_400:\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      swap1\n      sload\n      swap1\n      0x03\n      shl\n      shr\n        /* \"contracts/modules/InfinityPool.sol\":5578:5587  msg.value */\n      callvalue\n        /* \"contracts/modules/InfinityPool.sol\":5578:5611  msg.value == poolPackages[poolId] */\n      eq\n        /* \"contracts/modules/InfinityPool.sol\":5570:5632  require(msg.value == poolPackages[poolId], \"Incorrect amount\") */\n      tag_18\n      jump\t// in\n    tag_399:\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup4\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":5723:5732  poolUsers */\n      0x30\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      sload(keccak256(0x00, 0x40))\n        /* \"contracts/modules/InfinityPool.sol\":5838:5864  defaultRefId + uint(index) */\n      tag_401\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup2\n        /* \"contracts/modules/InfinityPool.sol\":5838:5850  defaultRefId */\n      0x05\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":5838:5864  defaultRefId + uint(index) */\n      tag_12\n      jump\t// in\n    tag_401:\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      swap1\n      dup6\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":5723:5732  poolUsers */\n      0x30\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":5875:5908  poolUsers[poolId].push(newUserId) */\n      tag_402\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup3\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/InfinityPool.sol\":5875:5908  poolUsers[poolId].push(newUserId) */\n      tag_19\n      jump\t// in\n    tag_402:\n      not(0x00)\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup2\n      add\n      swap1\n      dup2\n      gt\n      tag_177\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":6013:6043  poolUsers[poolId][parentIndex] */\n      tag_405\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x03\n        /* \"contracts/modules/InfinityPool.sol\":6395:6441  userChildren[poolId][parentId].push(newUserId) */\n      tag_406\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      swap3\n      dup9\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":5723:5732  poolUsers */\n      0x30\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      div\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/InfinityPool.sol\":6013:6043  poolUsers[poolId][parentIndex] */\n      tag_3\n      jump\t// in\n    tag_405:\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      swap1\n      sload\n      swap1\n      0x03\n      shl\n      shr\n      swap2\n      tag_407\n      mload(0x40)\n      tag_408\n      dup2\n      tag_8\n      jump\t// in\n    tag_408:\n      dup3\n      dup2\n      mstore\n      0x20\n        /* \"contracts/modules/InfinityPool.sol\":6115:6311  UserPool({... */\n      dup1\n      dup3\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup9\n      dup2\n      mstore\n      0x40\n        /* \"contracts/modules/InfinityPool.sol\":6115:6311  UserPool({... */\n      dup1\n      dup5\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup13\n      dup2\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":6115:6311  UserPool({... */\n      0x60\n      dup6\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup10\n      dup2\n      mstore\n      0x00\n        /* \"contracts/modules/InfinityPool.sol\":6115:6311  UserPool({... */\n      0x80\n      dup8\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup2\n      dup2\n      mstore\n      dup16\n      dup3\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":6082:6093  userPooldtl */\n      0x2d\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup8\n      mstore\n      dup5\n      dup3\n      keccak256\n      dup11\n      dup4\n      mstore\n      swap1\n      swap7\n      mstore\n      swap3\n      swap1\n      swap3\n      keccak256\n      swap5\n      mload\n      dup6\n      sstore\n      swap2\n      mload\n      0x01\n      dup6\n      add\n      sstore\n      swap1\n      mload\n      0x02\n      dup5\n      add\n      sstore\n      mload\n      0x03\n      dup4\n      add\n      sstore\n      mload\n      0x04\n      swap1\n      swap2\n      add\n      sstore\n      jump\n    tag_407:\n      dup7\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":6335:6348  userIdPerPool */\n      0x2f\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup6\n      0x00\n      mstore\n      0x20\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":6335:6384  userIdPerPool[poolId][userMainId].push(newUserId) */\n      tag_409\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup2\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/InfinityPool.sol\":6335:6384  userIdPerPool[poolId][userMainId].push(newUserId) */\n      tag_19\n      jump\t// in\n    tag_409:\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup7\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":6395:6407  userChildren */\n      0x2e\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup4\n      0x00\n      mstore\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/InfinityPool.sol\":6395:6441  userChildren[poolId][parentId].push(newUserId) */\n      tag_19\n      jump\t// in\n    tag_406:\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x03\n      dup3\n      div\n        /* \"contracts/modules/InfinityPool.sol\":6750:6775  uint totalDistributed = 0 */\n      swap5\n      0x00\n        /* \"contracts/modules/InfinityPool.sol\":6792:6800  uint i=0 */\n      swap4\n      0x00\n        /* \"contracts/modules/InfinityPool.sol\":6788:7969  for(uint i=0; i<3; i++){... */\n      swap3\n        /* \"contracts/modules/InfinityPool.sol\":6802:6805  i<3 */\n    tag_410:\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x03\n        /* \"contracts/modules/InfinityPool.sol\":6802:6805  i<3 */\n      dup5\n      lt\n      tag_411\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":6788:7969  for(uint i=0; i<3; i++){... */\n    tag_412:\n        /* \"contracts/modules/InfinityPool.sol\":8081:8107  _amount - totalDistributed */\n      pop\n      pop\n      pop\n      pop\n      tag_413\n      swap3\n      swap4\n      pop\n      tag_16\n      jump\t// in\n    tag_413:\n        /* \"contracts/modules/InfinityPool.sol\":8122:8136  _remaining > 0 */\n      dup1\n        /* \"contracts/modules/InfinityPool.sol\":8118:8191  if (_remaining > 0) {... */\n      tag_414\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":5418:6526  function _placeInPool(uint256 poolId, uint userMainId, uint packagePrice) private {... */\n      pop\n      jump\t// out\n        /* \"contracts/modules/InfinityPool.sol\":8118:8191  if (_remaining > 0) {... */\n    tag_414:\n        /* \"contracts/modules/InfinityPool.sol\":8168:8178  _remaining */\n      tag_416\n      swap1\n      tag_25\n      jump\t// in\n    tag_416:\n        /* \"contracts/modules/InfinityPool.sol\":5418:6526  function _placeInPool(uint256 poolId, uint userMainId, uint packagePrice) private {... */\n      jump\t// out\n        /* \"contracts/modules/InfinityPool.sol\":6807:6810  i++ */\n    tag_411:\n        /* \"contracts/modules/InfinityPool.sol\":6843:6861  currentParent == 0 */\n      dup1\n      iszero\n        /* \"contracts/modules/InfinityPool.sol\":6843:6894  currentParent == 0 || currentParent == defaultRefId */\n      dup1\n      iszero\n      tag_417\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":6807:6810  i++ */\n    tag_418:\n        /* \"contracts/modules/InfinityPool.sol\":6839:7174  if (currentParent == 0 || currentParent == defaultRefId) {... */\n      tag_419\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup3\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":6082:6093  userPooldtl */\n      0x2d\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      swap1\n      0x00\n      mstore\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/InfinityPool.sol\":7285:7297  userp.mainid */\n      swap5\n      dup8\n        /* \"contracts/modules/InfinityPool.sol\":5980:5981  1 */\n      0x01\n        /* \"contracts/modules/InfinityPool.sol\":7285:7297  userp.mainid */\n      dup8\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":7333:7349  userp.bonusCount */\n      0x04\n      dup9\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup1\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":7352:7354  39 */\n      0x27\n        /* \"contracts/modules/InfinityPool.sol\":7333:7354  userp.bonusCount < 39 */\n      dup2\n      lt\n        /* \"contracts/modules/InfinityPool.sol\":7329:7826  if (userp.bonusCount < 39) {... */\n      tag_421\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":6807:6810  i++ */\n    tag_422:\n        /* \"contracts/modules/InfinityPool.sol\":7849:7883  totalDistributed += amountPerLevel */\n      pop\n      pop\n      pop\n      tag_423\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x03\n        /* \"contracts/modules/InfinityPool.sol\":7849:7883  totalDistributed += amountPerLevel */\n      swap2\n        /* \"contracts/modules/InfinityPool.sol\":5980:5981  1 */\n      0x01\n        /* \"contracts/modules/InfinityPool.sol\":7849:7883  totalDistributed += amountPerLevel */\n      swap4\n      tag_12\n      jump\t// in\n    tag_423:\n        /* \"contracts/modules/InfinityPool.sol\":7943:7957  userp.parentId */\n      swap7\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":6807:6810  i++ */\n      swap4\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      add\n        /* \"contracts/modules/InfinityPool.sol\":6792:6800  uint i=0 */\n      swap3\n      jump(tag_410)\n        /* \"contracts/modules/InfinityPool.sol\":7329:7826  if (userp.bonusCount < 39) {... */\n    tag_421:\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      swap1\n      swap2\n      swap3\n      pop\n        /* \"contracts/modules/InfinityPool.sol\":5980:5981  1 */\n      0x01\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup2\n      add\n      dup1\n      swap2\n      gt\n      tag_177\n      jumpi\n      swap1\n      dup2\n      swap1\n      sstore\n      dup10\n      swap1\n        /* \"contracts/modules/InfinityPool.sol\":7441:7443  24 */\n      0x18\n        /* \"contracts/modules/InfinityPool.sol\":7421:7443  userp.bonusCount <= 24 */\n      dup2\n      gt\n        /* \"contracts/modules/InfinityPool.sol\":7441:7443  24 */\n      tag_426\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      pop\n      pop\n      dup1\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":8365:8376  userIncomes */\n      0x0e\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":8472:8486  inc.poolIncome */\n      0x08\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/InfinityPool.sol\":8399:8424  inc.totalIncome += amount */\n      tag_428\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup12\n      dup3\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":8399:8424  inc.totalIncome += amount */\n      tag_12\n      jump\t// in\n    tag_428:\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup2\n      sstore\n        /* \"contracts/modules/InfinityPool.sol\":8472:8486  inc.poolIncome */\n      add\n        /* \"contracts/modules/InfinityPool.sol\":8472:8496  inc.poolIncome += amount */\n      tag_429\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup11\n      dup3\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":8472:8496  inc.poolIncome += amount */\n      tag_12\n      jump\t// in\n    tag_429:\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      swap1\n      sstore\n      dup1\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":8625:8638  incomeHistory */\n      0x0f\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":8625:8882  incomeHistory[receiverId].push(Income({... */\n      tag_430\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      keccak256(0x00, 0x40)\n      mload(0x40)\n      swap1\n      tag_431\n      dup3\n      tag_8\n      jump\t// in\n    tag_431:\n      dup6\n      dup3\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":8656:8881  Income({... */\n      dup12\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n        /* \"contracts/modules/InfinityPool.sol\":8656:8881  Income({... */\n      dup4\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":5980:5981  1 */\n      0x01\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x40\n        /* \"contracts/modules/InfinityPool.sol\":8656:8881  Income({... */\n      dup4\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":8792:8807  block.timestamp */\n      timestamp\n        /* \"contracts/modules/InfinityPool.sol\":6115:6311  UserPool({... */\n      0x60\n        /* \"contracts/modules/InfinityPool.sol\":8656:8881  Income({... */\n      dup4\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":7529:7531  10 */\n      0x0a\n        /* \"contracts/modules/InfinityPool.sol\":6115:6311  UserPool({... */\n      0x80\n        /* \"contracts/modules/InfinityPool.sol\":8656:8881  Income({... */\n      dup4\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":8625:8882  incomeHistory[receiverId].push(Income({... */\n      tag_24\n      jump\t// in\n    tag_430:\n      0x00\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":8908:8913  users */\n      0x0d\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup9\n      iszero\n      swap2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/modules/InfinityPool.sol\":8970:8972  95 */\n      0x5f\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup11\n      dup2\n      mul\n      swap1\n      dup12\n      dup3\n      div\n      eq\n      dup5\n      or\n      iszero\n      tag_177\n      jumpi\n      sload(0x01)\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n        /* \"contracts/modules/InfinityPool.sol\":8989:9017  usdt.transfer(to, netamount) */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup5\n      dup2\n      and\n        /* \"contracts/modules/InfinityPool.sol\":7333:7349  userp.bonusCount */\n      0x04\n        /* \"contracts/modules/InfinityPool.sol\":8989:9017  usdt.transfer(to, netamount) */\n      dup4\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":8975:8978  100 */\n      0x64\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      swap1\n      swap4\n      div\n      0x24\n      dup3\n      add\n      mstore\n      swap2\n      0x20\n      swap2\n      dup4\n      swap2\n      0x44\n      swap2\n      dup4\n      swap2\n      0x00\n      swap2\n      and\n        /* \"contracts/modules/InfinityPool.sol\":8989:9017  usdt.transfer(to, netamount) */\n      gas\n      call\n      dup1\n      iszero\n      tag_167\n      jumpi\n      tag_437\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":7417:7809  if (userp.bonusCount <= 24) {... */\n    tag_438:\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      pop\n        /* \"contracts/modules/InfinityPool.sol\":5838:5850  defaultRefId */\n      0x05\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup11\n      mul\n      swap3\n      dup11\n      dup5\n      div\n        /* \"contracts/modules/InfinityPool.sol\":5838:5850  defaultRefId */\n      0x05\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      eq\n      or\n      iszero\n      tag_177\n      jumpi\n      dup10\n      0x03\n      swap3\n        /* \"contracts/modules/InfinityPool.sol\":7849:7883  totalDistributed += amountPerLevel */\n      tag_423\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      swap3\n        /* \"contracts/modules/InfinityPool.sol\":9043:9059  (amount*5) / 100 */\n      tag_441\n        /* \"contracts/modules/InfinityPool.sol\":8975:8978  100 */\n      0x64\n        /* \"contracts/modules/InfinityPool.sol\":5980:5981  1 */\n      0x01\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      swap8\n      div\n        /* \"contracts/modules/InfinityPool.sol\":9043:9059  (amount*5) / 100 */\n      tag_25\n      jump\t// in\n    tag_441:\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup7\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":8908:8913  users */\n      0x0d\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      dup6\n      dup1\n      0xa0\n      shl\n      sub\n      sload(keccak256(0x00, 0x40))\n      and\n      swap1\n        /* \"contracts/modules/InfinityPool.sol\":9078:9157  IncomeDistributed(to, users[fromId].account, amount, packageLevel, _incomeType) */\n      0xe17b61d324ce17328f433d0ab62581c0f0aa997312bae80fbdfcd2aa9b91d6e3\n        /* \"contracts/modules/InfinityPool.sol\":6115:6311  UserPool({... */\n      0x60\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      mload(0x40)\n      dup7\n      dup2\n      mstore\n      dup10\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":7529:7531  10 */\n      0x0a\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x40\n      dup3\n      add\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":9078:9157  IncomeDistributed(to, users[fromId].account, amount, packageLevel, _incomeType) */\n      log3\n        /* \"contracts/modules/InfinityPool.sol\":7417:7809  if (userp.bonusCount <= 24) {... */\n    tag_442:\n        /* \"contracts/modules/InfinityPool.sol\":7329:7826  if (userp.bonusCount < 39) {... */\n      swap4\n      dup2\n      swap4\n      pop\n      jump(tag_422)\n        /* \"contracts/modules/InfinityPool.sol\":8989:9017  usdt.transfer(to, netamount) */\n    tag_437:\n      tag_443\n      swap1\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n        /* \"contracts/modules/InfinityPool.sol\":8989:9017  usdt.transfer(to, netamount) */\n      returndatasize\n      dup2\n      gt\n      tag_180\n      jumpi\n      tag_182\n      dup2\n      dup4\n      tag_9\n      jump\t// in\n    tag_443:\n      jump(tag_438)\n        /* \"contracts/modules/InfinityPool.sol\":7417:7809  if (userp.bonusCount <= 24) {... */\n    tag_426:\n        /* \"contracts/modules/InfinityPool.sol\":5980:5981  1 */\n      0x01\n      swap4\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x03\n      swap4\n        /* \"contracts/modules/InfinityPool.sol\":7849:7883  totalDistributed += amountPerLevel */\n      tag_423\n      swap4\n        /* \"contracts/modules/InfinityPool.sol\":7562:7584  userp.bonusCount <= 36 */\n      swap3\n        /* \"contracts/modules/InfinityPool.sol\":7582:7584  36 */\n      0x24\n      lt\n      tag_447\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup8\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":7609:7622  userPooltopup */\n      0x2c\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      swap1\n      0x00\n      mstore\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/InfinityPool.sol\":7609:7675  userPooltopup[_poolId][parentMainId].nextPoolAmt += amountPerLevel */\n      tag_449\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup4\n      dup3\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":7609:7675  userPooltopup[_poolId][parentMainId].nextPoolAmt += amountPerLevel */\n      tag_12\n      jump\t// in\n    tag_449:\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      swap1\n      sstore\n        /* \"contracts/modules/InfinityPool.sol\":7417:7809  if (userp.bonusCount <= 24) {... */\n      jump(tag_442)\n        /* \"contracts/modules/InfinityPool.sol\":7558:7809  if (userp.bonusCount <= 36) {... */\n    tag_447:\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup8\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":7724:7737  userPooltopup */\n      0x2c\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      swap1\n      0x00\n      mstore\n      0x20\n      mstore\n      dup5\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/InfinityPool.sol\":7724:7771  userPooltopup[_poolId][parentMainId].reTopupAmt */\n      add\n        /* \"contracts/modules/InfinityPool.sol\":7724:7789  userPooltopup[_poolId][parentMainId].reTopupAmt += amountPerLevel */\n      tag_449\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup4\n      dup3\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":7724:7789  userPooltopup[_poolId][parentMainId].reTopupAmt += amountPerLevel */\n      tag_12\n      jump\t// in\n        /* \"contracts/modules/InfinityPool.sol\":6839:7174  if (currentParent == 0 || currentParent == defaultRefId) {... */\n    tag_419:\n        /* \"contracts/modules/InfinityPool.sol\":7003:7029  _amount - totalDistributed */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/modules/InfinityPool.sol\":8081:8107  _amount - totalDistributed */\n      tag_413\n        /* \"contracts/modules/InfinityPool.sol\":7003:7029  _amount - totalDistributed */\n      swap3\n      swap4\n      pop\n      tag_452\n      dup3\n      dup3\n      tag_16\n      jump\t// in\n    tag_452:\n        /* \"contracts/modules/InfinityPool.sol\":7052:7065  remaining > 0 */\n      dup1\n        /* \"contracts/modules/InfinityPool.sol\":7048:7135  if (remaining > 0) {... */\n      tag_453\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":6839:7174  if (currentParent == 0 || currentParent == defaultRefId) {... */\n    tag_454:\n        /* \"contracts/modules/InfinityPool.sol\":7153:7158  break */\n      dup5\n      swap4\n      dup2\n      dup1\n      jump(tag_412)\n        /* \"contracts/modules/InfinityPool.sol\":7048:7135  if (remaining > 0) {... */\n    tag_453:\n        /* \"contracts/modules/InfinityPool.sol\":7105:7114  remaining */\n      tag_455\n      swap1\n      tag_25\n      jump\t// in\n    tag_455:\n        /* \"contracts/modules/InfinityPool.sol\":7048:7135  if (remaining > 0) {... */\n      0x00\n      jump(tag_454)\n        /* \"contracts/modules/InfinityPool.sol\":6843:6894  currentParent == 0 || currentParent == defaultRefId */\n    tag_417:\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      pop\n        /* \"contracts/modules/InfinityPool.sol\":5838:5850  defaultRefId */\n      0x05\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":6865:6894  currentParent == defaultRefId */\n      dup2\n      eq\n        /* \"contracts/modules/InfinityPool.sol\":6843:6894  currentParent == 0 || currentParent == defaultRefId */\n      jump(tag_418)\n        /* \"contracts/modules/InfinityPool.sol\":10852:13052  function _placeInBooster(uint256 poolId, uint userMainId, uint packagePrice) private {... */\n    tag_22:\n        /* \"contracts/modules/InfinityPool.sol\":10948:11002  require(poolId < glbBoosterPackages.length, \"Invalid\") */\n      tag_456\n        /* \"contracts/modules/InfinityPool.sol\":10965:10983  glbBoosterPackages */\n      0x14\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":10956:10990  poolId < glbBoosterPackages.length */\n      dup3\n      lt\n        /* \"contracts/modules/InfinityPool.sol\":10948:11002  require(poolId < glbBoosterPackages.length, \"Invalid\") */\n      tag_17\n      jump\t// in\n    tag_456:\n        /* \"contracts/modules/InfinityPool.sol\":11013:11081  require(msg.value == glbBoosterPackages[poolId], \"Incorrect amount\") */\n      tag_457\n        /* \"contracts/modules/InfinityPool.sol\":11034:11060  glbBoosterPackages[poolId] */\n      tag_400\n      dup3\n      tag_1\n      jump\t// in\n        /* \"contracts/modules/InfinityPool.sol\":11013:11081  require(msg.value == glbBoosterPackages[poolId], \"Incorrect amount\") */\n    tag_457:\n      0x00\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":11175:11187  boosterUsers */\n      0x34\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      swap1\n        /* \"contracts/modules/InfinityPool.sol\":11345:11382  boosterUsers[poolId].push(userMainId) */\n      tag_459\n      swap1\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup5\n      swap1\n        /* \"contracts/modules/InfinityPool.sol\":11345:11382  boosterUsers[poolId].push(userMainId) */\n      tag_19\n      jump\t// in\n    tag_459:\n      not(0x00)\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup2\n      add\n      swap1\n      dup2\n      gt\n      tag_177\n      jumpi\n      0x03\n        /* \"contracts/modules/InfinityPool.sol\":11487:11520  boosterUsers[poolId][parentIndex] */\n      tag_462\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      swap2\n      dup4\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":11175:11187  boosterUsers */\n      0x34\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      div\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/InfinityPool.sol\":11487:11520  boosterUsers[poolId][parentIndex] */\n      tag_3\n      jump\t// in\n    tag_462:\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      swap1\n      sload\n      swap1\n      0x03\n      shl\n      shr\n      swap1\n      tag_463\n      mload(0x40)\n      tag_464\n      dup2\n      tag_8\n      jump\t// in\n    tag_464:\n      dup5\n      dup2\n      mstore\n      0x20\n        /* \"contracts/modules/InfinityPool.sol\":11595:11817  UserBooster({... */\n      dup1\n      dup3\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup5\n      dup2\n      mstore\n      0x40\n        /* \"contracts/modules/InfinityPool.sol\":11595:11817  UserBooster({... */\n      dup1\n      dup5\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup8\n      dup2\n      mstore\n      0x00\n        /* \"contracts/modules/InfinityPool.sol\":11595:11817  UserBooster({... */\n      0x60\n      dup7\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":11786:11801  block.timestamp */\n      timestamp\n        /* \"contracts/modules/InfinityPool.sol\":11595:11817  UserBooster({... */\n      0x80\n      dup9\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      swap1\n      dup2\n      mstore\n      dup10\n      dup4\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":11558:11572  userBoosterdtl */\n      0x32\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup8\n      mstore\n      dup5\n      dup4\n      keccak256\n      dup13\n      dup5\n      mstore\n      swap1\n      swap7\n      mstore\n      swap3\n      swap1\n      keccak256\n      swap5\n      mload\n      dup6\n      sstore\n      swap2\n      mload\n      0x01\n      dup6\n      add\n      sstore\n      swap1\n      mload\n      0x02\n      dup5\n      add\n      sstore\n      mload\n      0x03\n      dup4\n      add\n      sstore\n      mload\n      0x04\n      swap1\n      swap2\n      add\n      sstore\n      jump\n    tag_463:\n      dup1\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":11828:11847  userBoosterChildren */\n      0x33\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup3\n      0x00\n      mstore\n      0x20\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":11828:11882  userBoosterChildren[poolId][parentId].push(userMainId) */\n      tag_465\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup4\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/InfinityPool.sol\":11828:11882  userBoosterChildren[poolId][parentId].push(userMainId) */\n      tag_19\n      jump\t// in\n    tag_465:\n        /* \"contracts/modules/InfinityPool.sol\":11454:11455  1 */\n      0x01\n        /* \"contracts/modules/InfinityPool.sol\":11907:11918  poolId == 1 */\n      dup2\n      eq\n        /* \"contracts/modules/InfinityPool.sol\":11904:12488  if(poolId == 1  ){... */\n      tag_466\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":10852:13052  function _placeInBooster(uint256 poolId, uint userMainId, uint packagePrice) private {... */\n    tag_467:\n        /* \"contracts/modules/InfinityPool.sol\":12506:12519  parentId == 0 */\n      dup2\n      iszero\n        /* \"contracts/modules/InfinityPool.sol\":12506:12547  parentId == 0 || parentId == defaultRefId */\n      dup1\n      iszero\n      tag_468\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":10852:13052  function _placeInBooster(uint256 poolId, uint userMainId, uint packagePrice) private {... */\n    tag_469:\n        /* \"contracts/modules/InfinityPool.sol\":12502:12625  if (parentId == 0 || parentId == defaultRefId) {... */\n      tag_472\n      jumpi\n      0x00\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":11558:11572  userBoosterdtl */\n      0x32\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      0x00\n      mstore\n      0x20\n      mstore\n      0x03\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/InfinityPool.sol\":12712:12728  userB.bonusCount */\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x03\n      dup2\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":12712:12730  userB.bonusCount<3 */\n      lt\n        /* \"contracts/modules/InfinityPool.sol\":12708:12953  if( userB.bonusCount<3)... */\n      0x00\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      eq\n      tag_472\n      jumpi\n      dup1\n      sload\n      swap1\n        /* \"contracts/modules/InfinityPool.sol\":11454:11455  1 */\n      0x01\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_177\n      jumpi\n      sstore\n      dup1\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":8365:8376  userIncomes */\n      0x0e\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":8555:8572  inc.boosterIncome */\n      0x09\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/InfinityPool.sol\":8399:8424  inc.totalIncome += amount */\n      tag_476\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup6\n      dup3\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":8399:8424  inc.totalIncome += amount */\n      tag_12\n      jump\t// in\n    tag_476:\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup2\n      sstore\n        /* \"contracts/modules/InfinityPool.sol\":8555:8572  inc.boosterIncome */\n      add\n        /* \"contracts/modules/InfinityPool.sol\":8555:8582  inc.boosterIncome += amount */\n      tag_477\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup5\n      dup3\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":8555:8582  inc.boosterIncome += amount */\n      tag_12\n      jump\t// in\n    tag_477:\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      swap1\n      sstore\n      dup1\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":8625:8638  incomeHistory */\n      0x0f\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":8625:8882  incomeHistory[receiverId].push(Income({... */\n      tag_478\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      keccak256(0x00, 0x40)\n      mload(0x40)\n      swap1\n      tag_479\n      dup3\n      tag_8\n      jump\t// in\n    tag_479:\n      dup5\n      dup3\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":8656:8881  Income({... */\n      dup6\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n        /* \"contracts/modules/InfinityPool.sol\":8656:8881  Income({... */\n      dup4\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":11454:11455  1 */\n      0x01\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x40\n        /* \"contracts/modules/InfinityPool.sol\":8656:8881  Income({... */\n      dup4\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":11786:11801  block.timestamp */\n      timestamp\n        /* \"contracts/modules/InfinityPool.sol\":11595:11817  UserBooster({... */\n      0x60\n        /* \"contracts/modules/InfinityPool.sol\":8656:8881  Income({... */\n      dup4\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":12846:12848  11 */\n      0x0b\n        /* \"contracts/modules/InfinityPool.sol\":11595:11817  UserBooster({... */\n      0x80\n        /* \"contracts/modules/InfinityPool.sol\":8656:8881  Income({... */\n      dup4\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":8625:8882  incomeHistory[receiverId].push(Income({... */\n      tag_24\n      jump\t// in\n    tag_478:\n      0x00\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":8908:8913  users */\n      0x0d\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      dup3\n      iszero\n        /* \"contracts/modules/InfinityPool.sol\":8970:8972  95 */\n      0x5f\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup5\n      dup2\n      mul\n      swap1\n      dup6\n      dup3\n      div\n      eq\n      dup3\n      or\n      iszero\n      tag_177\n      jumpi\n      sload(0x01)\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n        /* \"contracts/modules/InfinityPool.sol\":8989:9017  usdt.transfer(to, netamount) */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup7\n      dup2\n      and\n        /* \"contracts/modules/InfinityPool.sol\":8989:9017  usdt.transfer(to, netamount) */\n      0x04\n      dup4\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":8975:8978  100 */\n      0x64\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      swap1\n      swap4\n      div\n      0x24\n      dup3\n      add\n      mstore\n      swap2\n      0x20\n      swap2\n      dup4\n      swap2\n      0x44\n      swap2\n      dup4\n      swap2\n      0x00\n      swap2\n      and\n        /* \"contracts/modules/InfinityPool.sol\":8989:9017  usdt.transfer(to, netamount) */\n      gas\n      call\n      dup1\n      iszero\n      tag_167\n      jumpi\n      tag_485\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":12708:12953  if( userB.bonusCount<3)... */\n    tag_486:\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      pop\n        /* \"contracts/modules/InfinityPool.sol\":9051:9052  5 */\n      0x05\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup5\n      mul\n      swap1\n      dup5\n      dup3\n      div\n        /* \"contracts/modules/InfinityPool.sol\":9051:9052  5 */\n      0x05\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      eq\n      or\n      iszero\n      tag_177\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":8975:8978  100 */\n      0x64\n        /* \"contracts/modules/InfinityPool.sol\":9043:9059  (amount*5) / 100 */\n      tag_489\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      swap2\n      div\n        /* \"contracts/modules/InfinityPool.sol\":9043:9059  (amount*5) / 100 */\n      tag_25\n      jump\t// in\n    tag_489:\n      0x00\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":8908:8913  users */\n      0x0d\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":9078:9157  IncomeDistributed(to, users[fromId].account, amount, packageLevel, _incomeType) */\n      0xe17b61d324ce17328f433d0ab62581c0f0aa997312bae80fbdfcd2aa9b91d6e3\n        /* \"contracts/modules/InfinityPool.sol\":11595:11817  UserBooster({... */\n      0x60\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      sload(keccak256(0x00, 0x40))\n      and\n      swap4\n      mload(0x40)\n        /* \"contracts/modules/InfinityPool.sol\":9078:9157  IncomeDistributed(to, users[fromId].account, amount, packageLevel, _incomeType) */\n      swap1\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup2\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":11454:11455  1 */\n      0x01\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":12846:12848  11 */\n      0x0b\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x40\n      dup3\n      add\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":9078:9157  IncomeDistributed(to, users[fromId].account, amount, packageLevel, _incomeType) */\n      log3\n        /* \"contracts/modules/InfinityPool.sol\":10852:13052  function _placeInBooster(uint256 poolId, uint userMainId, uint packagePrice) private {... */\n      jump\t// out\n        /* \"contracts/modules/InfinityPool.sol\":8989:9017  usdt.transfer(to, netamount) */\n    tag_485:\n      tag_490\n      swap1\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n        /* \"contracts/modules/InfinityPool.sol\":8989:9017  usdt.transfer(to, netamount) */\n      returndatasize\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n        /* \"contracts/modules/InfinityPool.sol\":8989:9017  usdt.transfer(to, netamount) */\n      gt\n      tag_180\n      jumpi\n      tag_182\n      dup2\n      dup4\n      tag_9\n      jump\t// in\n    tag_490:\n      jump(tag_486)\n        /* \"contracts/modules/InfinityPool.sol\":12708:12953  if( userB.bonusCount<3)... */\n    tag_472:\n        /* \"contracts/modules/InfinityPool.sol\":12907:12919  packagePrice */\n      pop\n      pop\n      pop\n      tag_416\n      swap1\n      tag_25\n      jump\t// in\n        /* \"contracts/modules/InfinityPool.sol\":12506:12547  parentId == 0 || parentId == defaultRefId */\n    tag_468:\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      pop\n        /* \"contracts/modules/InfinityPool.sol\":12535:12547  defaultRefId */\n      0x05\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":12523:12547  parentId == defaultRefId */\n      dup3\n      eq\n        /* \"contracts/modules/InfinityPool.sol\":12506:12547  parentId == 0 || parentId == defaultRefId */\n      jump(tag_469)\n        /* \"contracts/modules/InfinityPool.sol\":11904:12488  if(poolId == 1  ){... */\n    tag_466:\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup3\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":11958:11963  users */\n      0x0d\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      mload(0x40)\n      0x0200\n      dup2\n      add\n      dup2\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_357\n      jumpi\n      0x40\n      mstore\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      dup3\n      add\n      dup1\n      sload\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_357\n      jumpi\n      mload(0x40)\n      swap2\n      tag_500\n      0x20\n      dup4\n      0x05\n      shl\n      add\n      dup5\n      tag_9\n      jump\t// in\n    tag_500:\n      dup2\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      0x00\n      swap2\n    tag_501:\n      dup4\n      dup4\n      lt\n      tag_502\n      jumpi\n      pop\n      pop\n      pop\n      pop\n      0x20\n      dup3\n      add\n      mstore\n      0x02\n      dup3\n      add\n      sload\n      0x40\n      dup3\n      add\n      mstore\n      0x03\n      dup3\n      add\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":11595:11817  UserBooster({... */\n      0x60\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup3\n      add\n      mstore\n      0x01e0\n      0x0f\n      0x04\n      dup5\n      add\n      sload\n      swap4\n        /* \"contracts/modules/InfinityPool.sol\":11595:11817  UserBooster({... */\n      0x80\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup5\n      add\n      swap5\n      dup6\n      mstore\n      0x05\n      dup2\n      add\n      sload\n      0xa0\n      dup6\n      add\n      mstore\n      0x06\n      dup2\n      add\n      sload\n      0xc0\n      dup6\n      add\n      mstore\n      0x07\n      dup2\n      add\n      sload\n      0xe0\n      dup6\n      add\n      mstore\n      0x08\n      dup2\n      add\n      sload\n      0x0100\n      dup6\n      add\n      mstore\n      0x09\n      dup2\n      add\n      sload\n      0x0120\n      dup6\n      add\n      mstore\n      0x0a\n      dup2\n      add\n      sload\n      0x0140\n      dup6\n      add\n      mstore\n      0x0b\n      dup2\n      add\n      sload\n      0x0160\n      dup6\n      add\n      mstore\n      0x0c\n      dup2\n      add\n      sload\n      0x0180\n      dup6\n      add\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":11958:11963  users */\n      0x0d\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup2\n      add\n      sload\n      0x01a0\n      dup6\n      add\n      mstore\n      0x0e\n      dup2\n      add\n      sload\n      0x01c0\n      dup6\n      add\n      mstore\n      add\n      sload\n      swap2\n      add\n      swap1\n      dup2\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":12008:12026  currentWeeklyRound */\n      0x36\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      sload\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":11990:12007  weeklyUserDirects */\n      0x3e\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup3\n      mload\n      0x00\n      mstore\n      0x20\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":11990:12063  weeklyUserDirects[currentWeeklyRound][userdtl.sponsorId].push(userMainId) */\n      tag_504\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup6\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/InfinityPool.sol\":11990:12063  weeklyUserDirects[currentWeeklyRound][userdtl.sponsorId].push(userMainId) */\n      tag_19\n      jump\t// in\n    tag_504:\n        /* \"contracts/modules/InfinityPool.sol\":12008:12026  currentWeeklyRound */\n      0x36\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      sload\n      swap1\n      dup2\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":11990:12007  weeklyUserDirects */\n      0x3e\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup4\n      mload\n      0x00\n      mstore\n      0x20\n      mstore\n      sload(keccak256(0x00, 0x40))\n      swap1\n      mload\n      swap2\n        /* \"contracts/modules/Storage.sol\":731:737  1 days */\n      0x015180\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup4\n      add\n      dup1\n      swap4\n      gt\n      tag_177\n      jumpi\n      0x05\n        /* \"contracts/modules/InfinityPool.sol\":11786:11801  block.timestamp */\n      swap3\n      timestamp\n      gt\n        /* \"contracts/modules/InfinityPool.sol\":12181:12236  userdtl.registrationTime + TIME_STEP >= block.timestamp */\n      iszero\n        /* \"contracts/modules/InfinityPool.sol\":12178:12328  if(userdtl.registrationTime + TIME_STEP >= block.timestamp){... */\n      tag_507\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n    tag_508:\n        /* \"contracts/modules/InfinityPool.sol\":12346:12363  directsCount >= 5 */\n      pop\n      lt\n      iszero\n        /* \"contracts/modules/InfinityPool.sol\":12342:12463  if( directsCount >= 5){... */\n      tag_509\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n    tag_510:\n        /* \"contracts/modules/InfinityPool.sol\":11904:12488  if(poolId == 1  ){... */\n      pop\n      jump(tag_467)\n        /* \"contracts/modules/InfinityPool.sol\":12342:12463  if( directsCount >= 5){... */\n    tag_509:\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      mload\n        /* \"contracts/modules/InfinityPool.sol\":12008:12026  currentWeeklyRound */\n      0x36\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":12428:12446  currentWeeklyRound */\n      tag_511\n      swap2\n      tag_23\n      jump\t// in\n    tag_511:\n        /* \"contracts/modules/InfinityPool.sol\":12342:12463  if( directsCount >= 5){... */\n      0x00\n      jump(tag_510)\n        /* \"contracts/modules/InfinityPool.sol\":12178:12328  if(userdtl.registrationTime + TIME_STEP >= block.timestamp){... */\n    tag_507:\n        /* \"contracts/modules/InfinityPool.sol\":12293:12311  currentWeeklyRound */\n      tag_512\n      swap1\n      dup8\n      tag_23\n      jump\t// in\n    tag_512:\n        /* \"contracts/modules/InfinityPool.sol\":12178:12328  if(userdtl.registrationTime + TIME_STEP >= block.timestamp){... */\n      0x00\n      jump(tag_508)\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n    tag_502:\n      0x04\n      0x20\n        /* \"contracts/modules/InfinityPool.sol\":11454:11455  1 */\n      0x01\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      swap3\n      mload(0x40)\n      tag_513\n      dup2\n      tag_7\n      jump\t// in\n    tag_513:\n      dup6\n      sload\n      dup2\n      mstore\n      dup5\n      dup7\n      add\n      sload\n      dup4\n      dup3\n      add\n      mstore\n      0x02\n      dup7\n      add\n      sload\n      0x40\n      dup3\n      add\n      mstore\n      0xff\n      0x03\n      dup8\n      add\n      sload\n      and\n        /* \"contracts/modules/InfinityPool.sol\":11595:11817  UserBooster({... */\n      0x60\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup3\n      add\n      mstore\n      dup2\n      mstore\n      add\n      swap3\n      add\n      swap3\n      add\n      swap2\n      swap1\n      jump(tag_501)\n        /* \"contracts/modules/Storage.sol\":11038:11251  function _tryWeeklyContestQualify(uint _userId, uint _roundId)internal {... */\n    tag_23:\n      swap1\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup1\n      0x00\n      mstore\n        /* \"contracts/modules/Storage.sol\":11125:11138  weeklyUserdtl */\n      0x3d\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup3\n      0x00\n      mstore\n      0x20\n      mstore\n      0xff\n        /* \"contracts/modules/Storage.sol\":11125:11169  weeklyUserdtl[_roundId][_userId].isQualified */\n      0x04\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/Storage.sol\":11125:11169  weeklyUserdtl[_roundId][_userId].isQualified */\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      sload\n      0x08\n      shr\n      and\n        /* \"contracts/modules/Storage.sol\":11124:11169  !weeklyUserdtl[_roundId][_userId].isQualified */\n      iszero\n        /* \"contracts/modules/Storage.sol\":11120:11244  if (!weeklyUserdtl[_roundId][_userId].isQualified) {... */\n      tag_514\n      jumpi\n        /* \"contracts/modules/Storage.sol\":11038:11251  function _tryWeeklyContestQualify(uint _userId, uint _roundId)internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/modules/Storage.sol\":11120:11244  if (!weeklyUserdtl[_roundId][_userId].isQualified) {... */\n    tag_514:\n        /* \"contracts/modules/Storage.sol\":11223:11231  _roundId */\n      tag_416\n      swap2\n      tag_27\n      jump\t// in\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n    tag_24:\n      swap1\n      dup2\n      sload\n      shl(0x40, 0x01)\n      dup2\n      lt\n      iszero\n      tag_357\n      jumpi\n      0x01\n      dup2\n      add\n      dup1\n      dup5\n      sstore\n      dup2\n      lt\n      iszero\n      tag_144\n      jumpi\n      tag_416\n      swap3\n      0x00\n      mstore\n      0x05\n      keccak256(0x00, 0x20)\n      swap2\n      mul\n      add\n      swap1\n      0x80\n      0x04\n      swap2\n      dup1\n      mload\n      dup5\n      sstore\n      0x20\n      dup2\n      add\n      mload\n      0x01\n      dup6\n      add\n      sstore\n      0x40\n      dup2\n      add\n      mload\n      0x02\n      dup6\n      add\n      sstore\n      0x60\n      dup2\n      add\n      mload\n      0x03\n      dup6\n      add\n      sstore\n      add\n      mload\n      swap2\n      add\n      sstore\n      jump\n        /* \"contracts/modules/Storage.sol\":8483:9094  function _sendToCreator(uint _amount) internal {... */\n    tag_25:\n        /* \"contracts/modules/Storage.sol\":8545:8558  creatorWallet */\n      0x02\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/modules/Storage.sol\":8545:8572  creatorWallet != address(0) */\n      dup1\n      iszero\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      tag_522\n      jumpi\n      sload(0x01)\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x20\n      dup1\n      dup4\n      add\n      swap2\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      swap5\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x24\n      dup5\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      mstore\n      0x44\n      dup1\n      dup5\n      add\n      dup8\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      dup4\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      swap4\n      swap1\n      swap3\n      and\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      swap2\n      0x00\n      swap2\n      tag_524\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x64\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      tag_9\n      jump\t// in\n    tag_524:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8507:8928  assembly (\"memory-safe\") {... */\n      mload\n      swap1\n      dup3\n      dup6\n      gas\n      call\n      iszero\n      tag_167\n      jumpi\n      mload(0x00)\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      tag_528\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      pop\n      dup1\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_530:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      tag_531\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      pop\n        /* \"contracts/modules/Storage.sol\":8904:9090  incomeHistory[defaultRefId].push(Income({... */\n      tag_416\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      swap1\n        /* \"contracts/modules/Storage.sol\":8839:8851  defaultRefId */\n      0x05\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      sload\n      0x00\n      mstore\n        /* \"contracts/modules/Storage.sol\":8827:8838  userIncomes */\n      0x0e\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x20\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/Storage.sol\":8859:8895  creatorIncome.totalIncome += _amount */\n      tag_534\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup3\n      dup3\n      sload\n        /* \"contracts/modules/Storage.sol\":8859:8895  creatorIncome.totalIncome += _amount */\n      tag_12\n      jump\t// in\n    tag_534:\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      swap1\n      sstore\n        /* \"contracts/modules/Storage.sol\":8839:8851  defaultRefId */\n      0x05\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      sload\n      0x00\n      mstore\n        /* \"contracts/modules/Storage.sol\":8904:8917  incomeHistory */\n      0x0f\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x20\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      mstore\n      keccak256(0x00, 0x40)\n      mload(0x40)\n      swap2\n      tag_535\n      dup4\n      tag_8\n      jump\t// in\n    tag_535:\n      0x00\n      dup4\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x20\n        /* \"contracts/modules/Storage.sol\":8937:9089  Income({... */\n      dup4\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      mstore\n      0x00\n      0x40\n        /* \"contracts/modules/Storage.sol\":8937:9089  Income({... */\n      dup4\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      mstore\n        /* \"contracts/modules/Storage.sol\":9042:9057  block.timestamp */\n      timestamp\n        /* \"contracts/modules/Storage.sol\":8937:9089  Income({... */\n      0x60\n      dup4\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      mstore\n        /* \"contracts/modules/Storage.sol\":8839:8851  defaultRefId */\n      0x05\n        /* \"contracts/modules/Storage.sol\":8937:9089  Income({... */\n      0x80\n      dup4\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      mstore\n        /* \"contracts/modules/Storage.sol\":8904:9090  incomeHistory[defaultRefId].push(Income({... */\n      tag_24\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_531:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mstore(0x00, shl(0xe0, 0x5274afe7))\n      0x04\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x24\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_528:\n        /* \"contracts/modules/Storage.sol\":8691:8695  usdt */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_530)\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n    tag_522:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x11\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x7a, 0x199959481859191c9cc81b9bdd081cd95d)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"contracts/modules/Storage.sol\":11257:12759  function _weeklyContestQualifier(uint _userId, uint _roundId)internal {... */\n    tag_27:\n      swap1\n        /* \"contracts/modules/Storage.sol\":11367:11385  currentWeeklyRound */\n      0x36\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      sload\n      swap1\n        /* \"contracts/modules/Storage.sol\":11412:11442  _roundId == currentWeeklyRound */\n      dup2\n      dup2\n      sub\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      tag_536\n      jumpi\n      0x00\n      mstore\n        /* \"contracts/modules/Storage.sol\":11480:11496  weeklyContestdtl */\n      0x3b\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      0xff\n        /* \"contracts/modules/Storage.sol\":11480:11513  weeklyContestdtl[_roundId].closed */\n      0x08\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/Storage.sol\":11480:11513  weeklyContestdtl[_roundId].closed */\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      sload\n      and\n      tag_538\n      jumpi\n      0x00\n      dup3\n      dup2\n      mstore\n      mstore(0x20, 0x0d07fe408fa264e656a9c06e272928e4d4bb400d93cd5b5e74ac592f6170c2fd)\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n      swap1\n      mload\n      swap1\n      0x04\n      swap1\n      tag_540\n      dup4\n      tag_8\n      jump\t// in\n    tag_540:\n      dup1\n      sload\n      dup4\n      mstore\n        /* \"contracts/modules/Storage.sol\":11596:11597  1 */\n      0x01\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup2\n      add\n      sload\n      0x20\n      dup5\n      add\n      mstore\n      0x02\n      dup2\n      add\n      sload\n      0x40\n      dup5\n      add\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      0x60\n      dup5\n      add\n      mstore\n      add\n      sload\n      0x80\n      dup3\n      add\n      swap1\n      dup2\n      mstore\n      dup3\n      0x00\n      mstore\n        /* \"contracts/modules/Storage.sol\":11644:11661  weeklyUserDirects */\n      0x3e\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup5\n      0x00\n      mstore\n      0x20\n      mstore\n      dup4\n        /* \"contracts/modules/Storage.sol\":11695:11696  5 */\n      0x05\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      sload(keccak256(0x00, 0x40))\n        /* \"contracts/modules/Storage.sol\":11644:11696  weeklyUserDirects[currentRound][_userId].length >= 5 */\n      lt\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      swap3\n      mload\n        /* \"contracts/modules/Storage.sol\":11746:11778  userBoosterJoinDtl.id == _userId */\n      eq\n        /* \"contracts/modules/Storage.sol\":11746:11870  userBoosterJoinDtl.id == _userId && ... */\n      swap1\n      dup2\n      tag_541\n      jumpi\n        /* \"contracts/modules/Storage.sol\":11257:12759  function _weeklyContestQualifier(uint _userId, uint _roundId)internal {... */\n    tag_542:\n        /* \"contracts/modules/Storage.sol\":11644:11696  weeklyUserDirects[currentRound][_userId].length >= 5 */\n      pop\n      dup2\n      iszero\n        /* \"contracts/modules/Storage.sol\":11900:11936  hasEnoughDirects || boosterEarlyJoin */\n      swap2\n      tag_543\n      jumpi\n        /* \"contracts/modules/Storage.sol\":11257:12759  function _weeklyContestQualifier(uint _userId, uint _roundId)internal {... */\n    tag_544:\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      pop\n      iszero\n      tag_545\n      jumpi\n      dup1\n      0x00\n      mstore\n        /* \"contracts/modules/Storage.sol\":12337:12350  weeklyUserdtl */\n      0x3d\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup3\n      0x00\n      mstore\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/Storage.sol\":12388:12413  weeklyuserdtl.isQualified */\n      swap2\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x04\n        /* \"contracts/modules/Storage.sol\":12388:12413  weeklyuserdtl.isQualified */\n      dup4\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup1\n      sload\n      swap4\n      0xff\n      dup6\n        /* \"contracts/modules/Storage.sol\":11480:11513  weeklyContestdtl[_roundId].closed */\n      0x08\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      shr\n      and\n        /* \"contracts/modules/Storage.sol\":12384:12422  if (weeklyuserdtl.isQualified) return; */\n      tag_547\n      jumpi\n        /* \"contracts/modules/Storage.sol\":12689:12751  WeeklyContestQualified(currentRound, _userId, block.timestamp) */\n      0x360cb96d3e85b4fc299ddfa9a572850fc70961c86f0f1703f033143b0e5a82cf\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      swap5\n      dup5\n      0x02\n      0x0100\n      swap4\n      dup7\n      dup2\n      sstore\n        /* \"contracts/modules/Storage.sol\":12563:12578  block.timestamp */\n      timestamp\n        /* \"contracts/modules/Storage.sol\":11596:11597  1 */\n      0x01\n        /* \"contracts/modules/Storage.sol\":12538:12560  weeklyuserdtl.joinTime */\n      dup3\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      sstore\n        /* \"contracts/modules/Storage.sol\":12589:12610  weeklyuserdtl.roundId */\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      sstore\n      not(0xff00)\n      and\n      or\n      swap1\n      sstore\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":12689:12751  WeeklyContestQualified(currentRound, _userId, block.timestamp) */\n      swap2\n      dup3\n      swap2\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x60\n      dup4\n      add\n      swap2\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      mstore\n        /* \"contracts/modules/Storage.sol\":12563:12578  block.timestamp */\n      timestamp\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x40\n      dup4\n      add\n      mstore\n        /* \"contracts/modules/Storage.sol\":12689:12751  WeeklyContestQualified(currentRound, _userId, block.timestamp) */\n      sub\n      swap1\n      log1\n        /* \"contracts/modules/Storage.sol\":11257:12759  function _weeklyContestQualifier(uint _userId, uint _roundId)internal {... */\n      jump\t// out\n        /* \"contracts/modules/Storage.sol\":12384:12422  if (weeklyuserdtl.isQualified) return; */\n    tag_547:\n        /* \"contracts/modules/Storage.sol\":12415:12422  return; */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n    tag_545:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x4e6f7420656c696769626c6520666f72207765656b6c7920636f6e7465737400\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"contracts/modules/Storage.sol\":11900:11936  hasEnoughDirects || boosterEarlyJoin */\n    tag_543:\n      swap1\n      pop\n      0x00\n      jump(tag_544)\n        /* \"contracts/modules/Storage.sol\":11746:11870  userBoosterJoinDtl.id == _userId && ... */\n    tag_541:\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      swap1\n      pop\n      mload\n      dup4\n      0x00\n      mstore\n        /* \"contracts/modules/Storage.sol\":11827:11832  users */\n      0x0d\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n        /* \"contracts/modules/Storage.sol\":11827:11858  users[_userId].registrationTime */\n      0x0f\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/Storage.sol\":11827:11858  users[_userId].registrationTime */\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      sload\n      swap1\n        /* \"contracts/modules/Storage.sol\":731:737  1 days */\n      0x015180\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_177\n      jumpi\n        /* \"contracts/modules/Storage.sol\":11796:11870  userBoosterJoinDtl.joinTime <= users[_userId].registrationTime + TIME_STEP */\n      gt\n      iszero\n        /* \"contracts/modules/Storage.sol\":11746:11870  userBoosterJoinDtl.id == _userId && ... */\n      0x00\n      jump(tag_542)\n        /* \"contracts/modules/InfinityPool.sol\":102:13066  contract InfinityPool is Storage {... */\n    tag_538:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa2, 0x149bdd5b990818db1bdcd959)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_536:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0d\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x9a, 0x125b9d985b1a59081c9bdd5b99)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    stop\n    data_92fb4c3df386bc0d49f8847c66cda554c07c2df42e065e03d639278ecf8d94a7 babb6a363fd9a057996d09882c0b74b710d121707d19eeffd91c51c3171a7c91\n\n    auxdata: 0xa264697066735822122042e0053f21b04a4e35a7a6be6ef44bde4d88c4349eb2336c7980bfeb09fd2f0b64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"allocate_memory": {
									"entryPoint": 1311,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"allocate_memory_4384": {
									"entryPoint": 1342,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"clear_storage_range_uint256": {
									"entryPoint": 1374,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040523461051b5760015f556040516101e081016001600160401b038111828210176105075760405267d02ab486cedc0000815268015af1d78b58c4000060208201526802b5e3af16b1880000604082015268056bc75e2d631000006060820152680ad78ebc5ac620000060808201526815af1d78b58c40000060a0820152682b5e3af16b1880000060c08201526856bc75e2d63100000060e082015268ad78ebc5ac6200000061010082015269015af1d78b58c40000006101208201526902b5e3af16b18800000061014082015269056bc75e2d6310000000610160820152690ad78ebc5ac6200000006101808201526915af1d78b58c400000006101a0820152692b5e3af16b18800000006101c0820152600b54600f600b5580600f106104b1575b50600b5f5260205f20905f5b600f81106104945761014161051f565b680410d586a20a4c00008152681043561a8829300000602082015268410d586a20a4c0000060408201526901043561a882930000006060820152690410d586a20a4c0000006080820152691043561a88293000000060a082015269410d586a20a4c000000060c082015260135460076013558060071061043e575b5060135f5260205f20905f5b60078110610421576101d861053e565b68056bc75e2d631000008152680ad78ebc5ac620000060208201526815af1d78b58c4000006040820152682b5e3af16b1880000060608201526856bc75e2d631000000608082015268ad78ebc5ac6200000060a082015269015af1d78b58c400000060c08201526902b5e3af16b18800000060e08201526014546008601455806008106103cb575b5060145f5260205f20905f5b600881106103ae5761027c61051f565b60038152600560208201526007604082015260096060820152600b6080820152600d60a0820152600f60c08201525f5b60078110610396576102bc61053e565b6004815260056020820152600660408201526007606082015260086080820152600960a0820152600a60c0820152600b60e08201525f5b6008811061037e5761030361053e565b5f815260016020820152600160408201526001606082015260016080820152600160a0820152600160c0820152600160e08201525f5b6008811061036657600160365560016037555f6038555f6039555f603a55604051611ef790816105758239f35b600190602060ff845116930192816024015501610339565b600190602060ff84511693019281601c0155016102f3565b600190602060ff8451169301928160150155016102ac565b81516001600160501b03168184015560209091019060010161026c565b60145f5261041b907fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ec017fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4f461055e565b81610260565b81516001600160501b0316818401556020909101906001016101c8565b60135f5261048e907f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a090017f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a09761055e565b816101bc565b81516001600160501b031681840155602090910190600101610131565b600b5f52610501907f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9017f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01dc861055e565b5f610125565b634e487b7160e01b5f52604160045260245ffd5b5f80fd5b6040519060e082016001600160401b0381118382101761050757604052565b6040519061010082016001600160401b0381118382101761050757604052565b818110610569575050565b5f815560010161055e56fe6080806040526004361015610012575f80fd5b5f3560e01c90816301c234a814610e12575080632132d20414610de65780632350268f14610dbd5780632a89153414610da05780632f48ab7d14610d785780633080b5bc14610d5b57806332bc298c14610d3e57806332fcd96614610d1c578063375b43b414610d0157806339ab360314610ca75780634060160a14610a7a57806358c7d35214610a5f57806367d52d4d14610a0857806376f5f700146109eb5780637848f0a31461088d57806378f6ad6d146108705780637cdc65f2146108485780638e222e241461061d578063956a3228146105f1578063ae4708dc146105b9578063bc1fa7c01461036a578063bff1f9e11461034d578063c216212a146102df578063c8df2908146102bb578063c9ed07081461029e578063ca8e912114610281578063d0a2fd7914610255578063e898fc3814610238578063e9e34a1614610210578063ebe0ff15146101ed578063ec597e6f146101d0578063f5d74d93146101a85763fddc806f14610187575f80fd5b346101a4575f3660031901126101a4576020603854604051908152f35b5f80fd5b346101a4575f3660031901126101a4576004546040516001600160a01b039091168152602090f35b346101a4575f3660031901126101a4576020600554604051908152f35b346101a4575f3660031901126101a4576020604051683635c9adc5dea000008152f35b346101a4575f3660031901126101a4576003546040516001600160a01b039091168152602090f35b346101a4575f3660031901126101a4576020603954604051908152f35b346101a45760203660031901126101a45760043560088110156101a457602090601c0154604051908152f35b346101a4575f3660031901126101a4576020603654604051908152f35b346101a4575f3660031901126101a4576020603754604051908152f35b346101a4575f3660031901126101a457602060405169021e19e0c9bab24000008152f35b346101a45760203660031901126101a457600435600b548110156101a457600b5481101561033957600b5f527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90154604051908152602090f35b634e487b7160e01b5f52603260045260245ffd5b346101a4575f3660031901126101a4576020600654604051908152f35b346101a45760203660031901126101a457600435805f52600d60205260405f2061039e60018060a01b038254163314610e71565b600d810190815491600883106103b381610eb0565b156103395782601c01548360240154906006840154101590816105aa575b501561056d5782610568575b835f52603560205260405f20835f5260205261040060ff60405f20541615610eeb565b61040983610e2c565b90546001546040516323b872dd60e01b815233600482015230602482015260039390931b9190911c60448301819052929190602090829060649082905f906001600160a01b03165af1801561055d57610530575b508054926001840180941161051c576104d89360019255855f52603560205260405f20855f5260205260405f208260ff19825416179055600e81016104a3848254610fb6565b90556104b0838787611643565b604051926104bd84610f30565b83525f6020840152426040840152600b606084015201610fc3565b6001810180911161051c576040519081526040602082015260076040820152662137b7b9ba32b960c91b60608201525f516020611ea25f395f51905f5260803392a3005b634e487b7160e01b5f52601160045260245ffd5b6105519060203d602011610556575b6105498183610f7c565b810190610f9e565b61045d565b503d61053f565b6040513d5f823e3d90fd5b6103dd565b60405162461bcd60e51b8152602060048201526015602482015274155c19dc9859194814db1bdd08185b9908141bdbdb605a1b6044820152606490fd5b9050600b8301541015856103d1565b346101a45760203660031901126101a4576004356013548110156101a4576105e2602091610e44565b90549060031b1c604051908152f35b346101a45760203660031901126101a45760043560088110156101a45760209060240154604051908152f35b346101a45760403660031901126101a45760043563ffffffff81168091036101a457602435815f52600d60205260405f2061066260018060a01b038254163314610e71565b600b8101916106746007845410611178565b600181019283821161051c576013548410156108125761069384610e44565b90549060031b1c825f52602c60205260405f20865f5260205260405f2080548281106107cd57875f52603160205260405f20875f5260205260ff60405f20541661078857826106e1916111b2565b90558154916001830180931161051c576002946107389360019255600c810161070b848254610fb6565b9055875f52603160205260405f20875f5260205260405f208260ff198254161790556104b0838989611268565b0180911161051c57604051908152604060208201526016604082015275506f6f6c205570677261646520284561726e696e672960501b60608201525f516020611ea25f395f51905f5260803392a3005b60405162461bcd60e51b815260206004820152601b60248201527f416c726561647920707572636861736564206e65787420706f6f6c00000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601c60248201527f4e6f7420656e6f756768206e65787420706f6f6c2062616c616e6365000000006044820152606490fd5b60405162461bcd60e51b815260206004820152600e60248201526d139bc81a1a59da195c881c1bdbdb60921b6044820152606490fd5b346101a4575f3660031901126101a4576002546040516001600160a01b039091168152602090f35b346101a4575f3660031901126101a4576020600954604051908152f35b346101a45760403660031901126101a457600435602435815f52600d60205260405f206108c460018060a01b038254163314610e71565b6108d46007600b83015410611178565b6108dd82610e44565b90549060031b1c825f52602c60205260405f20845f52602052600160405f2001918254908282106109a65761095e93610918846001946111b2565b9055600c8101610929848254610fb6565b9055610936838787611268565b6040519261094384610f30565b83525f6020840152426040840152600a606084015201610fc3565b604051908152604060208201526016604082015275506f6f6c205265546f70757020284561726e696e672960501b60608201525f516020611ea25f395f51905f5260803392a3005b60405162461bcd60e51b815260206004820152601a60248201527f4e6f7420656e6f756768207265546f7075702062616c616e63650000000000006044820152606490fd5b346101a4575f3660031901126101a457602060405162093a808152f35b346101a45760203660031901126101a4576060610a2660043561101a565b91906020604051938492151583526040828401528051918291826040860152018484015e5f828201840152601f01601f19168101030190f35b346101a4575f3660031901126101a4576020604051600a8152f35b346101a45760203660031901126101a457600435805f52600d60205260405f20610aae60018060a01b038254163314610e71565b600b81019081549160078310610ac381610eb0565b15610339578260150154600683015410610c62578215908115610c5d575b845f52603160205260405f20845f52602052610b0460ff60405f20541615610eeb565b610b0d84610e44565b90546001546040516323b872dd60e01b815233600482015230602482015260039390931b9190911c60448301819052939190602090829060649082905f906001600160a01b03165af1801561055d57610c40575b50610bed575b8054926001840180941161051c57610bac9360019255855f52603160205260405f20855f5260205260405f208260ff19825416179055600c8101610929848254610fb6565b6001810180911161051c57604051908152604060208201526004604082015263141bdbdb60e21b60608201525f516020611ea25f395f51905f5260803392a3005b6004830154805f52600d602052600f60405f2001546202a300810180911161051c57421015610c1d575b50610b67565b5f52600d602052600860405f20018054906001820180921161051c575585610c17565b610c589060203d602011610556576105498183610f7c565b610b61565b610ae1565b60405162461bcd60e51b815260206004820152601860248201527f5570677261646520796f7572206c6576656c20666972737400000000000000006044820152606490fd5b346101a45760203660031901126101a4576004356007548110156101a4576007548110156103395760075f527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880154604051908152602090f35b346101a4575f3660031901126101a4576020604051600f8152f35b346101a4575f3660031901126101a4576020604051670de0b6b3a76400008152f35b346101a4575f3660031901126101a4576020604051620151808152f35b346101a4575f3660031901126101a4576020603a54604051908152f35b346101a4575f3660031901126101a4576001546040516001600160a01b039091168152602090f35b346101a4575f3660031901126101a457602060405162278d008152f35b346101a45760203660031901126101a4576004356014548110156101a4576105e2602091610e2c565b346101a45760203660031901126101a45760043560078110156101a45760209060150154604051908152f35b346101a4575f3660031901126101a4578061271060209252f35b6014548110156103395760145f5260205f2001905f90565b6013548110156103395760135f5260205f2001905f90565b8054821015610339575f5260205f2001905f90565b15610e7857565b60405162461bcd60e51b815260206004820152601060248201526f139bdd081e5bdd5c881858d8dbdd5b9d60821b6044820152606490fd5b15610eb757565b60405162461bcd60e51b815260206004820152600c60248201526b105d081b585e081b195d995b60a21b6044820152606490fd5b15610ef257565b60405162461bcd60e51b8152602060048201526016602482015275141bdbdb08185b1c9958591e481c1d5c98da185cd95960521b6044820152606490fd5b6080810190811067ffffffffffffffff821117610f4c57604052565b634e487b7160e01b5f52604160045260245ffd5b60a0810190811067ffffffffffffffff821117610f4c57604052565b90601f8019910116810190811067ffffffffffffffff821117610f4c57604052565b908160209103126101a4575180151581036101a45790565b9190820180921161051c57565b8054600160401b811015610f4c576001810180835581101561033957600360609160ff935f5260205f209060021b01845181556020850151600182015560408501516002820155019201511660ff19825416179055565b6060905f52600d60205260405f20600b8101549160135483101561112c575060078210156103395760068260150154910154106110df571515806110d8575b61109b5760019060405161106e604082610f7c565b601981527f456c696769626c6520746f20627579206e65787420706f6f6c00000000000000602082015290565b5f906040516110ab604082610f7c565b601781527f4275792070726576696f757320706f6f6c206669727374000000000000000000602082015290565b505f611059565b505f906040516110f0606082610f7c565b602681527f596f75206e65656420746f207265616368206120686967686572206c6576656c60208201526508199a5c9cdd60d21b604082015290565b929150505f9161113f6040519182610f7c565b602381527f596f752061726520616c726561647920617420746865206869676865737420706020820152621bdbdb60ea1b604082015290565b1561117f57565b60405162461bcd60e51b815260206004820152600b60248201526a105d081b585e081c1bdbdb60aa1b6044820152606490fd5b9190820391821161051c57565b156111c657565b60405162461bcd60e51b8152602060048201526007602482015266125b9d985b1a5960ca1b6044820152606490fd5b156111fc57565b60405162461bcd60e51b815260206004820152601060248201526f125b98dbdc9c9958dd08185b5bdd5b9d60821b6044820152606490fd5b8054600160401b811015610f4c5761125191600182018155610e5c565b819291549060031b91821b915f19901b1916179055565b929161127760135485106111bf565b61129161128385610e44565b90549060031b1c34146111f5565b835f52603060205260405f20546112aa81600554610fb6565b90855f5260306020526112c08260405f20611234565b5f19810190811161051c576112e6600361138e92885f5260306020520460405f20610e5c565b90549060031b1c916113546040516112fd81610f60565b828152602080820188815260408084018c8152606085018981525f608087018181528f8252602d87528482208a83529096529290922094518555915160018501559051600284015551600383015551600490910155565b865f52602f60205260405f20855f526020526113738160405f20611234565b865f52602e60205260405f20835f5260205260405f20611234565b60038204945f935f925b600384106113c3575b505050506113b09293506111b2565b806113b85750565b6113c190611b5c565b565b80158015611638575b61160657825f52602d60205260405f20905f5260205260405f209487600187015460048801805460278110611418575b50505061140d600391600193610fb6565b960154930192611398565b909192506001810180911161051c57908190558990601881116115a9575050805f52600e602052600860405f206114508b8254610fb6565b81550161145e8a8254610fb6565b9055805f52600f60205261149e60405f206040519061147c82610f60565b8582528b602083015260016040830152426060830152600a6080830152611b01565b5f908152600d6020526040902054881591906001600160a01b0316605f8a8102908b82041484171561051c5760015460405163a9059cbb60e01b81526001600160a01b0384811660048301526064909304602482015291602091839160449183915f91165af1801561055d5761158d575b5060058a02928a8404600514171561051c578960039261140d92611537606460019704611b5c565b865f52600d602052858060a01b0360405f205416907fe17b61d324ce17328f433d0ab62581c0f0aa997312bae80fbdfcd2aa9b91d6e36060604051868152896020820152600a6040820152a35b938193506113fc565b6115a49060203d8111610556576105498183610f7c565b61150f565b60019360039361140d93926024106115e357875f52602c60205260405f20905f5260205260405f206115dc838254610fb6565b9055611584565b875f52602c60205260405f20905f526020528460405f20016115dc838254610fb6565b505050506113b092935061161a82826111b2565b80611629575b849381806113a1565b61163290611b5c565b5f611620565b5060055481146113cc565b61165060145482106111bf565b61165c61128382610e2c565b5f818152603460205260409020805490611677908490611234565b5f19810190811161051c57600361169a91835f5260346020520460405f20610e5c565b90549060031b1c906117086040516116b181610f60565b848152602080820184815260408084018781525f606086018181524260808801908152898352603287528483208c845290965292902094518555915160018501559051600284015551600383015551600490910155565b805f52603360205260405f20825f526020526117278360405f20611234565b600181146118e7575b811580156118dc575b6118d0575f52603260205260405f20815f52602052600360405f200160038154105f146118d0578054906001820180921161051c5755805f52600e602052600960405f20611788858254610fb6565b815501611796848254610fb6565b9055805f52600f6020526117d660405f20604051906117b482610f60565b84825285602083015260016040830152426060830152600b6080830152611b01565b5f908152600d60205260409020546001600160a01b0316908215605f848102908582041482171561051c5760015460405163a9059cbb60e01b81526001600160a01b0386811660048301526064909304602482015291602091839160449183915f91165af1801561055d576118b3575b506005840290848204600514171561051c5760646118649104611b5c565b5f52600d6020527fe17b61d324ce17328f433d0ab62581c0f0aa997312bae80fbdfcd2aa9b91d6e3606060018060a01b0360405f2054169360405190815260016020820152600b6040820152a3565b6118cb9060203d602011610556576105498183610f7c565b611846565b5050506113c190611b5c565b506005548214611739565b825f52600d60205260405f20604051610200810181811067ffffffffffffffff821117610f4c5760405281546001600160a01b0316815260018201805467ffffffffffffffff8111610f4c576040519161194760208360051b0184610f7c565b81835260208301905f5260205f205f915b838310611a8a5750505050602082015260028201546040820152600382015460608201526101e0600f60048401549360808401948552600581015460a0850152600681015460c0850152600781015460e085015260088101546101008501526009810154610120850152600a810154610140850152600b810154610160850152600c810154610180850152600d8101546101a0850152600e8101546101c0850152015491019081526036545f52603e60205260405f2082515f52602052611a228560405f20611234565b60365490815f52603e60205260405f2083515f5260205260405f205490519162015180830180931161051c57600592421115611a7a575b501015611a67575b50611730565b51603654611a7491611ace565b5f611a61565b611a849087611ace565b5f611a59565b60046020600192604051611a9d81610f30565b8554815284860154838201526002860154604082015260ff6003870154166060820152815201920192019190611958565b90805f52603d60205260405f20825f5260205260ff600460405f20015460081c1615611af8575050565b6113c191611c7b565b908154600160401b811015610f4c5760018101808455811015610339576113c1925f52600560205f20910201906080600491805184556020810151600185015560408101516002850155606081015160038501550151910155565b6002546001600160a01b03168015611c425760015460405163a9059cbb60e01b60208083019182526001600160a01b039485166024840152604480840187905283529390921692915f91611bb1606482610f7c565b519082855af11561055d575f513d611c395750803b155b611c2757506113c1906005545f52600e60205260405f20611bea828254610fb6565b90556005545f52600f60205260405f2060405191611c0783610f60565b5f835260208301525f604083015242606083015260056080830152611b01565b635274afe760e01b5f5260045260245ffd5b60011415611bc8565b60405162461bcd60e51b8152602060048201526011602482015270199959481859191c9cc81b9bdd081cd95d607a1b6044820152606490fd5b9060365490818103611e6c575f52603b60205260ff600860405f20015416611e38575f8281527f0d07fe408fa264e656a9c06e272928e4d4bb400d93cd5b5e74ac592f6170c2fd602052604090819020905190600490611cda83610f60565b80548352600181015460208401526002810154604084015260038101546060840152015460808201908152825f52603e60205260405f20845f5260205283600560405f2054109251149081611e0f575b50811591611e07575b5015611dc257805f52603d60205260405f20825f5260205260405f20916004830180549360ff8560081c16611dbb577f360cb96d3e85b4fc299ddfa9a572850fc70961c86f0f1703f033143b0e5a82cf9484600261010093868155426001820155015561ff0019161790556040519182916060830191835260208301524260408301520390a1565b5050505050565b60405162461bcd60e51b815260206004820152601f60248201527f4e6f7420656c696769626c6520666f72207765656b6c7920636f6e74657374006044820152606490fd5b90505f611d33565b905051835f52600d602052600f60405f2001549062015180820180921161051c5711155f611d2a565b60405162461bcd60e51b815260206004820152600c60248201526b149bdd5b990818db1bdcd95960a21b6044820152606490fd5b60405162461bcd60e51b815260206004820152600d60248201526c125b9d985b1a59081c9bdd5b99609a1b6044820152606490fdfebabb6a363fd9a057996d09882c0b74b710d121707d19eeffd91c51c3171a7c91a264697066735822122042e0053f21b04a4e35a7a6be6ef44bde4d88c4349eb2336c7980bfeb09fd2f0b64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x51B JUMPI PUSH1 0x1 PUSH0 SSTORE PUSH1 0x40 MLOAD PUSH2 0x1E0 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR PUSH2 0x507 JUMPI PUSH1 0x40 MSTORE PUSH8 0xD02AB486CEDC0000 DUP2 MSTORE PUSH9 0x15AF1D78B58C40000 PUSH1 0x20 DUP3 ADD MSTORE PUSH9 0x2B5E3AF16B1880000 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x56BC75E2D63100000 PUSH1 0x60 DUP3 ADD MSTORE PUSH9 0xAD78EBC5AC6200000 PUSH1 0x80 DUP3 ADD MSTORE PUSH9 0x15AF1D78B58C400000 PUSH1 0xA0 DUP3 ADD MSTORE PUSH9 0x2B5E3AF16B18800000 PUSH1 0xC0 DUP3 ADD MSTORE PUSH9 0x56BC75E2D631000000 PUSH1 0xE0 DUP3 ADD MSTORE PUSH9 0xAD78EBC5AC62000000 PUSH2 0x100 DUP3 ADD MSTORE PUSH10 0x15AF1D78B58C4000000 PUSH2 0x120 DUP3 ADD MSTORE PUSH10 0x2B5E3AF16B188000000 PUSH2 0x140 DUP3 ADD MSTORE PUSH10 0x56BC75E2D6310000000 PUSH2 0x160 DUP3 ADD MSTORE PUSH10 0xAD78EBC5AC620000000 PUSH2 0x180 DUP3 ADD MSTORE PUSH10 0x15AF1D78B58C40000000 PUSH2 0x1A0 DUP3 ADD MSTORE PUSH10 0x2B5E3AF16B1880000000 PUSH2 0x1C0 DUP3 ADD MSTORE PUSH1 0xB SLOAD PUSH1 0xF PUSH1 0xB SSTORE DUP1 PUSH1 0xF LT PUSH2 0x4B1 JUMPI JUMPDEST POP PUSH1 0xB PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH0 JUMPDEST PUSH1 0xF DUP2 LT PUSH2 0x494 JUMPI PUSH2 0x141 PUSH2 0x51F JUMP JUMPDEST PUSH9 0x410D586A20A4C0000 DUP2 MSTORE PUSH9 0x1043561A8829300000 PUSH1 0x20 DUP3 ADD MSTORE PUSH9 0x410D586A20A4C00000 PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x1043561A88293000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH10 0x410D586A20A4C000000 PUSH1 0x80 DUP3 ADD MSTORE PUSH10 0x1043561A882930000000 PUSH1 0xA0 DUP3 ADD MSTORE PUSH10 0x410D586A20A4C0000000 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x13 SLOAD PUSH1 0x7 PUSH1 0x13 SSTORE DUP1 PUSH1 0x7 LT PUSH2 0x43E JUMPI JUMPDEST POP PUSH1 0x13 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH0 JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x421 JUMPI PUSH2 0x1D8 PUSH2 0x53E JUMP JUMPDEST PUSH9 0x56BC75E2D63100000 DUP2 MSTORE PUSH9 0xAD78EBC5AC6200000 PUSH1 0x20 DUP3 ADD MSTORE PUSH9 0x15AF1D78B58C400000 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x2B5E3AF16B18800000 PUSH1 0x60 DUP3 ADD MSTORE PUSH9 0x56BC75E2D631000000 PUSH1 0x80 DUP3 ADD MSTORE PUSH9 0xAD78EBC5AC62000000 PUSH1 0xA0 DUP3 ADD MSTORE PUSH10 0x15AF1D78B58C4000000 PUSH1 0xC0 DUP3 ADD MSTORE PUSH10 0x2B5E3AF16B188000000 PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x14 SLOAD PUSH1 0x8 PUSH1 0x14 SSTORE DUP1 PUSH1 0x8 LT PUSH2 0x3CB JUMPI JUMPDEST POP PUSH1 0x14 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH0 JUMPDEST PUSH1 0x8 DUP2 LT PUSH2 0x3AE JUMPI PUSH2 0x27C PUSH2 0x51F JUMP JUMPDEST PUSH1 0x3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0xC0 DUP3 ADD MSTORE PUSH0 JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x396 JUMPI PUSH2 0x2BC PUSH2 0x53E JUMP JUMPDEST PUSH1 0x4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0xE0 DUP3 ADD MSTORE PUSH0 JUMPDEST PUSH1 0x8 DUP2 LT PUSH2 0x37E JUMPI PUSH2 0x303 PUSH2 0x53E JUMP JUMPDEST PUSH0 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 DUP3 ADD MSTORE PUSH0 JUMPDEST PUSH1 0x8 DUP2 LT PUSH2 0x366 JUMPI PUSH1 0x1 PUSH1 0x36 SSTORE PUSH1 0x1 PUSH1 0x37 SSTORE PUSH0 PUSH1 0x38 SSTORE PUSH0 PUSH1 0x39 SSTORE PUSH0 PUSH1 0x3A SSTORE PUSH1 0x40 MLOAD PUSH2 0x1EF7 SWAP1 DUP2 PUSH2 0x575 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH1 0xFF DUP5 MLOAD AND SWAP4 ADD SWAP3 DUP2 PUSH1 0x24 ADD SSTORE ADD PUSH2 0x339 JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH1 0xFF DUP5 MLOAD AND SWAP4 ADD SWAP3 DUP2 PUSH1 0x1C ADD SSTORE ADD PUSH2 0x2F3 JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH1 0xFF DUP5 MLOAD AND SWAP4 ADD SWAP3 DUP2 PUSH1 0x15 ADD SSTORE ADD PUSH2 0x2AC JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND DUP2 DUP5 ADD SSTORE PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x26C JUMP JUMPDEST PUSH1 0x14 PUSH0 MSTORE PUSH2 0x41B SWAP1 PUSH32 0xCE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4EC ADD PUSH32 0xCE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4F4 PUSH2 0x55E JUMP JUMPDEST DUP2 PUSH2 0x260 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND DUP2 DUP5 ADD SSTORE PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1C8 JUMP JUMPDEST PUSH1 0x13 PUSH0 MSTORE PUSH2 0x48E SWAP1 PUSH32 0x66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A090 ADD PUSH32 0x66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A097 PUSH2 0x55E JUMP JUMPDEST DUP2 PUSH2 0x1BC JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND DUP2 DUP5 ADD SSTORE PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x131 JUMP JUMPDEST PUSH1 0xB PUSH0 MSTORE PUSH2 0x501 SWAP1 PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 ADD PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DC8 PUSH2 0x55E JUMP JUMPDEST PUSH0 PUSH2 0x125 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0xE0 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x507 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x100 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x507 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x569 JUMPI POP POP JUMP JUMPDEST PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x55E JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1C234A8 EQ PUSH2 0xE12 JUMPI POP DUP1 PUSH4 0x2132D204 EQ PUSH2 0xDE6 JUMPI DUP1 PUSH4 0x2350268F EQ PUSH2 0xDBD JUMPI DUP1 PUSH4 0x2A891534 EQ PUSH2 0xDA0 JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0xD78 JUMPI DUP1 PUSH4 0x3080B5BC EQ PUSH2 0xD5B JUMPI DUP1 PUSH4 0x32BC298C EQ PUSH2 0xD3E JUMPI DUP1 PUSH4 0x32FCD966 EQ PUSH2 0xD1C JUMPI DUP1 PUSH4 0x375B43B4 EQ PUSH2 0xD01 JUMPI DUP1 PUSH4 0x39AB3603 EQ PUSH2 0xCA7 JUMPI DUP1 PUSH4 0x4060160A EQ PUSH2 0xA7A JUMPI DUP1 PUSH4 0x58C7D352 EQ PUSH2 0xA5F JUMPI DUP1 PUSH4 0x67D52D4D EQ PUSH2 0xA08 JUMPI DUP1 PUSH4 0x76F5F700 EQ PUSH2 0x9EB JUMPI DUP1 PUSH4 0x7848F0A3 EQ PUSH2 0x88D JUMPI DUP1 PUSH4 0x78F6AD6D EQ PUSH2 0x870 JUMPI DUP1 PUSH4 0x7CDC65F2 EQ PUSH2 0x848 JUMPI DUP1 PUSH4 0x8E222E24 EQ PUSH2 0x61D JUMPI DUP1 PUSH4 0x956A3228 EQ PUSH2 0x5F1 JUMPI DUP1 PUSH4 0xAE4708DC EQ PUSH2 0x5B9 JUMPI DUP1 PUSH4 0xBC1FA7C0 EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0xBFF1F9E1 EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0xC216212A EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0xC8DF2908 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0xC9ED0708 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0xCA8E9121 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0xD0A2FD79 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xE898FC38 EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0xE9E34A16 EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0xEBE0FF15 EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0xEC597E6F EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0xF5D74D93 EQ PUSH2 0x1A8 JUMPI PUSH4 0xFDDC806F EQ PUSH2 0x187 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 PUSH1 0x38 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH9 0x3635C9ADC5DEA00000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 PUSH1 0x39 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1C ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 PUSH1 0x36 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 PUSH1 0x37 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH10 0x21E19E0C9BAB2400000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x1A4 JUMPI PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x339 JUMPI PUSH1 0xB PUSH0 MSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x39E PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND CALLER EQ PUSH2 0xE71 JUMP JUMPDEST PUSH1 0xD DUP2 ADD SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x8 DUP4 LT PUSH2 0x3B3 DUP2 PUSH2 0xEB0 JUMP JUMPDEST ISZERO PUSH2 0x339 JUMPI DUP3 PUSH1 0x1C ADD SLOAD DUP4 PUSH1 0x24 ADD SLOAD SWAP1 PUSH1 0x6 DUP5 ADD SLOAD LT ISZERO SWAP1 DUP2 PUSH2 0x5AA JUMPI JUMPDEST POP ISZERO PUSH2 0x56D JUMPI DUP3 PUSH2 0x568 JUMPI JUMPDEST DUP4 PUSH0 MSTORE PUSH1 0x35 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP4 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x400 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND ISZERO PUSH2 0xEEB JUMP JUMPDEST PUSH2 0x409 DUP4 PUSH2 0xE2C JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x3 SWAP4 SWAP1 SWAP4 SHL SWAP2 SWAP1 SWAP2 SHR PUSH1 0x44 DUP4 ADD DUP2 SWAP1 MSTORE SWAP3 SWAP2 SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0x55D JUMPI PUSH2 0x530 JUMPI JUMPDEST POP DUP1 SLOAD SWAP3 PUSH1 0x1 DUP5 ADD DUP1 SWAP5 GT PUSH2 0x51C JUMPI PUSH2 0x4D8 SWAP4 PUSH1 0x1 SWAP3 SSTORE DUP6 PUSH0 MSTORE PUSH1 0x35 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP6 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP3 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0xE DUP2 ADD PUSH2 0x4A3 DUP5 DUP3 SLOAD PUSH2 0xFB6 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x4B0 DUP4 DUP8 DUP8 PUSH2 0x1643 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 PUSH2 0x4BD DUP5 PUSH2 0xF30 JUMP JUMPDEST DUP4 MSTORE PUSH0 PUSH1 0x20 DUP5 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0xB PUSH1 0x60 DUP5 ADD MSTORE ADD PUSH2 0xFC3 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x51C JUMPI PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x40 DUP3 ADD MSTORE PUSH7 0x2137B7B9BA32B9 PUSH1 0xC9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1EA2 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x80 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x551 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x556 JUMPI JUMPDEST PUSH2 0x549 DUP2 DUP4 PUSH2 0xF7C JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xF9E JUMP JUMPDEST PUSH2 0x45D JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x53F JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x155C19DC9859194814DB1BDD08185B9908141BDBDB PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0xB DUP4 ADD SLOAD LT ISZERO DUP6 PUSH2 0x3D1 JUMP JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x13 SLOAD DUP2 LT ISZERO PUSH2 0x1A4 JUMPI PUSH2 0x5E2 PUSH1 0x20 SWAP2 PUSH2 0xE44 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x24 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0x1A4 JUMPI PUSH1 0x24 CALLDATALOAD DUP2 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x662 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND CALLER EQ PUSH2 0xE71 JUMP JUMPDEST PUSH1 0xB DUP2 ADD SWAP2 PUSH2 0x674 PUSH1 0x7 DUP5 SLOAD LT PUSH2 0x1178 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP3 DUP4 DUP3 GT PUSH2 0x51C JUMPI PUSH1 0x13 SLOAD DUP5 LT ISZERO PUSH2 0x812 JUMPI PUSH2 0x693 DUP5 PUSH2 0xE44 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR DUP3 PUSH0 MSTORE PUSH1 0x2C PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP7 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP1 SLOAD DUP3 DUP2 LT PUSH2 0x7CD JUMPI DUP8 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP8 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH2 0x788 JUMPI DUP3 PUSH2 0x6E1 SWAP2 PUSH2 0x11B2 JUMP JUMPDEST SWAP1 SSTORE DUP2 SLOAD SWAP2 PUSH1 0x1 DUP4 ADD DUP1 SWAP4 GT PUSH2 0x51C JUMPI PUSH1 0x2 SWAP5 PUSH2 0x738 SWAP4 PUSH1 0x1 SWAP3 SSTORE PUSH1 0xC DUP2 ADD PUSH2 0x70B DUP5 DUP3 SLOAD PUSH2 0xFB6 JUMP JUMPDEST SWAP1 SSTORE DUP8 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP8 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP3 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x4B0 DUP4 DUP10 DUP10 PUSH2 0x1268 JUMP JUMPDEST ADD DUP1 SWAP2 GT PUSH2 0x51C JUMPI PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x40 DUP3 ADD MSTORE PUSH22 0x506F6F6C205570677261646520284561726E696E6729 PUSH1 0x50 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1EA2 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x80 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C726561647920707572636861736564206E65787420706F6F6C0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F756768206E65787420706F6F6C2062616C616E636500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BC81A1A59DA195C881C1BDBDB PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD DUP2 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x8C4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND CALLER EQ PUSH2 0xE71 JUMP JUMPDEST PUSH2 0x8D4 PUSH1 0x7 PUSH1 0xB DUP4 ADD SLOAD LT PUSH2 0x1178 JUMP JUMPDEST PUSH2 0x8DD DUP3 PUSH2 0xE44 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR DUP3 PUSH0 MSTORE PUSH1 0x2C PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP5 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SWAP2 DUP3 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0x9A6 JUMPI PUSH2 0x95E SWAP4 PUSH2 0x918 DUP5 PUSH1 0x1 SWAP5 PUSH2 0x11B2 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0xC DUP2 ADD PUSH2 0x929 DUP5 DUP3 SLOAD PUSH2 0xFB6 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x936 DUP4 DUP8 DUP8 PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 PUSH2 0x943 DUP5 PUSH2 0xF30 JUMP JUMPDEST DUP4 MSTORE PUSH0 PUSH1 0x20 DUP5 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0xA PUSH1 0x60 DUP5 ADD MSTORE ADD PUSH2 0xFC3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x40 DUP3 ADD MSTORE PUSH22 0x506F6F6C205265546F70757020284561726E696E6729 PUSH1 0x50 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1EA2 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x80 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F756768207265546F7075702062616C616E6365000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x93A80 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x60 PUSH2 0xA26 PUSH1 0x4 CALLDATALOAD PUSH2 0x101A JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x20 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x40 DUP3 DUP5 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x40 DUP7 ADD MSTORE ADD DUP5 DUP5 ADD MCOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xA DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0xAAE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND CALLER EQ PUSH2 0xE71 JUMP JUMPDEST PUSH1 0xB DUP2 ADD SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x7 DUP4 LT PUSH2 0xAC3 DUP2 PUSH2 0xEB0 JUMP JUMPDEST ISZERO PUSH2 0x339 JUMPI DUP3 PUSH1 0x15 ADD SLOAD PUSH1 0x6 DUP4 ADD SLOAD LT PUSH2 0xC62 JUMPI DUP3 ISZERO SWAP1 DUP2 ISZERO PUSH2 0xC5D JUMPI JUMPDEST DUP5 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP5 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH2 0xB04 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND ISZERO PUSH2 0xEEB JUMP JUMPDEST PUSH2 0xB0D DUP5 PUSH2 0xE44 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x3 SWAP4 SWAP1 SWAP4 SHL SWAP2 SWAP1 SWAP2 SHR PUSH1 0x44 DUP4 ADD DUP2 SWAP1 MSTORE SWAP4 SWAP2 SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0x55D JUMPI PUSH2 0xC40 JUMPI JUMPDEST POP PUSH2 0xBED JUMPI JUMPDEST DUP1 SLOAD SWAP3 PUSH1 0x1 DUP5 ADD DUP1 SWAP5 GT PUSH2 0x51C JUMPI PUSH2 0xBAC SWAP4 PUSH1 0x1 SWAP3 SSTORE DUP6 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP6 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP3 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0xC DUP2 ADD PUSH2 0x929 DUP5 DUP3 SLOAD PUSH2 0xFB6 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x51C JUMPI PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x4 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x141BDBDB PUSH1 0xE2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1EA2 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x80 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH1 0x4 DUP4 ADD SLOAD DUP1 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0xF PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD PUSH3 0x2A300 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x51C JUMPI TIMESTAMP LT ISZERO PUSH2 0xC1D JUMPI JUMPDEST POP PUSH2 0xB67 JUMP JUMPDEST PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x8 PUSH1 0x40 PUSH0 KECCAK256 ADD DUP1 SLOAD SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x51C JUMPI SSTORE DUP6 PUSH2 0xC17 JUMP JUMPDEST PUSH2 0xC58 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x556 JUMPI PUSH2 0x549 DUP2 DUP4 PUSH2 0xF7C JUMP JUMPDEST PUSH2 0xB61 JUMP JUMPDEST PUSH2 0xAE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5570677261646520796F7572206C6576656C2066697273740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x339 JUMPI PUSH1 0x7 PUSH0 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xF DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH8 0xDE0B6B3A7640000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x15180 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 PUSH1 0x3A SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x278D00 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x14 SLOAD DUP2 LT ISZERO PUSH2 0x1A4 JUMPI PUSH2 0x5E2 PUSH1 0x20 SWAP2 PUSH2 0xE2C JUMP JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x15 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI DUP1 PUSH2 0x2710 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST PUSH1 0x14 SLOAD DUP2 LT ISZERO PUSH2 0x339 JUMPI PUSH1 0x14 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x13 SLOAD DUP2 LT ISZERO PUSH2 0x339 JUMPI PUSH1 0x13 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x339 JUMPI PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xE78 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x139BDD081E5BDD5C881858D8DBDD5B9D PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xEB7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x105D081B585E081B195D995B PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xEF2 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x141BDBDB08185B1C9958591E481C1D5C98DA185CD959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xF4C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xF4C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xF4C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1A4 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x1A4 JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x51C JUMPI JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xF4C JUMPI PUSH1 0x1 DUP2 ADD DUP1 DUP4 SSTORE DUP2 LT ISZERO PUSH2 0x339 JUMPI PUSH1 0x3 PUSH1 0x60 SWAP2 PUSH1 0xFF SWAP4 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 SHL ADD DUP5 MLOAD DUP2 SSTORE PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE ADD SWAP3 ADD MLOAD AND PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0xB DUP2 ADD SLOAD SWAP2 PUSH1 0x13 SLOAD DUP4 LT ISZERO PUSH2 0x112C JUMPI POP PUSH1 0x7 DUP3 LT ISZERO PUSH2 0x339 JUMPI PUSH1 0x6 DUP3 PUSH1 0x15 ADD SLOAD SWAP2 ADD SLOAD LT PUSH2 0x10DF JUMPI ISZERO ISZERO DUP1 PUSH2 0x10D8 JUMPI JUMPDEST PUSH2 0x109B JUMPI PUSH1 0x1 SWAP1 PUSH1 0x40 MLOAD PUSH2 0x106E PUSH1 0x40 DUP3 PUSH2 0xF7C JUMP JUMPDEST PUSH1 0x19 DUP2 MSTORE PUSH32 0x456C696769626C6520746F20627579206E65787420706F6F6C00000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH0 SWAP1 PUSH1 0x40 MLOAD PUSH2 0x10AB PUSH1 0x40 DUP3 PUSH2 0xF7C JUMP JUMPDEST PUSH1 0x17 DUP2 MSTORE PUSH32 0x4275792070726576696F757320706F6F6C206669727374000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST POP PUSH0 PUSH2 0x1059 JUMP JUMPDEST POP PUSH0 SWAP1 PUSH1 0x40 MLOAD PUSH2 0x10F0 PUSH1 0x60 DUP3 PUSH2 0xF7C JUMP JUMPDEST PUSH1 0x26 DUP2 MSTORE PUSH32 0x596F75206E65656420746F207265616368206120686967686572206C6576656C PUSH1 0x20 DUP3 ADD MSTORE PUSH6 0x8199A5C9CDD PUSH1 0xD2 SHL PUSH1 0x40 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP3 SWAP2 POP POP PUSH0 SWAP2 PUSH2 0x113F PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0xF7C JUMP JUMPDEST PUSH1 0x23 DUP2 MSTORE PUSH32 0x596F752061726520616C72656164792061742074686520686967686573742070 PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0x1BDBDB PUSH1 0xEA SHL PUSH1 0x40 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x117F JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x105D081B585E081C1BDBDB PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x51C JUMPI JUMP JUMPDEST ISZERO PUSH2 0x11C6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x125B9D985B1A59 PUSH1 0xCA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x11FC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x125B98DBDC9C9958DD08185B5BDD5B9D PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xF4C JUMPI PUSH2 0x1251 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0xE5C JUMP JUMPDEST DUP2 SWAP3 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP3 SWAP2 PUSH2 0x1277 PUSH1 0x13 SLOAD DUP6 LT PUSH2 0x11BF JUMP JUMPDEST PUSH2 0x1291 PUSH2 0x1283 DUP6 PUSH2 0xE44 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR CALLVALUE EQ PUSH2 0x11F5 JUMP JUMPDEST DUP4 PUSH0 MSTORE PUSH1 0x30 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH2 0x12AA DUP2 PUSH1 0x5 SLOAD PUSH2 0xFB6 JUMP JUMPDEST SWAP1 DUP6 PUSH0 MSTORE PUSH1 0x30 PUSH1 0x20 MSTORE PUSH2 0x12C0 DUP3 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1234 JUMP JUMPDEST PUSH0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x51C JUMPI PUSH2 0x12E6 PUSH1 0x3 PUSH2 0x138E SWAP3 DUP9 PUSH0 MSTORE PUSH1 0x30 PUSH1 0x20 MSTORE DIV PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0xE5C JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP2 PUSH2 0x1354 PUSH1 0x40 MLOAD PUSH2 0x12FD DUP2 PUSH2 0xF60 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP9 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 ADD DUP13 DUP2 MSTORE PUSH1 0x60 DUP6 ADD DUP10 DUP2 MSTORE PUSH0 PUSH1 0x80 DUP8 ADD DUP2 DUP2 MSTORE DUP16 DUP3 MSTORE PUSH1 0x2D DUP8 MSTORE DUP5 DUP3 KECCAK256 DUP11 DUP4 MSTORE SWAP1 SWAP7 MSTORE SWAP3 SWAP1 SWAP3 KECCAK256 SWAP5 MLOAD DUP6 SSTORE SWAP2 MLOAD PUSH1 0x1 DUP6 ADD SSTORE SWAP1 MLOAD PUSH1 0x2 DUP5 ADD SSTORE MLOAD PUSH1 0x3 DUP4 ADD SSTORE MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST DUP7 PUSH0 MSTORE PUSH1 0x2F PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP6 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x1373 DUP2 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1234 JUMP JUMPDEST DUP7 PUSH0 MSTORE PUSH1 0x2E PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP4 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1234 JUMP JUMPDEST PUSH1 0x3 DUP3 DIV SWAP5 PUSH0 SWAP4 PUSH0 SWAP3 JUMPDEST PUSH1 0x3 DUP5 LT PUSH2 0x13C3 JUMPI JUMPDEST POP POP POP POP PUSH2 0x13B0 SWAP3 SWAP4 POP PUSH2 0x11B2 JUMP JUMPDEST DUP1 PUSH2 0x13B8 JUMPI POP JUMP JUMPDEST PUSH2 0x13C1 SWAP1 PUSH2 0x1B5C JUMP JUMPDEST JUMP JUMPDEST DUP1 ISZERO DUP1 ISZERO PUSH2 0x1638 JUMPI JUMPDEST PUSH2 0x1606 JUMPI DUP3 PUSH0 MSTORE PUSH1 0x2D PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP5 DUP8 PUSH1 0x1 DUP8 ADD SLOAD PUSH1 0x4 DUP9 ADD DUP1 SLOAD PUSH1 0x27 DUP2 LT PUSH2 0x1418 JUMPI JUMPDEST POP POP POP PUSH2 0x140D PUSH1 0x3 SWAP2 PUSH1 0x1 SWAP4 PUSH2 0xFB6 JUMP JUMPDEST SWAP7 ADD SLOAD SWAP4 ADD SWAP3 PUSH2 0x1398 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 POP PUSH1 0x1 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x51C JUMPI SWAP1 DUP2 SWAP1 SSTORE DUP10 SWAP1 PUSH1 0x18 DUP2 GT PUSH2 0x15A9 JUMPI POP POP DUP1 PUSH0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x8 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1450 DUP12 DUP3 SLOAD PUSH2 0xFB6 JUMP JUMPDEST DUP2 SSTORE ADD PUSH2 0x145E DUP11 DUP3 SLOAD PUSH2 0xFB6 JUMP JUMPDEST SWAP1 SSTORE DUP1 PUSH0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH2 0x149E PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x147C DUP3 PUSH2 0xF60 JUMP JUMPDEST DUP6 DUP3 MSTORE DUP12 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x40 DUP4 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xA PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1B01 JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP9 ISZERO SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x5F DUP11 DUP2 MUL SWAP1 DUP12 DUP3 DIV EQ DUP5 OR ISZERO PUSH2 0x51C JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x64 SWAP1 SWAP4 DIV PUSH1 0x24 DUP3 ADD MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 PUSH0 SWAP2 AND GAS CALL DUP1 ISZERO PUSH2 0x55D JUMPI PUSH2 0x158D JUMPI JUMPDEST POP PUSH1 0x5 DUP11 MUL SWAP3 DUP11 DUP5 DIV PUSH1 0x5 EQ OR ISZERO PUSH2 0x51C JUMPI DUP10 PUSH1 0x3 SWAP3 PUSH2 0x140D SWAP3 PUSH2 0x1537 PUSH1 0x64 PUSH1 0x1 SWAP8 DIV PUSH2 0x1B5C JUMP JUMPDEST DUP7 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE DUP6 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND SWAP1 PUSH32 0xE17B61D324CE17328F433D0AB62581C0F0AA997312BAE80FBDFCD2AA9B91D6E3 PUSH1 0x60 PUSH1 0x40 MLOAD DUP7 DUP2 MSTORE DUP10 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x40 DUP3 ADD MSTORE LOG3 JUMPDEST SWAP4 DUP2 SWAP4 POP PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x15A4 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x556 JUMPI PUSH2 0x549 DUP2 DUP4 PUSH2 0xF7C JUMP JUMPDEST PUSH2 0x150F JUMP JUMPDEST PUSH1 0x1 SWAP4 PUSH1 0x3 SWAP4 PUSH2 0x140D SWAP4 SWAP3 PUSH1 0x24 LT PUSH2 0x15E3 JUMPI DUP8 PUSH0 MSTORE PUSH1 0x2C PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x15DC DUP4 DUP3 SLOAD PUSH2 0xFB6 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1584 JUMP JUMPDEST DUP8 PUSH0 MSTORE PUSH1 0x2C PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE DUP5 PUSH1 0x40 PUSH0 KECCAK256 ADD PUSH2 0x15DC DUP4 DUP3 SLOAD PUSH2 0xFB6 JUMP JUMPDEST POP POP POP POP PUSH2 0x13B0 SWAP3 SWAP4 POP PUSH2 0x161A DUP3 DUP3 PUSH2 0x11B2 JUMP JUMPDEST DUP1 PUSH2 0x1629 JUMPI JUMPDEST DUP5 SWAP4 DUP2 DUP1 PUSH2 0x13A1 JUMP JUMPDEST PUSH2 0x1632 SWAP1 PUSH2 0x1B5C JUMP JUMPDEST PUSH0 PUSH2 0x1620 JUMP JUMPDEST POP PUSH1 0x5 SLOAD DUP2 EQ PUSH2 0x13CC JUMP JUMPDEST PUSH2 0x1650 PUSH1 0x14 SLOAD DUP3 LT PUSH2 0x11BF JUMP JUMPDEST PUSH2 0x165C PUSH2 0x1283 DUP3 PUSH2 0xE2C JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 PUSH2 0x1677 SWAP1 DUP5 SWAP1 PUSH2 0x1234 JUMP JUMPDEST PUSH0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x51C JUMPI PUSH1 0x3 PUSH2 0x169A SWAP2 DUP4 PUSH0 MSTORE PUSH1 0x34 PUSH1 0x20 MSTORE DIV PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0xE5C JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP1 PUSH2 0x1708 PUSH1 0x40 MLOAD PUSH2 0x16B1 DUP2 PUSH2 0xF60 JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP5 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 ADD DUP8 DUP2 MSTORE PUSH0 PUSH1 0x60 DUP7 ADD DUP2 DUP2 MSTORE TIMESTAMP PUSH1 0x80 DUP9 ADD SWAP1 DUP2 MSTORE DUP10 DUP4 MSTORE PUSH1 0x32 DUP8 MSTORE DUP5 DUP4 KECCAK256 DUP13 DUP5 MSTORE SWAP1 SWAP7 MSTORE SWAP3 SWAP1 KECCAK256 SWAP5 MLOAD DUP6 SSTORE SWAP2 MLOAD PUSH1 0x1 DUP6 ADD SSTORE SWAP1 MLOAD PUSH1 0x2 DUP5 ADD SSTORE MLOAD PUSH1 0x3 DUP4 ADD SSTORE MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST DUP1 PUSH0 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP3 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x1727 DUP4 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1234 JUMP JUMPDEST PUSH1 0x1 DUP2 EQ PUSH2 0x18E7 JUMPI JUMPDEST DUP2 ISZERO DUP1 ISZERO PUSH2 0x18DC JUMPI JUMPDEST PUSH2 0x18D0 JUMPI PUSH0 MSTORE PUSH1 0x32 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x3 PUSH1 0x40 PUSH0 KECCAK256 ADD PUSH1 0x3 DUP2 SLOAD LT PUSH0 EQ PUSH2 0x18D0 JUMPI DUP1 SLOAD SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x51C JUMPI SSTORE DUP1 PUSH0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x9 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1788 DUP6 DUP3 SLOAD PUSH2 0xFB6 JUMP JUMPDEST DUP2 SSTORE ADD PUSH2 0x1796 DUP5 DUP3 SLOAD PUSH2 0xFB6 JUMP JUMPDEST SWAP1 SSTORE DUP1 PUSH0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH2 0x17D6 PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x17B4 DUP3 PUSH2 0xF60 JUMP JUMPDEST DUP5 DUP3 MSTORE DUP6 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x40 DUP4 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1B01 JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ISZERO PUSH1 0x5F DUP5 DUP2 MUL SWAP1 DUP6 DUP3 DIV EQ DUP3 OR ISZERO PUSH2 0x51C JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x64 SWAP1 SWAP4 DIV PUSH1 0x24 DUP3 ADD MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 PUSH0 SWAP2 AND GAS CALL DUP1 ISZERO PUSH2 0x55D JUMPI PUSH2 0x18B3 JUMPI JUMPDEST POP PUSH1 0x5 DUP5 MUL SWAP1 DUP5 DUP3 DIV PUSH1 0x5 EQ OR ISZERO PUSH2 0x51C JUMPI PUSH1 0x64 PUSH2 0x1864 SWAP2 DIV PUSH2 0x1B5C JUMP JUMPDEST PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH32 0xE17B61D324CE17328F433D0AB62581C0F0AA997312BAE80FBDFCD2AA9B91D6E3 PUSH1 0x60 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND SWAP4 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x40 DUP3 ADD MSTORE LOG3 JUMP JUMPDEST PUSH2 0x18CB SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x556 JUMPI PUSH2 0x549 DUP2 DUP4 PUSH2 0xF7C JUMP JUMPDEST PUSH2 0x1846 JUMP JUMPDEST POP POP POP PUSH2 0x13C1 SWAP1 PUSH2 0x1B5C JUMP JUMPDEST POP PUSH1 0x5 SLOAD DUP3 EQ PUSH2 0x1739 JUMP JUMPDEST DUP3 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x200 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xF4C JUMPI PUSH1 0x40 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xF4C JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1947 PUSH1 0x20 DUP4 PUSH1 0x5 SHL ADD DUP5 PUSH2 0xF7C JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x1A8A JUMPI POP POP POP POP PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1E0 PUSH1 0xF PUSH1 0x4 DUP5 ADD SLOAD SWAP4 PUSH1 0x80 DUP5 ADD SWAP5 DUP6 MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 DUP6 ADD MSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0x120 DUP6 ADD MSTORE PUSH1 0xA DUP2 ADD SLOAD PUSH2 0x140 DUP6 ADD MSTORE PUSH1 0xB DUP2 ADD SLOAD PUSH2 0x160 DUP6 ADD MSTORE PUSH1 0xC DUP2 ADD SLOAD PUSH2 0x180 DUP6 ADD MSTORE PUSH1 0xD DUP2 ADD SLOAD PUSH2 0x1A0 DUP6 ADD MSTORE PUSH1 0xE DUP2 ADD SLOAD PUSH2 0x1C0 DUP6 ADD MSTORE ADD SLOAD SWAP2 ADD SWAP1 DUP2 MSTORE PUSH1 0x36 SLOAD PUSH0 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP3 MLOAD PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x1A22 DUP6 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1234 JUMP JUMPDEST PUSH1 0x36 SLOAD SWAP1 DUP2 PUSH0 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP4 MLOAD PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP2 PUSH3 0x15180 DUP4 ADD DUP1 SWAP4 GT PUSH2 0x51C JUMPI PUSH1 0x5 SWAP3 TIMESTAMP GT ISZERO PUSH2 0x1A7A JUMPI JUMPDEST POP LT ISZERO PUSH2 0x1A67 JUMPI JUMPDEST POP PUSH2 0x1730 JUMP JUMPDEST MLOAD PUSH1 0x36 SLOAD PUSH2 0x1A74 SWAP2 PUSH2 0x1ACE JUMP JUMPDEST PUSH0 PUSH2 0x1A61 JUMP JUMPDEST PUSH2 0x1A84 SWAP1 DUP8 PUSH2 0x1ACE JUMP JUMPDEST PUSH0 PUSH2 0x1A59 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH1 0x40 MLOAD PUSH2 0x1A9D DUP2 PUSH2 0xF30 JUMP JUMPDEST DUP6 SLOAD DUP2 MSTORE DUP5 DUP7 ADD SLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x2 DUP7 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0x3 DUP8 ADD SLOAD AND PUSH1 0x60 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x1958 JUMP JUMPDEST SWAP1 DUP1 PUSH0 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP3 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD PUSH1 0x8 SHR AND ISZERO PUSH2 0x1AF8 JUMPI POP POP JUMP JUMPDEST PUSH2 0x13C1 SWAP2 PUSH2 0x1C7B JUMP JUMPDEST SWAP1 DUP2 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xF4C JUMPI PUSH1 0x1 DUP2 ADD DUP1 DUP5 SSTORE DUP2 LT ISZERO PUSH2 0x339 JUMPI PUSH2 0x13C1 SWAP3 PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 PUSH0 KECCAK256 SWAP2 MUL ADD SWAP1 PUSH1 0x80 PUSH1 0x4 SWAP2 DUP1 MLOAD DUP5 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP6 ADD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE ADD MLOAD SWAP2 ADD SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x1C42 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP1 DUP5 ADD DUP8 SWAP1 MSTORE DUP4 MSTORE SWAP4 SWAP1 SWAP3 AND SWAP3 SWAP2 PUSH0 SWAP2 PUSH2 0x1BB1 PUSH1 0x64 DUP3 PUSH2 0xF7C JUMP JUMPDEST MLOAD SWAP1 DUP3 DUP6 GAS CALL ISZERO PUSH2 0x55D JUMPI PUSH0 MLOAD RETURNDATASIZE PUSH2 0x1C39 JUMPI POP DUP1 EXTCODESIZE ISZERO JUMPDEST PUSH2 0x1C27 JUMPI POP PUSH2 0x13C1 SWAP1 PUSH1 0x5 SLOAD PUSH0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1BEA DUP3 DUP3 SLOAD PUSH2 0xFB6 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x5 SLOAD PUSH0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1C07 DUP4 PUSH2 0xF60 JUMP JUMPDEST PUSH0 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH0 PUSH1 0x40 DUP4 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x5 PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1B01 JUMP JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x1BC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x199959481859191C9CC81B9BDD081CD95D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x36 SLOAD SWAP1 DUP2 DUP2 SUB PUSH2 0x1E6C JUMPI PUSH0 MSTORE PUSH1 0x3B PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD AND PUSH2 0x1E38 JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH32 0xD07FE408FA264E656A9C06E272928E4D4BB400D93CD5B5E74AC592F6170C2FD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD SWAP1 PUSH1 0x4 SWAP1 PUSH2 0x1CDA DUP4 PUSH2 0xF60 JUMP JUMPDEST DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE ADD SLOAD PUSH1 0x80 DUP3 ADD SWAP1 DUP2 MSTORE DUP3 PUSH0 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP5 PUSH0 MSTORE PUSH1 0x20 MSTORE DUP4 PUSH1 0x5 PUSH1 0x40 PUSH0 KECCAK256 SLOAD LT SWAP3 MLOAD EQ SWAP1 DUP2 PUSH2 0x1E0F JUMPI JUMPDEST POP DUP2 ISZERO SWAP2 PUSH2 0x1E07 JUMPI JUMPDEST POP ISZERO PUSH2 0x1DC2 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP3 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP2 PUSH1 0x4 DUP4 ADD DUP1 SLOAD SWAP4 PUSH1 0xFF DUP6 PUSH1 0x8 SHR AND PUSH2 0x1DBB JUMPI PUSH32 0x360CB96D3E85B4FC299DDFA9A572850FC70961C86F0F1703F033143B0E5A82CF SWAP5 DUP5 PUSH1 0x2 PUSH2 0x100 SWAP4 DUP7 DUP2 SSTORE TIMESTAMP PUSH1 0x1 DUP3 ADD SSTORE ADD SSTORE PUSH2 0xFF00 NOT AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x60 DUP4 ADD SWAP2 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP4 ADD MSTORE SUB SWAP1 LOG1 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656C696769626C6520666F72207765656B6C7920636F6E7465737400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1D33 JUMP JUMPDEST SWAP1 POP MLOAD DUP4 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0xF PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 PUSH3 0x15180 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x51C JUMPI GT ISZERO PUSH0 PUSH2 0x1D2A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x149BDD5B990818DB1BDCD959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x125B9D985B1A59081C9BDD5B99 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID 0xBA 0xBB PUSH11 0x363FD9A057996D09882C0B PUSH21 0xB710D121707D19EEFFD91C51C3171A7C91A2646970 PUSH7 0x735822122042E0 SDIV EXTCODEHASH 0x21 0xB0 BLOBBASEFEE 0x4E CALLDATALOAD 0xA7 0xA6 0xBE PUSH15 0xF44BDE4D88C4349EB2336C7980BFEB MULMOD REVERT 0x2F SIGNEXTEND PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "102:12964:7:-:0;;;;;;1716:1:3;1821:22;102:12964:7;;;;;;-1:-1:-1;;;;;102:12964:7;;;;;;;;;;1324:9:8;102:12964:7;;1356:9:8;1313:515;;;102:12964:7;1388:9:8;102:12964:7;1313:515:8;;102:12964:7;1420:10:8;1313:515;;;102:12964:7;1453:10:8;1313:515;;;102:12964:7;1486:10:8;1313:515;;;102:12964:7;1519:10:8;1313:515;;;102:12964:7;1552:11:8;1313:515;;;102:12964:7;1586:11:8;1313:515;;;102:12964:7;1620:11:8;1313:515;;;102:12964:7;1654:12:8;1313:515;;;102:12964:7;1689:12:8;1313:515;;;102:12964:7;1724:12:8;1313:515;;;102:12964:7;1759:13:8;1313:515;;;102:12964:7;1795:13:8;1313:515;;;102:12964:7;1313:515:8;102:12964:7;1313:515:8;;102:12964:7;;1313:515:8;102:12964:7;;;-1:-1:-1;102:12964:7;1313:515:8;1821:22:3;102:12964:7;1313:515:8;1821:22:3;102:12964:7;;1821:22:3;102:12964:7;1313:515:8;102:12964:7;;;;;;:::i;:::-;5058:5:8;102:12964:7;;5065:6:8;1313:515;5057:64;;102:12964:7;5073:7:8;102:12964:7;5057:64:8;;102:12964:7;5082:7:8;1313:515;5057:64;;102:12964:7;5091:8:8;1313:515;5057:64;;102:12964:7;5101:8:8;1313:515;5057:64;;102:12964:7;5111:9:8;1313:515;5057:64;;102:12964:7;5057:64:8;102:12964:7;5057:64:8;;102:12964:7;;5057:64:8;102:12964:7;;;;;5057:64:8;1821:22:3;102:12964:7;1313:515:8;1821:22:3;102:12964:7;;1821:22:3;102:12964:7;5057:64:8;102:12964:7;;;;;;:::i;:::-;1420:10:8;102:12964:7;;1453:10:8;1313:515;5163:70;;102:12964:7;1486:10:8;102:12964:7;5163:70:8;;102:12964:7;1519:10:8;1313:515;5163:70;;102:12964:7;1552:11:8;1313:515;5163:70;;102:12964:7;1586:11:8;1313:515;5163:70;;102:12964:7;1620:11:8;1313:515;5163:70;;102:12964:7;1654:12:8;1313:515;5163:70;;102:12964:7;5163:70:8;102:12964:7;5163:70:8;;102:12964:7;;5163:70:8;102:12964:7;;;;;5163:70:8;1821:22:3;102:12964:7;1313:515:8;1821:22:3;102:12964:7;;1821:22:3;102:12964:7;5163:70:8;102:12964:7;;;;;;:::i;:::-;5274:1:8;102:12964:7;;;1313:515:8;5273:24;;102:12964:7;5057:64:8;102:12964:7;5273:24:8;;102:12964:7;5283:1:8;1313:515;5273:24;;102:12964:7;1313:515:8;;5273:24;;102:12964:7;5290:2:8;1313:515;5273:24;;102:12964:7;1313:515:8;;5273:24;;102:12964:7;1821:22:3;102:12964:7;5057:64:8;102:12964:7;;;;;;:::i;:::-;5344:1:8;102:12964:7;;;1313:515:8;5343:25;;102:12964:7;5350:1:8;102:12964:7;5343:25:8;;102:12964:7;5057:64:8;1313:515;5343:25;;102:12964:7;5163:70:8;1313:515;5343:25;;102:12964:7;5283:1:8;1313:515;5343:25;;102:12964:7;5362:2:8;1313:515;5343:25;;102:12964:7;1313:515:8;;5343:25;;102:12964:7;1821:22:3;102:12964:7;5163:70:8;102:12964:7;;;;;;:::i;:::-;1821:22:3;102:12964:7;;1716:1:3;1313:515:8;5413:23;;102:12964:7;1716:1:3;102:12964:7;5413:23:8;;102:12964:7;1716:1:3;1313:515:8;5413:23;;102:12964:7;1716:1:3;1313:515:8;5413:23;;102:12964:7;1716:1:3;1313:515:8;5413:23;;102:12964:7;1716:1:3;1313:515:8;5413:23;;102:12964:7;1716:1:3;1313:515:8;5413:23;;102:12964:7;1821:22:3;102:12964:7;5163:70:8;102:12964:7;;;;1716:1:3;7098::8;102:12964:7;1716:1:3;7144::8;102:12964:7;1821:22:3;7189:1:8;102:12964:7;1821:22:3;7235:1:8;102:12964:7;1821:22:3;7275:1:8;102:12964:7;;;;;;;;;;;1716:1:3;102:12964:7;1313:515:8;102:12964:7;;;;;;;;5413:23:8;102:12964:7;;;;;;1716:1:3;102:12964:7;1313:515:8;102:12964:7;;;;;;;;5343:25:8;102:12964:7;;;;;;1716:1:3;102:12964:7;1313:515:8;102:12964:7;;;;;;;;5273:24:8;102:12964:7;;;;;;;;-1:-1:-1;;;;;102:12964:7;;;;;1313:515:8;102:12964:7;;;;1716:1:3;102:12964:7;;;;5163:70:8;1821:22:3;102:12964:7;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;102:12964:7;;;;;1313:515:8;102:12964:7;;;;1716:1:3;102:12964:7;;;;5057:64:8;1821:22:3;102:12964:7;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;102:12964:7;;;;;1313:515:8;102:12964:7;;;;1716:1:3;102:12964:7;;;;1313:515:8;1821:22:3;102:12964:7;;;;;;;:::i;:::-;;;;;;;;1821:22:3;102:12964:7;;;;;1821:22:3;102:12964:7;;;;;;;;;;;;-1:-1:-1;;;;;102:12964:7;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;102:12964:7;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_bool_fromMemory": {
									"entryPoint": 3998,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_address_address_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_address_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"array_push_from_struct_Deposit_to_array_struct_Deposit_storage_dyn__ptr": {
									"entryPoint": 4035,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"array_push_from_struct_Income_to_array_struct_Income_storage_dyn__ptr": {
									"entryPoint": 6913,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"array_push_from_uint256_to_array_uint256_dyn_storage_ptr": {
									"entryPoint": 4660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"checked_add_uint256": {
									"entryPoint": 4022,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_uint256": {
									"entryPoint": 4530,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_struct_to_storage_from_struct_UserPool_to_struct_UserPool": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 3964,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"finalize_allocation_17959": {
									"entryPoint": 3888,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"finalize_allocation_18006": {
									"entryPoint": 3936,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_canBuyNextPool": {
									"entryPoint": 4122,
									"id": 783,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"fun_placeInBooster": {
									"entryPoint": 5699,
									"id": 1904,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"fun_placeInPool": {
									"entryPoint": 4712,
									"id": 1306,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"fun_sendToCreator": {
									"entryPoint": 7004,
									"id": 2518,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_tryWeeklyContestQualify": {
									"entryPoint": 6862,
									"id": 2732,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_weeklyContestQualifier": {
									"entryPoint": 7291,
									"id": 2857,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"require_helper_stringliteral_4f6d": {
									"entryPoint": 3760,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_909f": {
									"entryPoint": 3819,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_c84d": {
									"entryPoint": 4543,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_d2be": {
									"entryPoint": 3697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_f230": {
									"entryPoint": 4472,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_f313": {
									"entryPoint": 4597,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"storage_array_index_access_array_uint256_dyn": {
									"entryPoint": 3676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"storage_array_index_access_uint256_dyn": {
									"entryPoint": 3628,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"storage_array_index_access_uint256_dyn_": {
									"entryPoint": 3652,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 2
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080806040526004361015610012575f80fd5b5f3560e01c90816301c234a814610e12575080632132d20414610de65780632350268f14610dbd5780632a89153414610da05780632f48ab7d14610d785780633080b5bc14610d5b57806332bc298c14610d3e57806332fcd96614610d1c578063375b43b414610d0157806339ab360314610ca75780634060160a14610a7a57806358c7d35214610a5f57806367d52d4d14610a0857806376f5f700146109eb5780637848f0a31461088d57806378f6ad6d146108705780637cdc65f2146108485780638e222e241461061d578063956a3228146105f1578063ae4708dc146105b9578063bc1fa7c01461036a578063bff1f9e11461034d578063c216212a146102df578063c8df2908146102bb578063c9ed07081461029e578063ca8e912114610281578063d0a2fd7914610255578063e898fc3814610238578063e9e34a1614610210578063ebe0ff15146101ed578063ec597e6f146101d0578063f5d74d93146101a85763fddc806f14610187575f80fd5b346101a4575f3660031901126101a4576020603854604051908152f35b5f80fd5b346101a4575f3660031901126101a4576004546040516001600160a01b039091168152602090f35b346101a4575f3660031901126101a4576020600554604051908152f35b346101a4575f3660031901126101a4576020604051683635c9adc5dea000008152f35b346101a4575f3660031901126101a4576003546040516001600160a01b039091168152602090f35b346101a4575f3660031901126101a4576020603954604051908152f35b346101a45760203660031901126101a45760043560088110156101a457602090601c0154604051908152f35b346101a4575f3660031901126101a4576020603654604051908152f35b346101a4575f3660031901126101a4576020603754604051908152f35b346101a4575f3660031901126101a457602060405169021e19e0c9bab24000008152f35b346101a45760203660031901126101a457600435600b548110156101a457600b5481101561033957600b5f527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90154604051908152602090f35b634e487b7160e01b5f52603260045260245ffd5b346101a4575f3660031901126101a4576020600654604051908152f35b346101a45760203660031901126101a457600435805f52600d60205260405f2061039e60018060a01b038254163314610e71565b600d810190815491600883106103b381610eb0565b156103395782601c01548360240154906006840154101590816105aa575b501561056d5782610568575b835f52603560205260405f20835f5260205261040060ff60405f20541615610eeb565b61040983610e2c565b90546001546040516323b872dd60e01b815233600482015230602482015260039390931b9190911c60448301819052929190602090829060649082905f906001600160a01b03165af1801561055d57610530575b508054926001840180941161051c576104d89360019255855f52603560205260405f20855f5260205260405f208260ff19825416179055600e81016104a3848254610fb6565b90556104b0838787611643565b604051926104bd84610f30565b83525f6020840152426040840152600b606084015201610fc3565b6001810180911161051c576040519081526040602082015260076040820152662137b7b9ba32b960c91b60608201525f516020611ea25f395f51905f5260803392a3005b634e487b7160e01b5f52601160045260245ffd5b6105519060203d602011610556575b6105498183610f7c565b810190610f9e565b61045d565b503d61053f565b6040513d5f823e3d90fd5b6103dd565b60405162461bcd60e51b8152602060048201526015602482015274155c19dc9859194814db1bdd08185b9908141bdbdb605a1b6044820152606490fd5b9050600b8301541015856103d1565b346101a45760203660031901126101a4576004356013548110156101a4576105e2602091610e44565b90549060031b1c604051908152f35b346101a45760203660031901126101a45760043560088110156101a45760209060240154604051908152f35b346101a45760403660031901126101a45760043563ffffffff81168091036101a457602435815f52600d60205260405f2061066260018060a01b038254163314610e71565b600b8101916106746007845410611178565b600181019283821161051c576013548410156108125761069384610e44565b90549060031b1c825f52602c60205260405f20865f5260205260405f2080548281106107cd57875f52603160205260405f20875f5260205260ff60405f20541661078857826106e1916111b2565b90558154916001830180931161051c576002946107389360019255600c810161070b848254610fb6565b9055875f52603160205260405f20875f5260205260405f208260ff198254161790556104b0838989611268565b0180911161051c57604051908152604060208201526016604082015275506f6f6c205570677261646520284561726e696e672960501b60608201525f516020611ea25f395f51905f5260803392a3005b60405162461bcd60e51b815260206004820152601b60248201527f416c726561647920707572636861736564206e65787420706f6f6c00000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601c60248201527f4e6f7420656e6f756768206e65787420706f6f6c2062616c616e6365000000006044820152606490fd5b60405162461bcd60e51b815260206004820152600e60248201526d139bc81a1a59da195c881c1bdbdb60921b6044820152606490fd5b346101a4575f3660031901126101a4576002546040516001600160a01b039091168152602090f35b346101a4575f3660031901126101a4576020600954604051908152f35b346101a45760403660031901126101a457600435602435815f52600d60205260405f206108c460018060a01b038254163314610e71565b6108d46007600b83015410611178565b6108dd82610e44565b90549060031b1c825f52602c60205260405f20845f52602052600160405f2001918254908282106109a65761095e93610918846001946111b2565b9055600c8101610929848254610fb6565b9055610936838787611268565b6040519261094384610f30565b83525f6020840152426040840152600a606084015201610fc3565b604051908152604060208201526016604082015275506f6f6c205265546f70757020284561726e696e672960501b60608201525f516020611ea25f395f51905f5260803392a3005b60405162461bcd60e51b815260206004820152601a60248201527f4e6f7420656e6f756768207265546f7075702062616c616e63650000000000006044820152606490fd5b346101a4575f3660031901126101a457602060405162093a808152f35b346101a45760203660031901126101a4576060610a2660043561101a565b91906020604051938492151583526040828401528051918291826040860152018484015e5f828201840152601f01601f19168101030190f35b346101a4575f3660031901126101a4576020604051600a8152f35b346101a45760203660031901126101a457600435805f52600d60205260405f20610aae60018060a01b038254163314610e71565b600b81019081549160078310610ac381610eb0565b15610339578260150154600683015410610c62578215908115610c5d575b845f52603160205260405f20845f52602052610b0460ff60405f20541615610eeb565b610b0d84610e44565b90546001546040516323b872dd60e01b815233600482015230602482015260039390931b9190911c60448301819052939190602090829060649082905f906001600160a01b03165af1801561055d57610c40575b50610bed575b8054926001840180941161051c57610bac9360019255855f52603160205260405f20855f5260205260405f208260ff19825416179055600c8101610929848254610fb6565b6001810180911161051c57604051908152604060208201526004604082015263141bdbdb60e21b60608201525f516020611ea25f395f51905f5260803392a3005b6004830154805f52600d602052600f60405f2001546202a300810180911161051c57421015610c1d575b50610b67565b5f52600d602052600860405f20018054906001820180921161051c575585610c17565b610c589060203d602011610556576105498183610f7c565b610b61565b610ae1565b60405162461bcd60e51b815260206004820152601860248201527f5570677261646520796f7572206c6576656c20666972737400000000000000006044820152606490fd5b346101a45760203660031901126101a4576004356007548110156101a4576007548110156103395760075f527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880154604051908152602090f35b346101a4575f3660031901126101a4576020604051600f8152f35b346101a4575f3660031901126101a4576020604051670de0b6b3a76400008152f35b346101a4575f3660031901126101a4576020604051620151808152f35b346101a4575f3660031901126101a4576020603a54604051908152f35b346101a4575f3660031901126101a4576001546040516001600160a01b039091168152602090f35b346101a4575f3660031901126101a457602060405162278d008152f35b346101a45760203660031901126101a4576004356014548110156101a4576105e2602091610e2c565b346101a45760203660031901126101a45760043560078110156101a45760209060150154604051908152f35b346101a4575f3660031901126101a4578061271060209252f35b6014548110156103395760145f5260205f2001905f90565b6013548110156103395760135f5260205f2001905f90565b8054821015610339575f5260205f2001905f90565b15610e7857565b60405162461bcd60e51b815260206004820152601060248201526f139bdd081e5bdd5c881858d8dbdd5b9d60821b6044820152606490fd5b15610eb757565b60405162461bcd60e51b815260206004820152600c60248201526b105d081b585e081b195d995b60a21b6044820152606490fd5b15610ef257565b60405162461bcd60e51b8152602060048201526016602482015275141bdbdb08185b1c9958591e481c1d5c98da185cd95960521b6044820152606490fd5b6080810190811067ffffffffffffffff821117610f4c57604052565b634e487b7160e01b5f52604160045260245ffd5b60a0810190811067ffffffffffffffff821117610f4c57604052565b90601f8019910116810190811067ffffffffffffffff821117610f4c57604052565b908160209103126101a4575180151581036101a45790565b9190820180921161051c57565b8054600160401b811015610f4c576001810180835581101561033957600360609160ff935f5260205f209060021b01845181556020850151600182015560408501516002820155019201511660ff19825416179055565b6060905f52600d60205260405f20600b8101549160135483101561112c575060078210156103395760068260150154910154106110df571515806110d8575b61109b5760019060405161106e604082610f7c565b601981527f456c696769626c6520746f20627579206e65787420706f6f6c00000000000000602082015290565b5f906040516110ab604082610f7c565b601781527f4275792070726576696f757320706f6f6c206669727374000000000000000000602082015290565b505f611059565b505f906040516110f0606082610f7c565b602681527f596f75206e65656420746f207265616368206120686967686572206c6576656c60208201526508199a5c9cdd60d21b604082015290565b929150505f9161113f6040519182610f7c565b602381527f596f752061726520616c726561647920617420746865206869676865737420706020820152621bdbdb60ea1b604082015290565b1561117f57565b60405162461bcd60e51b815260206004820152600b60248201526a105d081b585e081c1bdbdb60aa1b6044820152606490fd5b9190820391821161051c57565b156111c657565b60405162461bcd60e51b8152602060048201526007602482015266125b9d985b1a5960ca1b6044820152606490fd5b156111fc57565b60405162461bcd60e51b815260206004820152601060248201526f125b98dbdc9c9958dd08185b5bdd5b9d60821b6044820152606490fd5b8054600160401b811015610f4c5761125191600182018155610e5c565b819291549060031b91821b915f19901b1916179055565b929161127760135485106111bf565b61129161128385610e44565b90549060031b1c34146111f5565b835f52603060205260405f20546112aa81600554610fb6565b90855f5260306020526112c08260405f20611234565b5f19810190811161051c576112e6600361138e92885f5260306020520460405f20610e5c565b90549060031b1c916113546040516112fd81610f60565b828152602080820188815260408084018c8152606085018981525f608087018181528f8252602d87528482208a83529096529290922094518555915160018501559051600284015551600383015551600490910155565b865f52602f60205260405f20855f526020526113738160405f20611234565b865f52602e60205260405f20835f5260205260405f20611234565b60038204945f935f925b600384106113c3575b505050506113b09293506111b2565b806113b85750565b6113c190611b5c565b565b80158015611638575b61160657825f52602d60205260405f20905f5260205260405f209487600187015460048801805460278110611418575b50505061140d600391600193610fb6565b960154930192611398565b909192506001810180911161051c57908190558990601881116115a9575050805f52600e602052600860405f206114508b8254610fb6565b81550161145e8a8254610fb6565b9055805f52600f60205261149e60405f206040519061147c82610f60565b8582528b602083015260016040830152426060830152600a6080830152611b01565b5f908152600d6020526040902054881591906001600160a01b0316605f8a8102908b82041484171561051c5760015460405163a9059cbb60e01b81526001600160a01b0384811660048301526064909304602482015291602091839160449183915f91165af1801561055d5761158d575b5060058a02928a8404600514171561051c578960039261140d92611537606460019704611b5c565b865f52600d602052858060a01b0360405f205416907fe17b61d324ce17328f433d0ab62581c0f0aa997312bae80fbdfcd2aa9b91d6e36060604051868152896020820152600a6040820152a35b938193506113fc565b6115a49060203d8111610556576105498183610f7c565b61150f565b60019360039361140d93926024106115e357875f52602c60205260405f20905f5260205260405f206115dc838254610fb6565b9055611584565b875f52602c60205260405f20905f526020528460405f20016115dc838254610fb6565b505050506113b092935061161a82826111b2565b80611629575b849381806113a1565b61163290611b5c565b5f611620565b5060055481146113cc565b61165060145482106111bf565b61165c61128382610e2c565b5f818152603460205260409020805490611677908490611234565b5f19810190811161051c57600361169a91835f5260346020520460405f20610e5c565b90549060031b1c906117086040516116b181610f60565b848152602080820184815260408084018781525f606086018181524260808801908152898352603287528483208c845290965292902094518555915160018501559051600284015551600383015551600490910155565b805f52603360205260405f20825f526020526117278360405f20611234565b600181146118e7575b811580156118dc575b6118d0575f52603260205260405f20815f52602052600360405f200160038154105f146118d0578054906001820180921161051c5755805f52600e602052600960405f20611788858254610fb6565b815501611796848254610fb6565b9055805f52600f6020526117d660405f20604051906117b482610f60565b84825285602083015260016040830152426060830152600b6080830152611b01565b5f908152600d60205260409020546001600160a01b0316908215605f848102908582041482171561051c5760015460405163a9059cbb60e01b81526001600160a01b0386811660048301526064909304602482015291602091839160449183915f91165af1801561055d576118b3575b506005840290848204600514171561051c5760646118649104611b5c565b5f52600d6020527fe17b61d324ce17328f433d0ab62581c0f0aa997312bae80fbdfcd2aa9b91d6e3606060018060a01b0360405f2054169360405190815260016020820152600b6040820152a3565b6118cb9060203d602011610556576105498183610f7c565b611846565b5050506113c190611b5c565b506005548214611739565b825f52600d60205260405f20604051610200810181811067ffffffffffffffff821117610f4c5760405281546001600160a01b0316815260018201805467ffffffffffffffff8111610f4c576040519161194760208360051b0184610f7c565b81835260208301905f5260205f205f915b838310611a8a5750505050602082015260028201546040820152600382015460608201526101e0600f60048401549360808401948552600581015460a0850152600681015460c0850152600781015460e085015260088101546101008501526009810154610120850152600a810154610140850152600b810154610160850152600c810154610180850152600d8101546101a0850152600e8101546101c0850152015491019081526036545f52603e60205260405f2082515f52602052611a228560405f20611234565b60365490815f52603e60205260405f2083515f5260205260405f205490519162015180830180931161051c57600592421115611a7a575b501015611a67575b50611730565b51603654611a7491611ace565b5f611a61565b611a849087611ace565b5f611a59565b60046020600192604051611a9d81610f30565b8554815284860154838201526002860154604082015260ff6003870154166060820152815201920192019190611958565b90805f52603d60205260405f20825f5260205260ff600460405f20015460081c1615611af8575050565b6113c191611c7b565b908154600160401b811015610f4c5760018101808455811015610339576113c1925f52600560205f20910201906080600491805184556020810151600185015560408101516002850155606081015160038501550151910155565b6002546001600160a01b03168015611c425760015460405163a9059cbb60e01b60208083019182526001600160a01b039485166024840152604480840187905283529390921692915f91611bb1606482610f7c565b519082855af11561055d575f513d611c395750803b155b611c2757506113c1906005545f52600e60205260405f20611bea828254610fb6565b90556005545f52600f60205260405f2060405191611c0783610f60565b5f835260208301525f604083015242606083015260056080830152611b01565b635274afe760e01b5f5260045260245ffd5b60011415611bc8565b60405162461bcd60e51b8152602060048201526011602482015270199959481859191c9cc81b9bdd081cd95d607a1b6044820152606490fd5b9060365490818103611e6c575f52603b60205260ff600860405f20015416611e38575f8281527f0d07fe408fa264e656a9c06e272928e4d4bb400d93cd5b5e74ac592f6170c2fd602052604090819020905190600490611cda83610f60565b80548352600181015460208401526002810154604084015260038101546060840152015460808201908152825f52603e60205260405f20845f5260205283600560405f2054109251149081611e0f575b50811591611e07575b5015611dc257805f52603d60205260405f20825f5260205260405f20916004830180549360ff8560081c16611dbb577f360cb96d3e85b4fc299ddfa9a572850fc70961c86f0f1703f033143b0e5a82cf9484600261010093868155426001820155015561ff0019161790556040519182916060830191835260208301524260408301520390a1565b5050505050565b60405162461bcd60e51b815260206004820152601f60248201527f4e6f7420656c696769626c6520666f72207765656b6c7920636f6e74657374006044820152606490fd5b90505f611d33565b905051835f52600d602052600f60405f2001549062015180820180921161051c5711155f611d2a565b60405162461bcd60e51b815260206004820152600c60248201526b149bdd5b990818db1bdcd95960a21b6044820152606490fd5b60405162461bcd60e51b815260206004820152600d60248201526c125b9d985b1a59081c9bdd5b99609a1b6044820152606490fdfebabb6a363fd9a057996d09882c0b74b710d121707d19eeffd91c51c3171a7c91a264697066735822122042e0053f21b04a4e35a7a6be6ef44bde4d88c4349eb2336c7980bfeb09fd2f0b64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1C234A8 EQ PUSH2 0xE12 JUMPI POP DUP1 PUSH4 0x2132D204 EQ PUSH2 0xDE6 JUMPI DUP1 PUSH4 0x2350268F EQ PUSH2 0xDBD JUMPI DUP1 PUSH4 0x2A891534 EQ PUSH2 0xDA0 JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0xD78 JUMPI DUP1 PUSH4 0x3080B5BC EQ PUSH2 0xD5B JUMPI DUP1 PUSH4 0x32BC298C EQ PUSH2 0xD3E JUMPI DUP1 PUSH4 0x32FCD966 EQ PUSH2 0xD1C JUMPI DUP1 PUSH4 0x375B43B4 EQ PUSH2 0xD01 JUMPI DUP1 PUSH4 0x39AB3603 EQ PUSH2 0xCA7 JUMPI DUP1 PUSH4 0x4060160A EQ PUSH2 0xA7A JUMPI DUP1 PUSH4 0x58C7D352 EQ PUSH2 0xA5F JUMPI DUP1 PUSH4 0x67D52D4D EQ PUSH2 0xA08 JUMPI DUP1 PUSH4 0x76F5F700 EQ PUSH2 0x9EB JUMPI DUP1 PUSH4 0x7848F0A3 EQ PUSH2 0x88D JUMPI DUP1 PUSH4 0x78F6AD6D EQ PUSH2 0x870 JUMPI DUP1 PUSH4 0x7CDC65F2 EQ PUSH2 0x848 JUMPI DUP1 PUSH4 0x8E222E24 EQ PUSH2 0x61D JUMPI DUP1 PUSH4 0x956A3228 EQ PUSH2 0x5F1 JUMPI DUP1 PUSH4 0xAE4708DC EQ PUSH2 0x5B9 JUMPI DUP1 PUSH4 0xBC1FA7C0 EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0xBFF1F9E1 EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0xC216212A EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0xC8DF2908 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0xC9ED0708 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0xCA8E9121 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0xD0A2FD79 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xE898FC38 EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0xE9E34A16 EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0xEBE0FF15 EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0xEC597E6F EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0xF5D74D93 EQ PUSH2 0x1A8 JUMPI PUSH4 0xFDDC806F EQ PUSH2 0x187 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 PUSH1 0x38 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH9 0x3635C9ADC5DEA00000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 PUSH1 0x39 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1C ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 PUSH1 0x36 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 PUSH1 0x37 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH10 0x21E19E0C9BAB2400000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x1A4 JUMPI PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x339 JUMPI PUSH1 0xB PUSH0 MSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x39E PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND CALLER EQ PUSH2 0xE71 JUMP JUMPDEST PUSH1 0xD DUP2 ADD SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x8 DUP4 LT PUSH2 0x3B3 DUP2 PUSH2 0xEB0 JUMP JUMPDEST ISZERO PUSH2 0x339 JUMPI DUP3 PUSH1 0x1C ADD SLOAD DUP4 PUSH1 0x24 ADD SLOAD SWAP1 PUSH1 0x6 DUP5 ADD SLOAD LT ISZERO SWAP1 DUP2 PUSH2 0x5AA JUMPI JUMPDEST POP ISZERO PUSH2 0x56D JUMPI DUP3 PUSH2 0x568 JUMPI JUMPDEST DUP4 PUSH0 MSTORE PUSH1 0x35 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP4 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x400 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND ISZERO PUSH2 0xEEB JUMP JUMPDEST PUSH2 0x409 DUP4 PUSH2 0xE2C JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x3 SWAP4 SWAP1 SWAP4 SHL SWAP2 SWAP1 SWAP2 SHR PUSH1 0x44 DUP4 ADD DUP2 SWAP1 MSTORE SWAP3 SWAP2 SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0x55D JUMPI PUSH2 0x530 JUMPI JUMPDEST POP DUP1 SLOAD SWAP3 PUSH1 0x1 DUP5 ADD DUP1 SWAP5 GT PUSH2 0x51C JUMPI PUSH2 0x4D8 SWAP4 PUSH1 0x1 SWAP3 SSTORE DUP6 PUSH0 MSTORE PUSH1 0x35 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP6 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP3 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0xE DUP2 ADD PUSH2 0x4A3 DUP5 DUP3 SLOAD PUSH2 0xFB6 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x4B0 DUP4 DUP8 DUP8 PUSH2 0x1643 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 PUSH2 0x4BD DUP5 PUSH2 0xF30 JUMP JUMPDEST DUP4 MSTORE PUSH0 PUSH1 0x20 DUP5 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0xB PUSH1 0x60 DUP5 ADD MSTORE ADD PUSH2 0xFC3 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x51C JUMPI PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x40 DUP3 ADD MSTORE PUSH7 0x2137B7B9BA32B9 PUSH1 0xC9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1EA2 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x80 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x551 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x556 JUMPI JUMPDEST PUSH2 0x549 DUP2 DUP4 PUSH2 0xF7C JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xF9E JUMP JUMPDEST PUSH2 0x45D JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x53F JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x155C19DC9859194814DB1BDD08185B9908141BDBDB PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0xB DUP4 ADD SLOAD LT ISZERO DUP6 PUSH2 0x3D1 JUMP JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x13 SLOAD DUP2 LT ISZERO PUSH2 0x1A4 JUMPI PUSH2 0x5E2 PUSH1 0x20 SWAP2 PUSH2 0xE44 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x24 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0x1A4 JUMPI PUSH1 0x24 CALLDATALOAD DUP2 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x662 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND CALLER EQ PUSH2 0xE71 JUMP JUMPDEST PUSH1 0xB DUP2 ADD SWAP2 PUSH2 0x674 PUSH1 0x7 DUP5 SLOAD LT PUSH2 0x1178 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP3 DUP4 DUP3 GT PUSH2 0x51C JUMPI PUSH1 0x13 SLOAD DUP5 LT ISZERO PUSH2 0x812 JUMPI PUSH2 0x693 DUP5 PUSH2 0xE44 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR DUP3 PUSH0 MSTORE PUSH1 0x2C PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP7 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP1 SLOAD DUP3 DUP2 LT PUSH2 0x7CD JUMPI DUP8 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP8 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH2 0x788 JUMPI DUP3 PUSH2 0x6E1 SWAP2 PUSH2 0x11B2 JUMP JUMPDEST SWAP1 SSTORE DUP2 SLOAD SWAP2 PUSH1 0x1 DUP4 ADD DUP1 SWAP4 GT PUSH2 0x51C JUMPI PUSH1 0x2 SWAP5 PUSH2 0x738 SWAP4 PUSH1 0x1 SWAP3 SSTORE PUSH1 0xC DUP2 ADD PUSH2 0x70B DUP5 DUP3 SLOAD PUSH2 0xFB6 JUMP JUMPDEST SWAP1 SSTORE DUP8 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP8 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP3 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x4B0 DUP4 DUP10 DUP10 PUSH2 0x1268 JUMP JUMPDEST ADD DUP1 SWAP2 GT PUSH2 0x51C JUMPI PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x40 DUP3 ADD MSTORE PUSH22 0x506F6F6C205570677261646520284561726E696E6729 PUSH1 0x50 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1EA2 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x80 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C726561647920707572636861736564206E65787420706F6F6C0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F756768206E65787420706F6F6C2062616C616E636500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BC81A1A59DA195C881C1BDBDB PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD DUP2 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x8C4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND CALLER EQ PUSH2 0xE71 JUMP JUMPDEST PUSH2 0x8D4 PUSH1 0x7 PUSH1 0xB DUP4 ADD SLOAD LT PUSH2 0x1178 JUMP JUMPDEST PUSH2 0x8DD DUP3 PUSH2 0xE44 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR DUP3 PUSH0 MSTORE PUSH1 0x2C PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP5 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SWAP2 DUP3 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0x9A6 JUMPI PUSH2 0x95E SWAP4 PUSH2 0x918 DUP5 PUSH1 0x1 SWAP5 PUSH2 0x11B2 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0xC DUP2 ADD PUSH2 0x929 DUP5 DUP3 SLOAD PUSH2 0xFB6 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x936 DUP4 DUP8 DUP8 PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 PUSH2 0x943 DUP5 PUSH2 0xF30 JUMP JUMPDEST DUP4 MSTORE PUSH0 PUSH1 0x20 DUP5 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0xA PUSH1 0x60 DUP5 ADD MSTORE ADD PUSH2 0xFC3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x40 DUP3 ADD MSTORE PUSH22 0x506F6F6C205265546F70757020284561726E696E6729 PUSH1 0x50 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1EA2 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x80 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F756768207265546F7075702062616C616E6365000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x93A80 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x60 PUSH2 0xA26 PUSH1 0x4 CALLDATALOAD PUSH2 0x101A JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x20 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x40 DUP3 DUP5 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x40 DUP7 ADD MSTORE ADD DUP5 DUP5 ADD MCOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xA DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0xAAE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND CALLER EQ PUSH2 0xE71 JUMP JUMPDEST PUSH1 0xB DUP2 ADD SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x7 DUP4 LT PUSH2 0xAC3 DUP2 PUSH2 0xEB0 JUMP JUMPDEST ISZERO PUSH2 0x339 JUMPI DUP3 PUSH1 0x15 ADD SLOAD PUSH1 0x6 DUP4 ADD SLOAD LT PUSH2 0xC62 JUMPI DUP3 ISZERO SWAP1 DUP2 ISZERO PUSH2 0xC5D JUMPI JUMPDEST DUP5 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP5 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH2 0xB04 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND ISZERO PUSH2 0xEEB JUMP JUMPDEST PUSH2 0xB0D DUP5 PUSH2 0xE44 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x3 SWAP4 SWAP1 SWAP4 SHL SWAP2 SWAP1 SWAP2 SHR PUSH1 0x44 DUP4 ADD DUP2 SWAP1 MSTORE SWAP4 SWAP2 SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0x55D JUMPI PUSH2 0xC40 JUMPI JUMPDEST POP PUSH2 0xBED JUMPI JUMPDEST DUP1 SLOAD SWAP3 PUSH1 0x1 DUP5 ADD DUP1 SWAP5 GT PUSH2 0x51C JUMPI PUSH2 0xBAC SWAP4 PUSH1 0x1 SWAP3 SSTORE DUP6 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP6 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP3 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0xC DUP2 ADD PUSH2 0x929 DUP5 DUP3 SLOAD PUSH2 0xFB6 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x51C JUMPI PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x4 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x141BDBDB PUSH1 0xE2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1EA2 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x80 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH1 0x4 DUP4 ADD SLOAD DUP1 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0xF PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD PUSH3 0x2A300 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x51C JUMPI TIMESTAMP LT ISZERO PUSH2 0xC1D JUMPI JUMPDEST POP PUSH2 0xB67 JUMP JUMPDEST PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x8 PUSH1 0x40 PUSH0 KECCAK256 ADD DUP1 SLOAD SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x51C JUMPI SSTORE DUP6 PUSH2 0xC17 JUMP JUMPDEST PUSH2 0xC58 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x556 JUMPI PUSH2 0x549 DUP2 DUP4 PUSH2 0xF7C JUMP JUMPDEST PUSH2 0xB61 JUMP JUMPDEST PUSH2 0xAE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5570677261646520796F7572206C6576656C2066697273740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x339 JUMPI PUSH1 0x7 PUSH0 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xF DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH8 0xDE0B6B3A7640000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x15180 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 PUSH1 0x3A SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x278D00 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x14 SLOAD DUP2 LT ISZERO PUSH2 0x1A4 JUMPI PUSH2 0x5E2 PUSH1 0x20 SWAP2 PUSH2 0xE2C JUMP JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x15 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A4 JUMPI DUP1 PUSH2 0x2710 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST PUSH1 0x14 SLOAD DUP2 LT ISZERO PUSH2 0x339 JUMPI PUSH1 0x14 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x13 SLOAD DUP2 LT ISZERO PUSH2 0x339 JUMPI PUSH1 0x13 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x339 JUMPI PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xE78 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x139BDD081E5BDD5C881858D8DBDD5B9D PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xEB7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x105D081B585E081B195D995B PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xEF2 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x141BDBDB08185B1C9958591E481C1D5C98DA185CD959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xF4C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xF4C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xF4C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1A4 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x1A4 JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x51C JUMPI JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xF4C JUMPI PUSH1 0x1 DUP2 ADD DUP1 DUP4 SSTORE DUP2 LT ISZERO PUSH2 0x339 JUMPI PUSH1 0x3 PUSH1 0x60 SWAP2 PUSH1 0xFF SWAP4 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 SHL ADD DUP5 MLOAD DUP2 SSTORE PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE ADD SWAP3 ADD MLOAD AND PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0xB DUP2 ADD SLOAD SWAP2 PUSH1 0x13 SLOAD DUP4 LT ISZERO PUSH2 0x112C JUMPI POP PUSH1 0x7 DUP3 LT ISZERO PUSH2 0x339 JUMPI PUSH1 0x6 DUP3 PUSH1 0x15 ADD SLOAD SWAP2 ADD SLOAD LT PUSH2 0x10DF JUMPI ISZERO ISZERO DUP1 PUSH2 0x10D8 JUMPI JUMPDEST PUSH2 0x109B JUMPI PUSH1 0x1 SWAP1 PUSH1 0x40 MLOAD PUSH2 0x106E PUSH1 0x40 DUP3 PUSH2 0xF7C JUMP JUMPDEST PUSH1 0x19 DUP2 MSTORE PUSH32 0x456C696769626C6520746F20627579206E65787420706F6F6C00000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH0 SWAP1 PUSH1 0x40 MLOAD PUSH2 0x10AB PUSH1 0x40 DUP3 PUSH2 0xF7C JUMP JUMPDEST PUSH1 0x17 DUP2 MSTORE PUSH32 0x4275792070726576696F757320706F6F6C206669727374000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST POP PUSH0 PUSH2 0x1059 JUMP JUMPDEST POP PUSH0 SWAP1 PUSH1 0x40 MLOAD PUSH2 0x10F0 PUSH1 0x60 DUP3 PUSH2 0xF7C JUMP JUMPDEST PUSH1 0x26 DUP2 MSTORE PUSH32 0x596F75206E65656420746F207265616368206120686967686572206C6576656C PUSH1 0x20 DUP3 ADD MSTORE PUSH6 0x8199A5C9CDD PUSH1 0xD2 SHL PUSH1 0x40 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP3 SWAP2 POP POP PUSH0 SWAP2 PUSH2 0x113F PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0xF7C JUMP JUMPDEST PUSH1 0x23 DUP2 MSTORE PUSH32 0x596F752061726520616C72656164792061742074686520686967686573742070 PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0x1BDBDB PUSH1 0xEA SHL PUSH1 0x40 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x117F JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x105D081B585E081C1BDBDB PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x51C JUMPI JUMP JUMPDEST ISZERO PUSH2 0x11C6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x125B9D985B1A59 PUSH1 0xCA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x11FC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x125B98DBDC9C9958DD08185B5BDD5B9D PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xF4C JUMPI PUSH2 0x1251 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0xE5C JUMP JUMPDEST DUP2 SWAP3 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP3 SWAP2 PUSH2 0x1277 PUSH1 0x13 SLOAD DUP6 LT PUSH2 0x11BF JUMP JUMPDEST PUSH2 0x1291 PUSH2 0x1283 DUP6 PUSH2 0xE44 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR CALLVALUE EQ PUSH2 0x11F5 JUMP JUMPDEST DUP4 PUSH0 MSTORE PUSH1 0x30 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH2 0x12AA DUP2 PUSH1 0x5 SLOAD PUSH2 0xFB6 JUMP JUMPDEST SWAP1 DUP6 PUSH0 MSTORE PUSH1 0x30 PUSH1 0x20 MSTORE PUSH2 0x12C0 DUP3 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1234 JUMP JUMPDEST PUSH0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x51C JUMPI PUSH2 0x12E6 PUSH1 0x3 PUSH2 0x138E SWAP3 DUP9 PUSH0 MSTORE PUSH1 0x30 PUSH1 0x20 MSTORE DIV PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0xE5C JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP2 PUSH2 0x1354 PUSH1 0x40 MLOAD PUSH2 0x12FD DUP2 PUSH2 0xF60 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP9 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 ADD DUP13 DUP2 MSTORE PUSH1 0x60 DUP6 ADD DUP10 DUP2 MSTORE PUSH0 PUSH1 0x80 DUP8 ADD DUP2 DUP2 MSTORE DUP16 DUP3 MSTORE PUSH1 0x2D DUP8 MSTORE DUP5 DUP3 KECCAK256 DUP11 DUP4 MSTORE SWAP1 SWAP7 MSTORE SWAP3 SWAP1 SWAP3 KECCAK256 SWAP5 MLOAD DUP6 SSTORE SWAP2 MLOAD PUSH1 0x1 DUP6 ADD SSTORE SWAP1 MLOAD PUSH1 0x2 DUP5 ADD SSTORE MLOAD PUSH1 0x3 DUP4 ADD SSTORE MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST DUP7 PUSH0 MSTORE PUSH1 0x2F PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP6 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x1373 DUP2 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1234 JUMP JUMPDEST DUP7 PUSH0 MSTORE PUSH1 0x2E PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP4 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1234 JUMP JUMPDEST PUSH1 0x3 DUP3 DIV SWAP5 PUSH0 SWAP4 PUSH0 SWAP3 JUMPDEST PUSH1 0x3 DUP5 LT PUSH2 0x13C3 JUMPI JUMPDEST POP POP POP POP PUSH2 0x13B0 SWAP3 SWAP4 POP PUSH2 0x11B2 JUMP JUMPDEST DUP1 PUSH2 0x13B8 JUMPI POP JUMP JUMPDEST PUSH2 0x13C1 SWAP1 PUSH2 0x1B5C JUMP JUMPDEST JUMP JUMPDEST DUP1 ISZERO DUP1 ISZERO PUSH2 0x1638 JUMPI JUMPDEST PUSH2 0x1606 JUMPI DUP3 PUSH0 MSTORE PUSH1 0x2D PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP5 DUP8 PUSH1 0x1 DUP8 ADD SLOAD PUSH1 0x4 DUP9 ADD DUP1 SLOAD PUSH1 0x27 DUP2 LT PUSH2 0x1418 JUMPI JUMPDEST POP POP POP PUSH2 0x140D PUSH1 0x3 SWAP2 PUSH1 0x1 SWAP4 PUSH2 0xFB6 JUMP JUMPDEST SWAP7 ADD SLOAD SWAP4 ADD SWAP3 PUSH2 0x1398 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 POP PUSH1 0x1 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x51C JUMPI SWAP1 DUP2 SWAP1 SSTORE DUP10 SWAP1 PUSH1 0x18 DUP2 GT PUSH2 0x15A9 JUMPI POP POP DUP1 PUSH0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x8 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1450 DUP12 DUP3 SLOAD PUSH2 0xFB6 JUMP JUMPDEST DUP2 SSTORE ADD PUSH2 0x145E DUP11 DUP3 SLOAD PUSH2 0xFB6 JUMP JUMPDEST SWAP1 SSTORE DUP1 PUSH0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH2 0x149E PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x147C DUP3 PUSH2 0xF60 JUMP JUMPDEST DUP6 DUP3 MSTORE DUP12 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x40 DUP4 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xA PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1B01 JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP9 ISZERO SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x5F DUP11 DUP2 MUL SWAP1 DUP12 DUP3 DIV EQ DUP5 OR ISZERO PUSH2 0x51C JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x64 SWAP1 SWAP4 DIV PUSH1 0x24 DUP3 ADD MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 PUSH0 SWAP2 AND GAS CALL DUP1 ISZERO PUSH2 0x55D JUMPI PUSH2 0x158D JUMPI JUMPDEST POP PUSH1 0x5 DUP11 MUL SWAP3 DUP11 DUP5 DIV PUSH1 0x5 EQ OR ISZERO PUSH2 0x51C JUMPI DUP10 PUSH1 0x3 SWAP3 PUSH2 0x140D SWAP3 PUSH2 0x1537 PUSH1 0x64 PUSH1 0x1 SWAP8 DIV PUSH2 0x1B5C JUMP JUMPDEST DUP7 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE DUP6 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND SWAP1 PUSH32 0xE17B61D324CE17328F433D0AB62581C0F0AA997312BAE80FBDFCD2AA9B91D6E3 PUSH1 0x60 PUSH1 0x40 MLOAD DUP7 DUP2 MSTORE DUP10 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x40 DUP3 ADD MSTORE LOG3 JUMPDEST SWAP4 DUP2 SWAP4 POP PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x15A4 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x556 JUMPI PUSH2 0x549 DUP2 DUP4 PUSH2 0xF7C JUMP JUMPDEST PUSH2 0x150F JUMP JUMPDEST PUSH1 0x1 SWAP4 PUSH1 0x3 SWAP4 PUSH2 0x140D SWAP4 SWAP3 PUSH1 0x24 LT PUSH2 0x15E3 JUMPI DUP8 PUSH0 MSTORE PUSH1 0x2C PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x15DC DUP4 DUP3 SLOAD PUSH2 0xFB6 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1584 JUMP JUMPDEST DUP8 PUSH0 MSTORE PUSH1 0x2C PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE DUP5 PUSH1 0x40 PUSH0 KECCAK256 ADD PUSH2 0x15DC DUP4 DUP3 SLOAD PUSH2 0xFB6 JUMP JUMPDEST POP POP POP POP PUSH2 0x13B0 SWAP3 SWAP4 POP PUSH2 0x161A DUP3 DUP3 PUSH2 0x11B2 JUMP JUMPDEST DUP1 PUSH2 0x1629 JUMPI JUMPDEST DUP5 SWAP4 DUP2 DUP1 PUSH2 0x13A1 JUMP JUMPDEST PUSH2 0x1632 SWAP1 PUSH2 0x1B5C JUMP JUMPDEST PUSH0 PUSH2 0x1620 JUMP JUMPDEST POP PUSH1 0x5 SLOAD DUP2 EQ PUSH2 0x13CC JUMP JUMPDEST PUSH2 0x1650 PUSH1 0x14 SLOAD DUP3 LT PUSH2 0x11BF JUMP JUMPDEST PUSH2 0x165C PUSH2 0x1283 DUP3 PUSH2 0xE2C JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 PUSH2 0x1677 SWAP1 DUP5 SWAP1 PUSH2 0x1234 JUMP JUMPDEST PUSH0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x51C JUMPI PUSH1 0x3 PUSH2 0x169A SWAP2 DUP4 PUSH0 MSTORE PUSH1 0x34 PUSH1 0x20 MSTORE DIV PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0xE5C JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP1 PUSH2 0x1708 PUSH1 0x40 MLOAD PUSH2 0x16B1 DUP2 PUSH2 0xF60 JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP5 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 ADD DUP8 DUP2 MSTORE PUSH0 PUSH1 0x60 DUP7 ADD DUP2 DUP2 MSTORE TIMESTAMP PUSH1 0x80 DUP9 ADD SWAP1 DUP2 MSTORE DUP10 DUP4 MSTORE PUSH1 0x32 DUP8 MSTORE DUP5 DUP4 KECCAK256 DUP13 DUP5 MSTORE SWAP1 SWAP7 MSTORE SWAP3 SWAP1 KECCAK256 SWAP5 MLOAD DUP6 SSTORE SWAP2 MLOAD PUSH1 0x1 DUP6 ADD SSTORE SWAP1 MLOAD PUSH1 0x2 DUP5 ADD SSTORE MLOAD PUSH1 0x3 DUP4 ADD SSTORE MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST DUP1 PUSH0 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP3 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x1727 DUP4 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1234 JUMP JUMPDEST PUSH1 0x1 DUP2 EQ PUSH2 0x18E7 JUMPI JUMPDEST DUP2 ISZERO DUP1 ISZERO PUSH2 0x18DC JUMPI JUMPDEST PUSH2 0x18D0 JUMPI PUSH0 MSTORE PUSH1 0x32 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x3 PUSH1 0x40 PUSH0 KECCAK256 ADD PUSH1 0x3 DUP2 SLOAD LT PUSH0 EQ PUSH2 0x18D0 JUMPI DUP1 SLOAD SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x51C JUMPI SSTORE DUP1 PUSH0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x9 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1788 DUP6 DUP3 SLOAD PUSH2 0xFB6 JUMP JUMPDEST DUP2 SSTORE ADD PUSH2 0x1796 DUP5 DUP3 SLOAD PUSH2 0xFB6 JUMP JUMPDEST SWAP1 SSTORE DUP1 PUSH0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH2 0x17D6 PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x17B4 DUP3 PUSH2 0xF60 JUMP JUMPDEST DUP5 DUP3 MSTORE DUP6 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x40 DUP4 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1B01 JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ISZERO PUSH1 0x5F DUP5 DUP2 MUL SWAP1 DUP6 DUP3 DIV EQ DUP3 OR ISZERO PUSH2 0x51C JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x64 SWAP1 SWAP4 DIV PUSH1 0x24 DUP3 ADD MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 PUSH0 SWAP2 AND GAS CALL DUP1 ISZERO PUSH2 0x55D JUMPI PUSH2 0x18B3 JUMPI JUMPDEST POP PUSH1 0x5 DUP5 MUL SWAP1 DUP5 DUP3 DIV PUSH1 0x5 EQ OR ISZERO PUSH2 0x51C JUMPI PUSH1 0x64 PUSH2 0x1864 SWAP2 DIV PUSH2 0x1B5C JUMP JUMPDEST PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH32 0xE17B61D324CE17328F433D0AB62581C0F0AA997312BAE80FBDFCD2AA9B91D6E3 PUSH1 0x60 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND SWAP4 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x40 DUP3 ADD MSTORE LOG3 JUMP JUMPDEST PUSH2 0x18CB SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x556 JUMPI PUSH2 0x549 DUP2 DUP4 PUSH2 0xF7C JUMP JUMPDEST PUSH2 0x1846 JUMP JUMPDEST POP POP POP PUSH2 0x13C1 SWAP1 PUSH2 0x1B5C JUMP JUMPDEST POP PUSH1 0x5 SLOAD DUP3 EQ PUSH2 0x1739 JUMP JUMPDEST DUP3 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x200 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xF4C JUMPI PUSH1 0x40 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xF4C JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1947 PUSH1 0x20 DUP4 PUSH1 0x5 SHL ADD DUP5 PUSH2 0xF7C JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x1A8A JUMPI POP POP POP POP PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1E0 PUSH1 0xF PUSH1 0x4 DUP5 ADD SLOAD SWAP4 PUSH1 0x80 DUP5 ADD SWAP5 DUP6 MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 DUP6 ADD MSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0x120 DUP6 ADD MSTORE PUSH1 0xA DUP2 ADD SLOAD PUSH2 0x140 DUP6 ADD MSTORE PUSH1 0xB DUP2 ADD SLOAD PUSH2 0x160 DUP6 ADD MSTORE PUSH1 0xC DUP2 ADD SLOAD PUSH2 0x180 DUP6 ADD MSTORE PUSH1 0xD DUP2 ADD SLOAD PUSH2 0x1A0 DUP6 ADD MSTORE PUSH1 0xE DUP2 ADD SLOAD PUSH2 0x1C0 DUP6 ADD MSTORE ADD SLOAD SWAP2 ADD SWAP1 DUP2 MSTORE PUSH1 0x36 SLOAD PUSH0 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP3 MLOAD PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x1A22 DUP6 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1234 JUMP JUMPDEST PUSH1 0x36 SLOAD SWAP1 DUP2 PUSH0 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP4 MLOAD PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP2 PUSH3 0x15180 DUP4 ADD DUP1 SWAP4 GT PUSH2 0x51C JUMPI PUSH1 0x5 SWAP3 TIMESTAMP GT ISZERO PUSH2 0x1A7A JUMPI JUMPDEST POP LT ISZERO PUSH2 0x1A67 JUMPI JUMPDEST POP PUSH2 0x1730 JUMP JUMPDEST MLOAD PUSH1 0x36 SLOAD PUSH2 0x1A74 SWAP2 PUSH2 0x1ACE JUMP JUMPDEST PUSH0 PUSH2 0x1A61 JUMP JUMPDEST PUSH2 0x1A84 SWAP1 DUP8 PUSH2 0x1ACE JUMP JUMPDEST PUSH0 PUSH2 0x1A59 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH1 0x40 MLOAD PUSH2 0x1A9D DUP2 PUSH2 0xF30 JUMP JUMPDEST DUP6 SLOAD DUP2 MSTORE DUP5 DUP7 ADD SLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x2 DUP7 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0x3 DUP8 ADD SLOAD AND PUSH1 0x60 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x1958 JUMP JUMPDEST SWAP1 DUP1 PUSH0 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP3 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD PUSH1 0x8 SHR AND ISZERO PUSH2 0x1AF8 JUMPI POP POP JUMP JUMPDEST PUSH2 0x13C1 SWAP2 PUSH2 0x1C7B JUMP JUMPDEST SWAP1 DUP2 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xF4C JUMPI PUSH1 0x1 DUP2 ADD DUP1 DUP5 SSTORE DUP2 LT ISZERO PUSH2 0x339 JUMPI PUSH2 0x13C1 SWAP3 PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 PUSH0 KECCAK256 SWAP2 MUL ADD SWAP1 PUSH1 0x80 PUSH1 0x4 SWAP2 DUP1 MLOAD DUP5 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP6 ADD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE ADD MLOAD SWAP2 ADD SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x1C42 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP1 DUP5 ADD DUP8 SWAP1 MSTORE DUP4 MSTORE SWAP4 SWAP1 SWAP3 AND SWAP3 SWAP2 PUSH0 SWAP2 PUSH2 0x1BB1 PUSH1 0x64 DUP3 PUSH2 0xF7C JUMP JUMPDEST MLOAD SWAP1 DUP3 DUP6 GAS CALL ISZERO PUSH2 0x55D JUMPI PUSH0 MLOAD RETURNDATASIZE PUSH2 0x1C39 JUMPI POP DUP1 EXTCODESIZE ISZERO JUMPDEST PUSH2 0x1C27 JUMPI POP PUSH2 0x13C1 SWAP1 PUSH1 0x5 SLOAD PUSH0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1BEA DUP3 DUP3 SLOAD PUSH2 0xFB6 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x5 SLOAD PUSH0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1C07 DUP4 PUSH2 0xF60 JUMP JUMPDEST PUSH0 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH0 PUSH1 0x40 DUP4 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x5 PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1B01 JUMP JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x1BC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x199959481859191C9CC81B9BDD081CD95D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x36 SLOAD SWAP1 DUP2 DUP2 SUB PUSH2 0x1E6C JUMPI PUSH0 MSTORE PUSH1 0x3B PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD AND PUSH2 0x1E38 JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH32 0xD07FE408FA264E656A9C06E272928E4D4BB400D93CD5B5E74AC592F6170C2FD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD SWAP1 PUSH1 0x4 SWAP1 PUSH2 0x1CDA DUP4 PUSH2 0xF60 JUMP JUMPDEST DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE ADD SLOAD PUSH1 0x80 DUP3 ADD SWAP1 DUP2 MSTORE DUP3 PUSH0 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP5 PUSH0 MSTORE PUSH1 0x20 MSTORE DUP4 PUSH1 0x5 PUSH1 0x40 PUSH0 KECCAK256 SLOAD LT SWAP3 MLOAD EQ SWAP1 DUP2 PUSH2 0x1E0F JUMPI JUMPDEST POP DUP2 ISZERO SWAP2 PUSH2 0x1E07 JUMPI JUMPDEST POP ISZERO PUSH2 0x1DC2 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP3 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP2 PUSH1 0x4 DUP4 ADD DUP1 SLOAD SWAP4 PUSH1 0xFF DUP6 PUSH1 0x8 SHR AND PUSH2 0x1DBB JUMPI PUSH32 0x360CB96D3E85B4FC299DDFA9A572850FC70961C86F0F1703F033143B0E5A82CF SWAP5 DUP5 PUSH1 0x2 PUSH2 0x100 SWAP4 DUP7 DUP2 SSTORE TIMESTAMP PUSH1 0x1 DUP3 ADD SSTORE ADD SSTORE PUSH2 0xFF00 NOT AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x60 DUP4 ADD SWAP2 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP4 ADD MSTORE SUB SWAP1 LOG1 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656C696769626C6520666F72207765656B6C7920636F6E7465737400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1D33 JUMP JUMPDEST SWAP1 POP MLOAD DUP4 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0xF PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 PUSH3 0x15180 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x51C JUMPI GT ISZERO PUSH0 PUSH2 0x1D2A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x149BDD5B990818DB1BDCD959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x125B9D985B1A59081C9BDD5B99 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID 0xBA 0xBB PUSH11 0x363FD9A057996D09882C0B PUSH21 0xB710D121707D19EEFFD91C51C3171A7C91A2646970 PUSH7 0x735822122042E0 SDIV EXTCODEHASH 0x21 0xB0 BLOBBASEFEE 0x4E CALLDATALOAD 0xA7 0xA6 0xBE PUSH15 0xF44BDE4D88C4349EB2336C7980BFEB MULMOD REVERT 0x2F SIGNEXTEND PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "102:12964:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;102:12964:7;;;;;7152:38:8;102:12964:7;;;;;;;;;;;;;;;;;-1:-1:-1;;102:12964:7;;;;;;;;-1:-1:-1;;;;;102:12964:7;;;;;;;;;;;;;;-1:-1:-1;;102:12964:7;;;;;534:24:8;102:12964:7;;;;;;;;;;;;;-1:-1:-1;;102:12964:7;;;;;;;6996:7:8;102:12964:7;;;;;;;;;-1:-1:-1;;102:12964:7;;;;460:30:8;102:12964:7;;;-1:-1:-1;;;;;102:12964:7;;;;;;;;;;;;;;-1:-1:-1;;102:12964:7;;;;;7197:39:8;102:12964:7;;;;;;;;;;;;;-1:-1:-1;;102:12964:7;;;;;;;5304:64:8;;;;;102:12964:7;;5304:64:8;102:12964:7;;;;;;;;;;;;;;-1:-1:-1;;102:12964:7;;;;;7065:34:8;102:12964:7;;;;;;;;;;;;;-1:-1:-1;;102:12964:7;;;;;7110:35:8;102:12964:7;;;;;;;;;;;;;-1:-1:-1;;102:12964:7;;;;;;;7048:8:8;102:12964:7;;;;;;;;;-1:-1:-1;;102:12964:7;;;;;;1288:540:8;102:12964:7;1288:540:8;;;;;;102:12964:7;;;;;;1288:540:8;102:12964:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;102:12964:7;;;;;565:22:8;102:12964:7;;;;;;;;;;;;;-1:-1:-1;;102:12964:7;;;;;;;;;9259:5;102:12964;;;;;9284:55;102:12964;;;;;;;;9308:10;9292:26;9284:55;:::i;:::-;9259:5;9358:17;;102:12964;;;9358:21;9378:1;9358:21;;9350:46;;;:::i;:::-;102:12964;;;;9567:21;102:12964;;;9666:20;102:12964;;9810:10;;;;102:12964;9810:27;;:61;;;;102:12964;;;;;9977:12;9973:110;;102:12964;;;;10102:14;102:12964;;;;;;;;;;10093:69;102:12964;;;;;;10101:34;10093:69;:::i;:::-;10195:28;;;:::i;:::-;102:12964;;;;;;-1:-1:-1;;;10291:58:7;;9308:10;102:12964;10291:58;;102:12964;10329:4;102:12964;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;102:12964:7;10291:58;;;;;;;;102:12964;;;;;;;;;;;;;10591:168;102:12964;;;;;;;10102:14;102:12964;;;;;;;;;;;;;;;;;;;;;;10454:19;;;:35;102:12964;;;10454:35;:::i;:::-;102:12964;;10535:12;;;;;:::i;:::-;102:12964;;;;;;:::i;:::-;;;;;10610:148;;102:12964;10702:15;102:12964;10610:148;;102:12964;10744:2;10610:148;;;102:12964;10591:13;:168;:::i;:::-;102:12964;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;10610:148:7;102:12964;;;-1:-1:-1;;;;;;;;;;;102:12964:7;9308:10;10777:53;;102:12964;;;;;;;;;;9666:20;102:12964;;10291:58;;;102:12964;10291:58;102:12964;10291:58;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;102:12964;;;;;;;;;9973:110;;;102:12964;;;-1:-1:-1;;;102:12964:7;;;;;;;;9666:20;102:12964;;;-1:-1:-1;;;102:12964:7;;;;;;;9810:61;9841:14;;;;;102:12964;9841:30;;9810:61;;;102:12964;;;;;;-1:-1:-1;;102:12964:7;;;;;;5028:93:8;102:12964:7;5028:93:8;;;;;;102:12964:7;5028:93:8;;:::i;:::-;102:12964:7;;;;;;;;;;;;;;;;;;-1:-1:-1;;102:12964:7;;;;;;;5375:61:8;;;;;102:12964:7;;5375:61:8;102:12964:7;;;;;;;;;;;;;;-1:-1:-1;;102:12964:7;;;;;;;;;;;;;;;;;;;2220:5;102:12964;;;;;2245:55;102:12964;;;;;;;;2269:10;2253:26;2245:55;:::i;:::-;2319:14;;;102:12964;2311:42;2336:1;102:12964;;2319:18;2311:42;:::i;:::-;102:12964;;;;;;;;;2468:12;102:12964;2454:33;;102:12964;;;2532:25;;;:::i;:::-;102:12964;;;;;;;;;2804:13;102:12964;;;;;;;;;;;;;;;2854:31;;;102:12964;;;;;2938:11;102:12964;;;;;;;;;;;;;;;;;;3040:31;;;;:::i;:::-;102:12964;;;;;;;;;;;;;;;3362:192;102:12964;;;;3149:16;;;:32;102:12964;;;3149:32;:::i;:::-;102:12964;;;;;2938:11;102:12964;;;;;;;;;;;;;;;;;;;;;;3275:47;;;;;:::i;3362:192::-;102:12964;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3381:172:7;102:12964;;;-1:-1:-1;;;;;;;;;;;102:12964:7;2269:10;3572:70;;102:12964;;;;-1:-1:-1;;;102:12964:7;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;102:12964:7;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;102:12964:7;;;;;;;;;;;;-1:-1:-1;;;102:12964:7;;;;;;;;;;;;;-1:-1:-1;;102:12964:7;;;;422:28:8;102:12964:7;;;-1:-1:-1;;;;;102:12964:7;;;;;;;;;;;;;;-1:-1:-1;;102:12964:7;;;;;1131:34:8;102:12964:7;;;;;;;;;;;;;-1:-1:-1;;102:12964:7;;;;;;;;;;;987:5;102:12964;;;;;1012:55;102:12964;;;;;;;;1036:10;1020:26;1012:55;:::i;:::-;1078:42;1103:1;1086:14;;;102:12964;1086:18;1078:42;:::i;:::-;1265:21;;;:::i;:::-;102:12964;;;;;;;;;1331:13;102:12964;;;;;;;;;;;;;;1381:14;102:12964;;;1381:30;;;;102:12964;;1711:192;1482:30;;;102:12964;1482:30;;:::i;:::-;102:12964;;1552:16;;;:32;102:12964;;;1552:32;:::i;:::-;102:12964;;1669:12;;;;;:::i;:::-;102:12964;;;;;;:::i;:::-;;;;;1730:172;;102:12964;1822:15;102:12964;1730:172;;102:12964;1865:2;1730:172;;;102:12964;1711:13;:192;:::i;:::-;102:12964;;;;;;;;;;;;;;;-1:-1:-1;;;1730:172:7;102:12964;;;-1:-1:-1;;;;;;;;;;;102:12964:7;1036:10;1921:63;;102:12964;;;;-1:-1:-1;;;102:12964:7;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;102:12964:7;;;;;;;6894:6:8;102:12964:7;;;;;;;;;-1:-1:-1;;102:12964:7;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;102:12964:7;;;;;;;;;;;;;-1:-1:-1;;102:12964:7;;;;;;;848:2:8;102:12964:7;;;;;;;;;-1:-1:-1;;102:12964:7;;;;;;;;;3739:5;102:12964;;;;;3764:55;102:12964;;;;;;;;3788:10;3772:26;3764:55;:::i;:::-;3838:14;;;102:12964;;;3838:18;3855:1;3838:18;;3830:43;;;:::i;:::-;102:12964;;;;4036:15;102:12964;;4177:10;;;102:12964;4177:27;102:12964;;4313:12;;;;;4309:107;;102:12964;;;;4435:11;102:12964;;;;;;;;;;4426:66;102:12964;;;;;;4434:31;4426:66;:::i;:::-;4537:22;;;:::i;:::-;102:12964;;;;;;-1:-1:-1;;;4627:58:7;;3788:10;102:12964;4627:58;;102:12964;4665:4;102:12964;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;102:12964:7;4627:58;;;;;;;;102:12964;4706:234;;;102:12964;;;;;;;;;;;;5160:168;102:12964;;;;;;;4435:11;102:12964;;;;;;;;;;;;;;;;;;;;;;5028:16;;;:32;102:12964;;;5028:32;:::i;5160:168::-;102:12964;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5179:148:7;102:12964;;;-1:-1:-1;;;;;;;;;;;102:12964:7;3788:10;5346:50;;102:12964;4706:234;102:12964;4756:14;;102:12964;;;;3739:5;102:12964;;4788:34;102:12964;;;4788:34;102:12964;4825:6;102:12964;;;;;;;4835:15;-1:-1:-1;4788:62:7;4785:144;;4706:234;;;;4785:144;102:12964;;3739:5;102:12964;;4871:37;102:12964;;;4871:37;102:12964;;;;;;;;;;;;4785:144;;;4627:58;;;102:12964;4627:58;102:12964;4627:58;;;;;;;:::i;:::-;;;4309:107;;;102:12964;;;-1:-1:-1;;;102:12964:7;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;102:12964:7;;;;;;864:31:8;102:12964:7;864:31:8;;;;;;102:12964:7;;;;;;864:31:8;102:12964:7;;;;;;;;;;;;;;;;;;;-1:-1:-1;;102:12964:7;;;;;;;789:2:8;102:12964:7;;;;;;;;;-1:-1:-1;;102:12964:7;;;;;;;1120:4:8;102:12964:7;;;;;;;;;-1:-1:-1;;102:12964:7;;;;;;;731:6:8;102:12964:7;;;;;;;;;-1:-1:-1;;102:12964:7;;;;;7243:33:8;102:12964:7;;;;;;;;;;;;;-1:-1:-1;;102:12964:7;;;;;;;;-1:-1:-1;;;;;102:12964:7;;;;;;;;;;;;;;-1:-1:-1;;102:12964:7;;;;;;;6945:7:8;102:12964:7;;;;;;;;;-1:-1:-1;;102:12964:7;;;;;;5128:105:8;102:12964:7;5128:105:8;;;;;;102:12964:7;5128:105:8;;:::i;102:12964:7:-;;;;;;-1:-1:-1;;102:12964:7;;;;;;;5240:57:8;;;;;102:12964:7;;5240:57:8;102:12964:7;;;;;;;;;;;;;;-1:-1:-1;;102:12964:7;;;;;683:5:8;102:12964:7;;;;;5128:105:8;102:12964:7;;;;;;5128:105:8;-1:-1:-1;102:12964:7;;-1:-1:-1;102:12964:7;;;-1:-1:-1;102:12964:7;:::o;:::-;4537:12;102:12964;;;;;;4537:12;-1:-1:-1;102:12964:7;;-1:-1:-1;102:12964:7;;;-1:-1:-1;102:12964:7;:::o;:::-;;;;;;;;-1:-1:-1;102:12964:7;;-1:-1:-1;102:12964:7;;;-1:-1:-1;102:12964:7;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;102:12964:7;;;;;;;;;;;;-1:-1:-1;;;102:12964:7;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;102:12964:7;;;;;;;;;;;;-1:-1:-1;;;102:12964:7;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;102:12964:7;;;;;;;;;;;;-1:-1:-1;;;102:12964:7;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;102:12964:7;;;;;-1:-1:-1;102:12964:7;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;102:12964:7;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;102:12964:7;;-1:-1:-1;102:12964:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;193:683::-;102:12964;;;;319:5;102:12964;;;;;359:14;;;102:12964;;400:12;102:12964;388:31;;;384:117;;102:12964;;;;;;;576:10;102:12964;534:15;102:12964;;576:10;;102:12964;576:26;572:115;;703:12;;:41;;;193:683;699:115;;834:4;102:12964;;;;;;;:::i;:::-;;;;;;;;;193:683;:::o;699:115::-;102:12964;;;;;;;;:::i;:::-;;;;;;;;;761:41;:::o;703:::-;;102:12964;703:41;;572:115;619:56;102:12964;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;102:12964:7;;;;619:56;:::o;384:117::-;436:53;;;;102:12964;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;102:12964:7;;;;436:53;:::o;102:12964::-;;;;:::o;:::-;;;-1:-1:-1;;;102:12964:7;;;;;;;;;;;;-1:-1:-1;;;102:12964:7;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;102:12964:7;;;;;;;;;;;;-1:-1:-1;;;102:12964:7;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;102:12964:7;;;;;;;;;;;;-1:-1:-1;;;102:12964:7;;;;;;;;;;-1:-1:-1;;;102:12964:7;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::o;5418:1108::-;;;5511:48;5528:12;102:12964;5519:28;;5511:48;:::i;:::-;5570:62;5591:20;;;:::i;:::-;102:12964;;;;;;5578:9;:33;5570:62;:::i;:::-;102:12964;-1:-1:-1;102:12964:7;5723:9;102:12964;;;-1:-1:-1;102:12964:7;;5838:26;102:12964;5838:12;102:12964;5838:26;:::i;:::-;102:12964;;-1:-1:-1;102:12964:7;5723:9;102:12964;;5875:33;102:12964;;-1:-1:-1;102:12964:7;5875:33;:::i;:::-;-1:-1:-1;;102:12964:7;;;;;;;6013:30;102:12964;6395:46;102:12964;;-1:-1:-1;102:12964:7;5723:9;102:12964;;;;-1:-1:-1;102:12964:7;6013:30;:::i;:::-;102:12964;;;;;;;;;;;;;:::i;:::-;;;;;6115:196;;;102:12964;;;;6115:196;;;102:12964;;;6115:196;;;102:12964;;;-1:-1:-1;6115:196:7;;;102:12964;;;;;;6082:11;102:12964;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;102:12964:7;6335:13;102:12964;;;-1:-1:-1;102:12964:7;;-1:-1:-1;102:12964:7;;;6335:49;102:12964;;-1:-1:-1;102:12964:7;6335:49;:::i;:::-;102:12964;-1:-1:-1;102:12964:7;6395:12;102:12964;;;-1:-1:-1;102:12964:7;;-1:-1:-1;102:12964:7;;;;-1:-1:-1;102:12964:7;6395:46;:::i;:::-;102:12964;;;6750:25;-1:-1:-1;6792:8:7;-1:-1:-1;6788:1181:7;6802:3;102:12964;6802:3;;;;6788:1181;8081:26;;;;;;;;;:::i;:::-;8122:14;8118:73;;5418:1108;:::o;8118:73::-;8168:10;;;:::i;:::-;5418:1108::o;6807:3::-;6843:18;;:51;;;;6807:3;6839:335;;102:12964;-1:-1:-1;102:12964:7;6082:11;102:12964;;;-1:-1:-1;102:12964:7;;-1:-1:-1;102:12964:7;;;;-1:-1:-1;102:12964:7;7285:12;;5980:1;7285:12;;102:12964;7333:16;;;102:12964;;7352:2;7333:21;;7329:497;;6807:3;7849:34;;;;102:12964;7849:34;5980:1;7849:34;;:::i;:::-;7943:14;;102:12964;6807:3;102:12964;6792:8;;;7329:497;102:12964;;;;5980:1;102:12964;;;;;;;;;;;;;7441:2;7421:22;;7441:2;;102:12964;;;-1:-1:-1;102:12964:7;8365:11;102:12964;;8472:14;102:12964;-1:-1:-1;102:12964:7;8399:25;102:12964;;;8399:25;:::i;:::-;102:12964;;8472:14;:24;102:12964;;;8472:24;:::i;:::-;102:12964;;;-1:-1:-1;102:12964:7;8625:13;102:12964;;8625:257;102:12964;-1:-1:-1;102:12964:7;;;;;;;:::i;:::-;;;;8656:225;102:12964;8656:225;;102:12964;5980:1;102:12964;8656:225;;102:12964;8792:15;6115:196;8656:225;;102:12964;7529:2;6115:196;8656:225;;102:12964;8625:257;:::i;:::-;-1:-1:-1;102:12964:7;;;8908:5;102:12964;;;;;;;;;;-1:-1:-1;;;;;102:12964:7;8970:2;102:12964;;;;;;;;;;;;;;;;;-1:-1:-1;;;8989:28:7;;-1:-1:-1;;;;;102:12964:7;;;7333:16;8989:28;;102:12964;8975:3;102:12964;;;;;;;;;;;;;;;;-1:-1:-1;;102:12964:7;8989:28;;;;;;;;7417:392;102:12964;5838:12;102:12964;;;;;;5838:12;102:12964;;;;;;;;7849:34;102:12964;9043:16;8975:3;5980:1;102:12964;;9043:16;:::i;:::-;102:12964;-1:-1:-1;102:12964:7;8908:5;102:12964;;;;;;;;-1:-1:-1;102:12964:7;;;;9078:79;6115:196;102:12964;;;;;;;;;;7529:2;102:12964;;;;9078:79;7417:392;7329:497;;;;;;8989:28;;;102:12964;8989:28;;;;;;;;;:::i;:::-;;;7417:392;5980:1;;102:12964;;7849:34;;7562:22;7582:2;-1:-1:-1;7582:2:7;;102:12964;-1:-1:-1;102:12964:7;7609:13;102:12964;;;-1:-1:-1;102:12964:7;;-1:-1:-1;102:12964:7;;;;-1:-1:-1;102:12964:7;7609:66;102:12964;;;7609:66;:::i;:::-;102:12964;;7417:392;;7558:251;102:12964;-1:-1:-1;102:12964:7;7724:13;102:12964;;;-1:-1:-1;102:12964:7;;-1:-1:-1;102:12964:7;;;;;-1:-1:-1;102:12964:7;7724:47;:65;102:12964;;;7724:65;:::i;6839:335::-;7003:26;;;;8081;7003;;;;;;;:::i;:::-;7052:13;7048:87;;6839:335;7153:5;;;;;;7048:87;7105:9;;;:::i;:::-;7048:87;;;6843:51;102:12964;5838:12;102:12964;6865:29;;6843:51;;10852:2200;10948:54;10965:18;102:12964;10956:34;;10948:54;:::i;:::-;11013:68;11034:26;;;:::i;11013:68::-;-1:-1:-1;102:12964:7;;;11175:12;102:12964;;;;;;;;11345:37;;102:12964;;11345:37;:::i;:::-;-1:-1:-1;;102:12964:7;;;;;;;;11487:33;102:12964;;-1:-1:-1;102:12964:7;11175:12;102:12964;;;;-1:-1:-1;102:12964:7;11487:33;:::i;:::-;102:12964;;;;;;;;;;;;;:::i;:::-;;;;;11595:222;;;102:12964;;;;11595:222;;;102:12964;;;-1:-1:-1;11595:222:7;;;102:12964;;;11786:15;11595:222;;;102:12964;;;;;;11558:14;102:12964;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;102:12964:7;11828:19;102:12964;;;-1:-1:-1;102:12964:7;;-1:-1:-1;102:12964:7;;;11828:54;102:12964;;-1:-1:-1;102:12964:7;11828:54;:::i;:::-;11454:1;11907:11;;11904:584;;10852:2200;12506:13;;:41;;;;10852:2200;12502:123;;-1:-1:-1;102:12964:7;11558:14;102:12964;;;-1:-1:-1;102:12964:7;;-1:-1:-1;102:12964:7;;;;;-1:-1:-1;102:12964:7;12712:16;102:12964;;;12712:18;12708:245;102:12964;;;;;;11454:1;102:12964;;;;;;;;;-1:-1:-1;102:12964:7;8365:11;102:12964;;8555:17;102:12964;-1:-1:-1;102:12964:7;8399:25;102:12964;;;8399:25;:::i;:::-;102:12964;;8555:17;:27;102:12964;;;8555:27;:::i;:::-;102:12964;;;-1:-1:-1;102:12964:7;8625:13;102:12964;;8625:257;102:12964;-1:-1:-1;102:12964:7;;;;;;;:::i;:::-;;;;8656:225;102:12964;8656:225;;102:12964;11454:1;102:12964;8656:225;;102:12964;11786:15;11595:222;8656:225;;102:12964;12846:2;11595:222;8656:225;;102:12964;8625:257;:::i;:::-;-1:-1:-1;102:12964:7;;;8908:5;102:12964;;;;;;-1:-1:-1;;;;;102:12964:7;;;;8970:2;102:12964;;;;;;;;;;;;;;;;;-1:-1:-1;;;8989:28:7;;-1:-1:-1;;;;;102:12964:7;;;8989:28;;;102:12964;8975:3;102:12964;;;;;;;;;;;;;;;;-1:-1:-1;;102:12964:7;8989:28;;;;;;;;12708:245;102:12964;9051:1;102:12964;;;;;;9051:1;102:12964;;;;;8975:3;9043:16;102:12964;;9043:16;:::i;:::-;-1:-1:-1;102:12964:7;8908:5;102:12964;;9078:79;11595:222;102:12964;;;;;;-1:-1:-1;102:12964:7;;;;;;9078:79;102:12964;;11454:1;102:12964;;;;12846:2;102:12964;;;;9078:79;10852:2200::o;8989:28::-;;;102:12964;8989:28;102:12964;8989:28;;;;;;;:::i;:::-;;;12708:245;12907:12;;;;;;:::i;12506:41::-;102:12964;12535:12;102:12964;12523:24;;12506:41;;11904:584;102:12964;-1:-1:-1;102:12964:7;11958:5;102:12964;;;-1:-1:-1;102:12964:7;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;102:12964:7;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;102:12964:7;;-1:-1:-1;102:12964:7;-1:-1:-1;102:12964:7;;;;;;;;;;;;;;;;;;;;;;;;;;;11595:222;102:12964;;;;;;;;;;11595:222;102:12964;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11958:5;102:12964;;;;;;;;;;;;;;;;;;;;;;12008:18;102:12964;-1:-1:-1;102:12964:7;11990:17;102:12964;;;-1:-1:-1;102:12964:7;;;-1:-1:-1;102:12964:7;;;11990:73;102:12964;;-1:-1:-1;102:12964:7;11990:73;:::i;:::-;12008:18;102:12964;;;-1:-1:-1;102:12964:7;11990:17;102:12964;;;-1:-1:-1;102:12964:7;;;-1:-1:-1;102:12964:7;;;;-1:-1:-1;102:12964:7;;;;;731:6:8;102:12964:7;;;;;;;;11786:15;;-1:-1:-1;12181:55:7;12178:150;;102:12964;12346:17;;;12342:121;;102:12964;11904:584;;;12342:121;102:12964;12008:18;102:12964;12428:18;;;:::i;:::-;12342:121;;;12178:150;12293:18;;;;:::i;:::-;12178:150;;;102:12964;;;11454:1;102:12964;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;11595:222;102:12964;;;;;;;;;;;;;;11038:213:8;;102:12964:7;-1:-1:-1;102:12964:7;11125:13:8;102:12964:7;;;-1:-1:-1;102:12964:7;;-1:-1:-1;102:12964:7;;;;11125:44:8;102:12964:7;-1:-1:-1;102:12964:7;11125:44:8;102:12964:7;;;;11124:45:8;11120:124;;11038:213;;:::o;11120:124::-;11223:8;;;:::i;102:12964:7:-;;;;-1:-1:-1;;;102:12964:7;;;;;;;;;;;;;;;;;;-1:-1:-1;102:12964:7;;;-1:-1:-1;102:12964:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8483:611:8;8545:13;102:12964:7;-1:-1:-1;;;;;102:12964:7;8545:27:8;;102:12964:7;;;;;;-1:-1:-1;;;1328:43:5;;;;;;;-1:-1:-1;;;;;102:12964:7;;;1328:43:5;;;102:12964:7;;;;;;;;1328:43:5;;102:12964:7;;;;;1328:43:5;-1:-1:-1;;1328:43:5;102:12964:7;;1328:43:5;:::i;:::-;8507:421;;;;;;;;;-1:-1:-1;8507:421:5;;8942:15;;8960:26;;;:31;8942:68;8938:146;;102:12964:7;8904:186:8;102:12964:7;8839:12:8;102:12964:7;-1:-1:-1;102:12964:7;8827:11:8;1328:43:5;102:12964:7;;-1:-1:-1;102:12964:7;8859:36:8;102:12964:7;;;8859:36:8;:::i;:::-;102:12964:7;;8839:12:8;102:12964:7;-1:-1:-1;102:12964:7;8904:13:8;1328:43:5;102:12964:7;;-1:-1:-1;102:12964:7;;;;;;;:::i;:::-;-1:-1:-1;102:12964:7;;1328:43:5;8937:152:8;;102:12964:7;-1:-1:-1;102:12964:7;8937:152:8;;102:12964:7;9042:15:8;8937:152;;;102:12964:7;8839:12:8;8937:152;;;102:12964:7;8904:186:8;:::i;8938:146:5:-;9033:40;;;-1:-1:-1;9033:40:5;;102:12964:7;1328:43:5;-1:-1:-1;9033:40:5;8942:68;8691:4:8;8994:16:5;;8942:68;;102:12964:7;;;-1:-1:-1;;;102:12964:7;;;;;;;;;;;;-1:-1:-1;;;102:12964:7;;;;;;;11257:1502:8;;11367:18;102:12964:7;;11412:30:8;;;102:12964:7;;-1:-1:-1;102:12964:7;11480:16:8;102:12964:7;;;11480:33:8;102:12964:7;-1:-1:-1;102:12964:7;11480:33:8;102:12964:7;;;;-1:-1:-1;102:12964:7;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;11596:1:8;102:12964:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;102:12964:7;11644:17:8;102:12964:7;;;-1:-1:-1;102:12964:7;;-1:-1:-1;102:12964:7;;;;11695:1:8;102:12964:7;-1:-1:-1;102:12964:7;;11644:52:8;102:12964:7;;11746:32:8;:124;;;;11257:1502;11644:52;;;11900:36;;;11257:1502;102:12964:7;;;;;-1:-1:-1;102:12964:7;12337:13:8;102:12964:7;;;-1:-1:-1;102:12964:7;;-1:-1:-1;102:12964:7;;;;-1:-1:-1;102:12964:7;12388:25:8;102:12964:7;12388:25:8;;102:12964:7;;;;;11480:33:8;102:12964:7;;12384:38:8;;12689:62;102:12964:7;;;;;;;;12563:15:8;11596:1;12538:22;;102:12964:7;12589:21:8;102:12964:7;;;;;;;;;12689:62:8;;;102:12964:7;;;;;;;;;;12563:15:8;102:12964:7;;;;12689:62:8;;;11257:1502::o;12384:38::-;12415:7;;;;;:::o;102:12964:7:-;;;-1:-1:-1;;;102:12964:7;;;;;;;;;;;;;;;;;;;;11900:36:8;;;;;;11746:124;102:12964:7;;;;-1:-1:-1;102:12964:7;11827:5:8;102:12964:7;;11827:31:8;102:12964:7;-1:-1:-1;102:12964:7;11827:31:8;102:12964:7;;731:6:8;102:12964:7;;;;;;;11796:74:8;;11746:124;;;102:12964:7;;;-1:-1:-1;;;102:12964:7;;;;;;;;;;;;-1:-1:-1;;;102:12964:7;;;;;;;;;;-1:-1:-1;;;102:12964:7;;;;;;;;;;;;-1:-1:-1;;;102:12964:7;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1585400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ACC_PRECISION()": "307",
								"MONTH_DURATION()": "219",
								"PERCENTS_DIVIDER()": "148",
								"ROI_CAP_DIVIDER()": "395",
								"ROI_CAP_MULTIPLIER()": "329",
								"RetopPoolByEarning(uint256,uint256)": "infinite",
								"TIME_STEP()": "285",
								"WEEK_DURATION()": "439",
								"WeeklyCapping()": "791",
								"WeeklyTotalReward()": "2366",
								"canBuyNextPool(uint256)": "9353",
								"communityAccPerUser()": "2586",
								"creatorWallet()": "2632",
								"currentMonthlyRound()": "2784",
								"currentMonthlyStartTime()": "2850",
								"currentWeeklyRound()": "2806",
								"currentWeeklyStartTime()": "2957",
								"defaultRefId()": "2916",
								"glbBoosterPackages(uint256)": "6656",
								"minLevelForGlbBooster(uint256)": "2866",
								"minLevelForPool(uint256)": "2316",
								"minPoolForGlbBooster(uint256)": "2690",
								"monthlyCapping()": "659",
								"packages(uint256)": "7011",
								"poolPackages(uint256)": "7030",
								"registeredUserIds(uint256)": "6725",
								"systemMaintance()": "2896",
								"teamDevelopment()": "2962",
								"totalUsers()": "2718",
								"upgradeBooster(uint256)": "infinite",
								"upgradePool(uint256)": "infinite",
								"upgradePoolByEarning(uint32,uint256)": "infinite",
								"usdt()": "2368"
							},
							"internal": {
								"_distributePoolIncome(uint256,uint256,uint256,uint256)": "infinite",
								"_payPoolIncome(uint256,uint256,uint256,uint256,uint256)": "infinite",
								"_placeInBooster(uint256,uint256,uint256)": "infinite",
								"_placeInPool(uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH",
									"source": 7,
									"value": "1E0"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1324,
									"end": 1333,
									"name": "PUSH",
									"source": 8,
									"value": "D02AB486CEDC0000"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1356,
									"end": 1365,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C40000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1388,
									"end": 1397,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B1880000"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1420,
									"end": 1430,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D63100000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1453,
									"end": 1463,
									"name": "PUSH",
									"source": 8,
									"value": "AD78EBC5AC6200000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1486,
									"end": 1496,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C400000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1519,
									"end": 1529,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B18800000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1552,
									"end": 1563,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D631000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1586,
									"end": 1597,
									"name": "PUSH",
									"source": 8,
									"value": "AD78EBC5AC62000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1620,
									"end": 1631,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C4000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1654,
									"end": 1666,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B188000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "140"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1689,
									"end": 1701,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D6310000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1724,
									"end": 1736,
									"name": "PUSH",
									"source": 8,
									"value": "AD78EBC5AC620000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "180"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1759,
									"end": 1772,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C40000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "1A0"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1795,
									"end": 1808,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B1880000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "1C0"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "F"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "F"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "tag",
									"source": -1,
									"value": "9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "F"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 102,
									"end": 13066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5058,
									"end": 5063,
									"name": "PUSH",
									"source": 8,
									"value": "410D586A20A4C0000"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5065,
									"end": 5071,
									"name": "PUSH",
									"source": 8,
									"value": "1043561A8829300000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5073,
									"end": 5080,
									"name": "PUSH",
									"source": 8,
									"value": "410D586A20A4C00000"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5082,
									"end": 5089,
									"name": "PUSH",
									"source": 8,
									"value": "1043561A88293000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5091,
									"end": 5099,
									"name": "PUSH",
									"source": 8,
									"value": "410D586A20A4C000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5101,
									"end": 5109,
									"name": "PUSH",
									"source": 8,
									"value": "1043561A882930000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5111,
									"end": 5120,
									"name": "PUSH",
									"source": 8,
									"value": "410D586A20A4C0000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "PUSH",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "PUSH",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "PUSH",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "tag",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 102,
									"end": 13066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1420,
									"end": 1430,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D63100000"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1453,
									"end": 1463,
									"name": "PUSH",
									"source": 8,
									"value": "AD78EBC5AC6200000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1486,
									"end": 1496,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C400000"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1519,
									"end": 1529,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B18800000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1552,
									"end": 1563,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D631000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1586,
									"end": 1597,
									"name": "PUSH",
									"source": 8,
									"value": "AD78EBC5AC62000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1620,
									"end": 1631,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C4000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1654,
									"end": 1666,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B188000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "PUSH",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "PUSH",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "PUSH",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 102,
									"end": 13066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5274,
									"end": 5275,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5283,
									"end": 5284,
									"name": "PUSH",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5290,
									"end": 5292,
									"name": "PUSH",
									"source": 8,
									"value": "D"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "F"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 102,
									"end": 13066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5344,
									"end": 5345,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5350,
									"end": 5351,
									"name": "PUSH",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5283,
									"end": 5284,
									"name": "PUSH",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5362,
									"end": 5364,
									"name": "PUSH",
									"source": 8,
									"value": "A"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 102,
									"end": 13066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 7098,
									"end": 7099,
									"name": "PUSH",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 7144,
									"end": 7145,
									"name": "PUSH",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7189,
									"end": 7190,
									"name": "PUSH",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7235,
									"end": 7236,
									"name": "PUSH",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7275,
									"end": 7276,
									"name": "PUSH",
									"source": 8,
									"value": "3A"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "RETURN",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "PUSH",
									"source": 8,
									"value": "1C"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "PUSH",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "50"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "PUSH",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH",
									"source": 7,
									"value": "CE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4EC"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH",
									"source": 7,
									"value": "CE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4F4"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 102,
									"end": 13066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "tag",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "50"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "PUSH",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH",
									"source": 7,
									"value": "66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A090"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH",
									"source": 7,
									"value": "66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A097"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 102,
									"end": 13066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "50"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH",
									"source": 7,
									"value": "175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH",
									"source": 7,
									"value": "175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DC8"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 102,
									"end": 13066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "tag",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "tag",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 102,
									"end": 13066,
									"name": "JUMP",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122042e0053f21b04a4e35a7a6be6ef44bde4d88c4349eb2336c7980bfeb09fd2f0b64736f6c634300081e0033",
									".code": [
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "1C234A8"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "2132D204"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "2350268F"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "2A891534"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "2F48AB7D"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "3080B5BC"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "32BC298C"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "32FCD966"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "375B43B4"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "39AB3603"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4060160A"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "58C7D352"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "67D52D4D"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "76F5F700"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "7848F0A3"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "78F6AD6D"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "7CDC65F2"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "8E222E24"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "956A3228"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "AE4708DC"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "BC1FA7C0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "BFF1F9E1"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "C216212A"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "C8DF2908"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "C9ED0708"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "CA8E9121"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "D0A2FD79"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "E898FC38"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "E9E34A16"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "EBE0FF15"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "EC597E6F"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "F5D74D93"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "FDDC806F"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7152,
											"end": 7190,
											"name": "PUSH",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 534,
											"end": 558,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6996,
											"end": 7003,
											"name": "PUSH",
											"source": 8,
											"value": "3635C9ADC5DEA00000"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 460,
											"end": 490,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7197,
											"end": 7236,
											"name": "PUSH",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 5304,
											"end": 5368,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5304,
											"end": 5368,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5304,
											"end": 5368,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5304,
											"end": 5368,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 5304,
											"end": 5368,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5304,
											"end": 5368,
											"name": "PUSH",
											"source": 8,
											"value": "1C"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7065,
											"end": 7099,
											"name": "PUSH",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7110,
											"end": 7145,
											"name": "PUSH",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7048,
											"end": 7056,
											"name": "PUSH",
											"source": 8,
											"value": "21E19E0C9BAB2400000"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1288,
											"end": 1828,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1288,
											"end": 1828,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1288,
											"end": 1828,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1288,
											"end": 1828,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1288,
											"end": 1828,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 1288,
											"end": 1828,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1288,
											"end": 1828,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1288,
											"end": 1828,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9259,
											"end": 9264,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9284,
											"end": 9339,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9308,
											"end": 9318,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 9292,
											"end": 9318,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 9284,
											"end": 9339,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9284,
											"end": 9339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9284,
											"end": 9339,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 9284,
											"end": 9339,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9259,
											"end": 9264,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 9358,
											"end": 9375,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9358,
											"end": 9375,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9358,
											"end": 9379,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9378,
											"end": 9379,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 9358,
											"end": 9379,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9358,
											"end": 9379,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9350,
											"end": 9396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 9350,
											"end": 9396,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9350,
											"end": 9396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 9350,
											"end": 9396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9350,
											"end": 9396,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 9350,
											"end": 9396,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9567,
											"end": 9588,
											"name": "PUSH",
											"source": 7,
											"value": "1C"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9666,
											"end": 9686,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9810,
											"end": 9820,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9810,
											"end": 9820,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 9810,
											"end": 9820,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9810,
											"end": 9820,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9810,
											"end": 9837,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9810,
											"end": 9837,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9810,
											"end": 9871,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9810,
											"end": 9871,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9810,
											"end": 9871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 9810,
											"end": 9871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9977,
											"end": 9989,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9973,
											"end": 10083,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 9973,
											"end": 10083,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10102,
											"end": 10116,
											"name": "PUSH",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10093,
											"end": 10162,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10101,
											"end": 10135,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10093,
											"end": 10162,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 10093,
											"end": 10162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10093,
											"end": 10162,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 10093,
											"end": 10162,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10195,
											"end": 10223,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 10195,
											"end": 10223,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10195,
											"end": 10223,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 10195,
											"end": 10223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10195,
											"end": 10223,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 10195,
											"end": 10223,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10291,
											"end": 10349,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10291,
											"end": 10349,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9308,
											"end": 9318,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10291,
											"end": 10349,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10291,
											"end": 10349,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10329,
											"end": 10333,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10291,
											"end": 10349,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 10291,
											"end": 10349,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 10291,
											"end": 10349,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10291,
											"end": 10349,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10291,
											"end": 10349,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 10291,
											"end": 10349,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10291,
											"end": 10349,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 10291,
											"end": 10349,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10591,
											"end": 10759,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10102,
											"end": 10116,
											"name": "PUSH",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 10454,
											"end": 10473,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 10454,
											"end": 10473,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10454,
											"end": 10473,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10454,
											"end": 10489,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10454,
											"end": 10489,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 10454,
											"end": 10489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10454,
											"end": 10489,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 10454,
											"end": 10489,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 10535,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 10535,
											"end": 10547,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10535,
											"end": 10547,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 10535,
											"end": 10547,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 10535,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 10535,
											"end": 10547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10535,
											"end": 10547,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 10535,
											"end": 10547,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 102,
											"end": 13066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10610,
											"end": 10758,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10610,
											"end": 10758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10702,
											"end": 10717,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10610,
											"end": 10758,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10610,
											"end": 10758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10744,
											"end": 10746,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 10610,
											"end": 10758,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 10610,
											"end": 10758,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10610,
											"end": 10758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10591,
											"end": 10604,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10591,
											"end": 10759,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 10591,
											"end": 10759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10591,
											"end": 10759,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 10591,
											"end": 10759,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2137B7B9BA32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10610,
											"end": 10758,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "92FB4C3DF386BC0D49F8847C66CDA554C07C2DF42E065E03D639278ECF8D94A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 9308,
											"end": 9318,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 10777,
											"end": 10830,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10777,
											"end": 10830,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9666,
											"end": 9686,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 10291,
											"end": 10349,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 10291,
											"end": 10349,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10291,
											"end": 10349,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 10291,
											"end": 10349,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10291,
											"end": 10349,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10291,
											"end": 10349,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 10291,
											"end": 10349,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 10291,
											"end": 10349,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10291,
											"end": 10349,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 10291,
											"end": 10349,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10291,
											"end": 10349,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 10291,
											"end": 10349,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10291,
											"end": 10349,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10291,
											"end": 10349,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 10291,
											"end": 10349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10291,
											"end": 10349,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 10291,
											"end": 10349,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10291,
											"end": 10349,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10291,
											"end": 10349,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10291,
											"end": 10349,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10291,
											"end": 10349,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 10291,
											"end": 10349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10291,
											"end": 10349,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 10291,
											"end": 10349,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10291,
											"end": 10349,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 10291,
											"end": 10349,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10291,
											"end": 10349,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 10291,
											"end": 10349,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10291,
											"end": 10349,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10291,
											"end": 10349,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 10291,
											"end": 10349,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 10291,
											"end": 10349,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10291,
											"end": 10349,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 10291,
											"end": 10349,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9973,
											"end": 10083,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 9973,
											"end": 10083,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9973,
											"end": 10083,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 9973,
											"end": 10083,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 9666,
											"end": 9686,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "155C19DC9859194814DB1BDD08185B9908141BDBDB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9810,
											"end": 9871,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 9810,
											"end": 9871,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9841,
											"end": 9855,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9841,
											"end": 9855,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9841,
											"end": 9855,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 9841,
											"end": 9855,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9841,
											"end": 9855,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9841,
											"end": 9871,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9841,
											"end": 9871,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9810,
											"end": 9871,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9810,
											"end": 9871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 9810,
											"end": 9871,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5028,
											"end": 5121,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5028,
											"end": 5121,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5028,
											"end": 5121,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5028,
											"end": 5121,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5028,
											"end": 5121,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 5028,
											"end": 5121,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5028,
											"end": 5121,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5028,
											"end": 5121,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5028,
											"end": 5121,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 5028,
											"end": 5121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5028,
											"end": 5121,
											"name": "tag",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 5028,
											"end": 5121,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 5375,
											"end": 5436,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5375,
											"end": 5436,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5375,
											"end": 5436,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5375,
											"end": 5436,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 5375,
											"end": 5436,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5375,
											"end": 5436,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2220,
											"end": 2225,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2245,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2269,
											"end": 2279,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2253,
											"end": 2279,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2245,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2245,
											"end": 2300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2245,
											"end": 2300,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 2245,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2319,
											"end": 2333,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 2319,
											"end": 2333,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2319,
											"end": 2333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2311,
											"end": 2353,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 2336,
											"end": 2337,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2319,
											"end": 2337,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2311,
											"end": 2353,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 2311,
											"end": 2353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2311,
											"end": 2353,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 2311,
											"end": 2353,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2468,
											"end": 2480,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2454,
											"end": 2487,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2454,
											"end": 2487,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2532,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 2532,
											"end": 2557,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2532,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2532,
											"end": 2557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2532,
											"end": 2557,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 2532,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2804,
											"end": 2817,
											"name": "PUSH",
											"source": 7,
											"value": "2C"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2854,
											"end": 2885,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2854,
											"end": 2885,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2854,
											"end": 2885,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2938,
											"end": 2949,
											"name": "PUSH",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3040,
											"end": 3071,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3040,
											"end": 3071,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 3040,
											"end": 3071,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3040,
											"end": 3071,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 3040,
											"end": 3071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3040,
											"end": 3071,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 3040,
											"end": 3071,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 3362,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3149,
											"end": 3165,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 3149,
											"end": 3165,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3149,
											"end": 3165,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3149,
											"end": 3181,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3149,
											"end": 3181,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 3149,
											"end": 3181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3149,
											"end": 3181,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 3149,
											"end": 3181,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2938,
											"end": 2949,
											"name": "PUSH",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3275,
											"end": 3322,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 3275,
											"end": 3322,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3275,
											"end": 3322,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 3275,
											"end": 3322,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 3275,
											"end": 3322,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 3275,
											"end": 3322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3362,
											"end": 3554,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 3362,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "506F6F6C205570677261646520284561726E696E6729"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3381,
											"end": 3553,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "92FB4C3DF386BC0D49F8847C66CDA554C07C2DF42E065E03D639278ECF8D94A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 2269,
											"end": 2279,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3572,
											"end": 3642,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3572,
											"end": 3642,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "1B"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "416C726561647920707572636861736564206E65787420706F6F6C0000000000"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "1C"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F7420656E6F756768206E65787420706F6F6C2062616C616E636500000000"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BC81A1A59DA195C881C1BDBDB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 422,
											"end": 450,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1131,
											"end": 1165,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 987,
											"end": 992,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1012,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1046,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1046,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1012,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1012,
											"end": 1067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1012,
											"end": 1067,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 1012,
											"end": 1067,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 1103,
											"end": 1104,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1086,
											"end": 1100,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 1086,
											"end": 1100,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1100,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1104,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 1078,
											"end": 1120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1120,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 1078,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 1265,
											"end": 1286,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1265,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1286,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 1265,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1331,
											"end": 1344,
											"name": "PUSH",
											"source": 7,
											"value": "2C"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1381,
											"end": 1395,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1381,
											"end": 1411,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1381,
											"end": 1411,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1381,
											"end": 1411,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1381,
											"end": 1411,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1711,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 1482,
											"end": 1512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1552,
											"end": 1568,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 1552,
											"end": 1568,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1552,
											"end": 1568,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1552,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1552,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 1552,
											"end": 1584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1552,
											"end": 1584,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 1552,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1669,
											"end": 1681,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 1669,
											"end": 1681,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1669,
											"end": 1681,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1669,
											"end": 1681,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1669,
											"end": 1681,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 1669,
											"end": 1681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1669,
											"end": 1681,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 1669,
											"end": 1681,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 102,
											"end": 13066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1730,
											"end": 1902,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1730,
											"end": 1902,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1837,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1730,
											"end": 1902,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1730,
											"end": 1902,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1865,
											"end": 1867,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1730,
											"end": 1902,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1730,
											"end": 1902,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1730,
											"end": 1902,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1711,
											"end": 1724,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1711,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 1711,
											"end": 1903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1711,
											"end": 1903,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 1711,
											"end": 1903,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "506F6F6C205265546F70757020284561726E696E6729"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1730,
											"end": 1902,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "92FB4C3DF386BC0D49F8847C66CDA554C07C2DF42E065E03D639278ECF8D94A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1036,
											"end": 1046,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1921,
											"end": 1984,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1921,
											"end": 1984,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "1A"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F7420656E6F756768207265546F7075702062616C616E6365000000000000"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6894,
											"end": 6900,
											"name": "PUSH",
											"source": 8,
											"value": "93A80"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 102,
											"end": 13066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 848,
											"end": 850,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3739,
											"end": 3744,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3788,
											"end": 3798,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3772,
											"end": 3798,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3764,
											"end": 3819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3819,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 3764,
											"end": 3819,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3838,
											"end": 3852,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 3838,
											"end": 3852,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3838,
											"end": 3852,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3838,
											"end": 3856,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3855,
											"end": 3856,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3838,
											"end": 3856,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3838,
											"end": 3856,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3830,
											"end": 3873,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 3830,
											"end": 3873,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3830,
											"end": 3873,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 3830,
											"end": 3873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3830,
											"end": 3873,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 3830,
											"end": 3873,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4036,
											"end": 4051,
											"name": "PUSH",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4177,
											"end": 4187,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 4177,
											"end": 4187,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4177,
											"end": 4187,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4177,
											"end": 4204,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4325,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4325,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4325,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4325,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4325,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4309,
											"end": 4416,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 4309,
											"end": 4416,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4435,
											"end": 4446,
											"name": "PUSH",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4426,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4434,
											"end": 4465,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4426,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 4426,
											"end": 4492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4426,
											"end": 4492,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 4426,
											"end": 4492,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4537,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 4537,
											"end": 4559,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4537,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4537,
											"end": 4559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4537,
											"end": 4559,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 4537,
											"end": 4559,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4627,
											"end": 4685,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4627,
											"end": 4685,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3788,
											"end": 3798,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4627,
											"end": 4685,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4627,
											"end": 4685,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4665,
											"end": 4669,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4627,
											"end": 4685,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 4627,
											"end": 4685,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 4627,
											"end": 4685,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4627,
											"end": 4685,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4627,
											"end": 4685,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 4627,
											"end": 4685,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4627,
											"end": 4685,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 4627,
											"end": 4685,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4706,
											"end": 4940,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4706,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 4706,
											"end": 4940,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5160,
											"end": 5328,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4435,
											"end": 4446,
											"name": "PUSH",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5028,
											"end": 5044,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 5028,
											"end": 5044,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5028,
											"end": 5044,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5028,
											"end": 5060,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5028,
											"end": 5060,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 5028,
											"end": 5060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5160,
											"end": 5328,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 5160,
											"end": 5328,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "141BDBDB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5179,
											"end": 5327,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "92FB4C3DF386BC0D49F8847C66CDA554C07C2DF42E065E03D639278ECF8D94A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 3788,
											"end": 3798,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5346,
											"end": 5396,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5346,
											"end": 5396,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 4706,
											"end": 4940,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 4706,
											"end": 4940,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4756,
											"end": 4770,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4756,
											"end": 4770,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3739,
											"end": 3744,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4788,
											"end": 4822,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4788,
											"end": 4822,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4825,
											"end": 4831,
											"name": "PUSH",
											"source": 7,
											"value": "2A300"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4835,
											"end": 4850,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4788,
											"end": 4850,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4785,
											"end": 4929,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 4785,
											"end": 4929,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4706,
											"end": 4940,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 4706,
											"end": 4940,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4706,
											"end": 4940,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4706,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 4706,
											"end": 4940,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4785,
											"end": 4929,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 4785,
											"end": 4929,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3739,
											"end": 3744,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4871,
											"end": 4908,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4871,
											"end": 4908,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4785,
											"end": 4929,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4785,
											"end": 4929,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 4785,
											"end": 4929,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4627,
											"end": 4685,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 4627,
											"end": 4685,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4627,
											"end": 4685,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 4627,
											"end": 4685,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4627,
											"end": 4685,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4627,
											"end": 4685,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4627,
											"end": 4685,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 4627,
											"end": 4685,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4627,
											"end": 4685,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 4627,
											"end": 4685,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4627,
											"end": 4685,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4627,
											"end": 4685,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 4627,
											"end": 4685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4627,
											"end": 4685,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 4627,
											"end": 4685,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4627,
											"end": 4685,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 4627,
											"end": 4685,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4309,
											"end": 4416,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 4309,
											"end": 4416,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4309,
											"end": 4416,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 4309,
											"end": 4416,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "5570677261646520796F7572206C6576656C2066697273740000000000000000"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 864,
											"end": 895,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 864,
											"end": 895,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 864,
											"end": 895,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 864,
											"end": 895,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 864,
											"end": 895,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 864,
											"end": 895,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 864,
											"end": 895,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 864,
											"end": 895,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "A66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 789,
											"end": 791,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1120,
											"end": 1124,
											"name": "PUSH",
											"source": 8,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 731,
											"end": 737,
											"name": "PUSH",
											"source": 8,
											"value": "15180"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7243,
											"end": 7276,
											"name": "PUSH",
											"source": 8,
											"value": "3A"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6945,
											"end": 6952,
											"name": "PUSH",
											"source": 8,
											"value": "278D00"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5128,
											"end": 5233,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5128,
											"end": 5233,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5128,
											"end": 5233,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5128,
											"end": 5233,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5128,
											"end": 5233,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 5128,
											"end": 5233,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5128,
											"end": 5233,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5128,
											"end": 5233,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5128,
											"end": 5233,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5128,
											"end": 5233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 5240,
											"end": 5297,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5240,
											"end": 5297,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5240,
											"end": 5297,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5240,
											"end": 5297,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 5240,
											"end": 5297,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5240,
											"end": 5297,
											"name": "PUSH",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 683,
											"end": 688,
											"name": "PUSH",
											"source": 8,
											"value": "2710"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5128,
											"end": 5233,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5128,
											"end": 5233,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4537,
											"end": 4549,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4537,
											"end": 4549,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BDD081E5BDD5C881858D8DBDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "105D081B585E081B195D995B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "141BDBDB08185B1C9958591E481C1D5C98DA185CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 193,
											"end": 876,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 193,
											"end": 876,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 319,
											"end": 324,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 359,
											"end": 373,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 359,
											"end": 373,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 359,
											"end": 373,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 400,
											"end": 412,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 388,
											"end": 419,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 388,
											"end": 419,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 388,
											"end": 419,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 384,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 384,
											"end": 501,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 576,
											"end": 586,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 534,
											"end": 549,
											"name": "PUSH",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 576,
											"end": 586,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 576,
											"end": 586,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 576,
											"end": 602,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 572,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 572,
											"end": 687,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 703,
											"end": 715,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 703,
											"end": 715,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 703,
											"end": 744,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 703,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 703,
											"end": 744,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 193,
											"end": 876,
											"name": "tag",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 193,
											"end": 876,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 699,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 699,
											"end": 814,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 834,
											"end": 838,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 102,
											"end": 13066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "456C696769626C6520746F20627579206E65787420706F6F6C00000000000000"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 193,
											"end": 876,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 193,
											"end": 876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 699,
											"end": 814,
											"name": "tag",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 699,
											"end": 814,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 102,
											"end": 13066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4275792070726576696F757320706F6F6C206669727374000000000000000000"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 761,
											"end": 802,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 761,
											"end": 802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 703,
											"end": 744,
											"name": "tag",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 703,
											"end": 744,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 703,
											"end": 744,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 703,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 703,
											"end": 744,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 572,
											"end": 687,
											"name": "tag",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 572,
											"end": 687,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 619,
											"end": 675,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 102,
											"end": 13066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "596F75206E65656420746F207265616368206120686967686572206C6576656C"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8199A5C9CDD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 619,
											"end": 675,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 619,
											"end": 675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 384,
											"end": 501,
											"name": "tag",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 384,
											"end": 501,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 436,
											"end": 489,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 436,
											"end": 489,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 436,
											"end": 489,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 436,
											"end": 489,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 102,
											"end": 13066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "596F752061726520616C72656164792061742074686520686967686573742070"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDBDB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 436,
											"end": 489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 436,
											"end": 489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "105D081B585E081C1BDBDB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "AA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A59"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B98DBDC9C9958DD08185B5BDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 13066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5418,
											"end": 6526,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 5418,
											"end": 6526,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5418,
											"end": 6526,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5418,
											"end": 6526,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5511,
											"end": 5559,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 5528,
											"end": 5540,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5519,
											"end": 5547,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5519,
											"end": 5547,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5511,
											"end": 5559,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 5511,
											"end": 5559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5511,
											"end": 5559,
											"name": "tag",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 5511,
											"end": 5559,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5570,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 5591,
											"end": 5611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 5591,
											"end": 5611,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5591,
											"end": 5611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5591,
											"end": 5611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5591,
											"end": 5611,
											"name": "tag",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 5591,
											"end": 5611,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5587,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5611,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5570,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 5570,
											"end": 5632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5570,
											"end": 5632,
											"name": "tag",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 5570,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5723,
											"end": 5732,
											"name": "PUSH",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5838,
											"end": 5864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5838,
											"end": 5850,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5838,
											"end": 5864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 5838,
											"end": 5864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5838,
											"end": 5864,
											"name": "tag",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 5838,
											"end": 5864,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5723,
											"end": 5732,
											"name": "PUSH",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5875,
											"end": 5908,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5875,
											"end": 5908,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 5875,
											"end": 5908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5875,
											"end": 5908,
											"name": "tag",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 5875,
											"end": 5908,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6013,
											"end": 6043,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 6395,
											"end": 6441,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5723,
											"end": 5732,
											"name": "PUSH",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6013,
											"end": 6043,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 6013,
											"end": 6043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6013,
											"end": 6043,
											"name": "tag",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 6013,
											"end": 6043,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 102,
											"end": 13066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6115,
											"end": 6311,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6115,
											"end": 6311,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6115,
											"end": 6311,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6115,
											"end": 6311,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6115,
											"end": 6311,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6115,
											"end": 6311,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6115,
											"end": 6311,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6115,
											"end": 6311,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6115,
											"end": 6311,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6115,
											"end": 6311,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 6115,
											"end": 6311,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6115,
											"end": 6311,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP16",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6082,
											"end": 6093,
											"name": "PUSH",
											"source": 7,
											"value": "2D"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6335,
											"end": 6348,
											"name": "PUSH",
											"source": 7,
											"value": "2F"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6335,
											"end": 6384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6335,
											"end": 6384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 6335,
											"end": 6384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6335,
											"end": 6384,
											"name": "tag",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 6335,
											"end": 6384,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6395,
											"end": 6407,
											"name": "PUSH",
											"source": 7,
											"value": "2E"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6395,
											"end": 6441,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 6395,
											"end": 6441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6395,
											"end": 6441,
											"name": "tag",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 6395,
											"end": 6441,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6750,
											"end": 6775,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6792,
											"end": 6800,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6788,
											"end": 7969,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6802,
											"end": 6805,
											"name": "tag",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 6802,
											"end": 6805,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 6802,
											"end": 6805,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6802,
											"end": 6805,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6802,
											"end": 6805,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 6802,
											"end": 6805,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 7969,
											"name": "tag",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 6788,
											"end": 7969,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8081,
											"end": 8107,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8081,
											"end": 8107,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8081,
											"end": 8107,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8081,
											"end": 8107,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8081,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 8081,
											"end": 8107,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8081,
											"end": 8107,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8081,
											"end": 8107,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8081,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 8081,
											"end": 8107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8081,
											"end": 8107,
											"name": "tag",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 8081,
											"end": 8107,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8122,
											"end": 8136,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8118,
											"end": 8191,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 8118,
											"end": 8191,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5418,
											"end": 6526,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5418,
											"end": 6526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8118,
											"end": 8191,
											"name": "tag",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 8118,
											"end": 8191,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8168,
											"end": 8178,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 8168,
											"end": 8178,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8168,
											"end": 8178,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 8168,
											"end": 8178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8168,
											"end": 8178,
											"name": "tag",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 8168,
											"end": 8178,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5418,
											"end": 6526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6807,
											"end": 6810,
											"name": "tag",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 6807,
											"end": 6810,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6843,
											"end": 6861,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6843,
											"end": 6861,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6843,
											"end": 6894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6843,
											"end": 6894,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6843,
											"end": 6894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 6843,
											"end": 6894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6807,
											"end": 6810,
											"name": "tag",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 6807,
											"end": 6810,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6839,
											"end": 7174,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 6839,
											"end": 7174,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6082,
											"end": 6093,
											"name": "PUSH",
											"source": 7,
											"value": "2D"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7285,
											"end": 7297,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 7285,
											"end": 7297,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5980,
											"end": 5981,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7285,
											"end": 7297,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 7285,
											"end": 7297,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7333,
											"end": 7349,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7333,
											"end": 7349,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 7333,
											"end": 7349,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7352,
											"end": 7354,
											"name": "PUSH",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 7333,
											"end": 7354,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7333,
											"end": 7354,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7329,
											"end": 7826,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 7329,
											"end": 7826,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6807,
											"end": 6810,
											"name": "tag",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 6807,
											"end": 6810,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7849,
											"end": 7883,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7849,
											"end": 7883,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7849,
											"end": 7883,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7849,
											"end": 7883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 7849,
											"end": 7883,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5980,
											"end": 5981,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7849,
											"end": 7883,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7849,
											"end": 7883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 7849,
											"end": 7883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7849,
											"end": 7883,
											"name": "tag",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 7849,
											"end": 7883,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7943,
											"end": 7957,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 7943,
											"end": 7957,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6807,
											"end": 6810,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6792,
											"end": 6800,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6792,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 6792,
											"end": 6800,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7329,
											"end": 7826,
											"name": "tag",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 7329,
											"end": 7826,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5980,
											"end": 5981,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7441,
											"end": 7443,
											"name": "PUSH",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 7421,
											"end": 7443,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7421,
											"end": 7443,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7441,
											"end": 7443,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 7441,
											"end": 7443,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8365,
											"end": 8376,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8472,
											"end": 8486,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8399,
											"end": 8424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8399,
											"end": 8424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 8399,
											"end": 8424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8399,
											"end": 8424,
											"name": "tag",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 8399,
											"end": 8424,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 8472,
											"end": 8486,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8472,
											"end": 8496,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8472,
											"end": 8496,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 8472,
											"end": 8496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8472,
											"end": 8496,
											"name": "tag",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 8472,
											"end": 8496,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8625,
											"end": 8638,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8625,
											"end": 8882,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 102,
											"end": 13066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8656,
											"end": 8881,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8656,
											"end": 8881,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8656,
											"end": 8881,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5980,
											"end": 5981,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8656,
											"end": 8881,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8656,
											"end": 8881,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8792,
											"end": 8807,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 6115,
											"end": 6311,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 8656,
											"end": 8881,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8656,
											"end": 8881,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7529,
											"end": 7531,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 6115,
											"end": 6311,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 8656,
											"end": 8881,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8656,
											"end": 8881,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8625,
											"end": 8882,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8625,
											"end": 8882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8625,
											"end": 8882,
											"name": "tag",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 8625,
											"end": 8882,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8908,
											"end": 8913,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8970,
											"end": 8972,
											"name": "PUSH",
											"source": 7,
											"value": "5F"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7333,
											"end": 7349,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8975,
											"end": 8978,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7417,
											"end": 7809,
											"name": "tag",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 7417,
											"end": 7809,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5838,
											"end": 5850,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5838,
											"end": 5850,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7849,
											"end": 7883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9043,
											"end": 9059,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 8975,
											"end": 8978,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5980,
											"end": 5981,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 9043,
											"end": 9059,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 9043,
											"end": 9059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9043,
											"end": 9059,
											"name": "tag",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 9043,
											"end": 9059,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8908,
											"end": 8913,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9078,
											"end": 9157,
											"name": "PUSH",
											"source": 7,
											"value": "E17B61D324CE17328F433D0AB62581C0F0AA997312BAE80FBDFCD2AA9B91D6E3"
										},
										{
											"begin": 6115,
											"end": 6311,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7529,
											"end": 7531,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9078,
											"end": 9157,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 7417,
											"end": 7809,
											"name": "tag",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 7417,
											"end": 7809,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7329,
											"end": 7826,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7329,
											"end": 7826,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7329,
											"end": 7826,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7329,
											"end": 7826,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7329,
											"end": 7826,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 7329,
											"end": 7826,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "tag",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 8989,
											"end": 9017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "tag",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7417,
											"end": 7809,
											"name": "tag",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 7417,
											"end": 7809,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5980,
											"end": 5981,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5980,
											"end": 5981,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7849,
											"end": 7883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 7849,
											"end": 7883,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7562,
											"end": 7584,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7582,
											"end": 7584,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 7582,
											"end": 7584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 7582,
											"end": 7584,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7609,
											"end": 7622,
											"name": "PUSH",
											"source": 7,
											"value": "2C"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7609,
											"end": 7675,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7609,
											"end": 7675,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 7609,
											"end": 7675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7609,
											"end": 7675,
											"name": "tag",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 7609,
											"end": 7675,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 7417,
											"end": 7809,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 7417,
											"end": 7809,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7558,
											"end": 7809,
											"name": "tag",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 7558,
											"end": 7809,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7724,
											"end": 7737,
											"name": "PUSH",
											"source": 7,
											"value": "2C"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7724,
											"end": 7771,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7724,
											"end": 7789,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7724,
											"end": 7789,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 7724,
											"end": 7789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6839,
											"end": 7174,
											"name": "tag",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 6839,
											"end": 7174,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7003,
											"end": 7029,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7003,
											"end": 7029,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7003,
											"end": 7029,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7003,
											"end": 7029,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8081,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 7003,
											"end": 7029,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7003,
											"end": 7029,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7003,
											"end": 7029,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7003,
											"end": 7029,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 7003,
											"end": 7029,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7003,
											"end": 7029,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7003,
											"end": 7029,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 7003,
											"end": 7029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7003,
											"end": 7029,
											"name": "tag",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 7003,
											"end": 7029,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7052,
											"end": 7065,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7048,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 7048,
											"end": 7135,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6839,
											"end": 7174,
											"name": "tag",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 6839,
											"end": 7174,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7153,
											"end": 7158,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7153,
											"end": 7158,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7153,
											"end": 7158,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7153,
											"end": 7158,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7153,
											"end": 7158,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 7153,
											"end": 7158,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7048,
											"end": 7135,
											"name": "tag",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 7048,
											"end": 7135,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7105,
											"end": 7114,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 7105,
											"end": 7114,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7105,
											"end": 7114,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 7105,
											"end": 7114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7105,
											"end": 7114,
											"name": "tag",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 7105,
											"end": 7114,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7048,
											"end": 7135,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7048,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 7048,
											"end": 7135,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6843,
											"end": 6894,
											"name": "tag",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 6843,
											"end": 6894,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5838,
											"end": 5850,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6865,
											"end": 6894,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6865,
											"end": 6894,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6843,
											"end": 6894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 6843,
											"end": 6894,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10852,
											"end": 13052,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 10852,
											"end": 13052,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10948,
											"end": 11002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 10965,
											"end": 10983,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10956,
											"end": 10990,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10956,
											"end": 10990,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 10948,
											"end": 11002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 10948,
											"end": 11002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10948,
											"end": 11002,
											"name": "tag",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 10948,
											"end": 11002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11013,
											"end": 11081,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 11034,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 11034,
											"end": 11060,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11034,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 11034,
											"end": 11060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11013,
											"end": 11081,
											"name": "tag",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 11013,
											"end": 11081,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11175,
											"end": 11187,
											"name": "PUSH",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11345,
											"end": 11382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 11345,
											"end": 11382,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11345,
											"end": 11382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 11345,
											"end": 11382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11345,
											"end": 11382,
											"name": "tag",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 11345,
											"end": 11382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 11487,
											"end": 11520,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11175,
											"end": 11187,
											"name": "PUSH",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 11487,
											"end": 11520,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 11487,
											"end": 11520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11487,
											"end": 11520,
											"name": "tag",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 11487,
											"end": 11520,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 102,
											"end": 13066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11595,
											"end": 11817,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11595,
											"end": 11817,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11595,
											"end": 11817,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11595,
											"end": 11817,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11595,
											"end": 11817,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11595,
											"end": 11817,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 11595,
											"end": 11817,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 11595,
											"end": 11817,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 11595,
											"end": 11817,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11786,
											"end": 11801,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 11595,
											"end": 11817,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 11595,
											"end": 11817,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 11595,
											"end": 11817,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11558,
											"end": 11572,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11828,
											"end": 11847,
											"name": "PUSH",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11828,
											"end": 11882,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 11828,
											"end": 11882,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 11828,
											"end": 11882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11828,
											"end": 11882,
											"name": "tag",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 11828,
											"end": 11882,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11454,
											"end": 11455,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 11907,
											"end": 11918,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11907,
											"end": 11918,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 11904,
											"end": 12488,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 11904,
											"end": 12488,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10852,
											"end": 13052,
											"name": "tag",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 10852,
											"end": 13052,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12506,
											"end": 12519,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12506,
											"end": 12519,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12506,
											"end": 12547,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12506,
											"end": 12547,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12506,
											"end": 12547,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 12506,
											"end": 12547,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10852,
											"end": 13052,
											"name": "tag",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 10852,
											"end": 13052,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12502,
											"end": 12625,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 12502,
											"end": 12625,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11558,
											"end": 11572,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 12712,
											"end": 12728,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 12712,
											"end": 12730,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 12708,
											"end": 12953,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11454,
											"end": 11455,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8365,
											"end": 8376,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8555,
											"end": 8572,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8399,
											"end": 8424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8399,
											"end": 8424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 8399,
											"end": 8424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8399,
											"end": 8424,
											"name": "tag",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 8399,
											"end": 8424,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 8555,
											"end": 8572,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8555,
											"end": 8582,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "477"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8555,
											"end": 8582,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 8555,
											"end": 8582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8555,
											"end": 8582,
											"name": "tag",
											"source": 7,
											"value": "477"
										},
										{
											"begin": 8555,
											"end": 8582,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8625,
											"end": 8638,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8625,
											"end": 8882,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "478"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 102,
											"end": 13066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8656,
											"end": 8881,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8656,
											"end": 8881,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8656,
											"end": 8881,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11454,
											"end": 11455,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8656,
											"end": 8881,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8656,
											"end": 8881,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11786,
											"end": 11801,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 11595,
											"end": 11817,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 8656,
											"end": 8881,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8656,
											"end": 8881,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12846,
											"end": 12848,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 11595,
											"end": 11817,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 8656,
											"end": 8881,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8656,
											"end": 8881,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8625,
											"end": 8882,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8625,
											"end": 8882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8625,
											"end": 8882,
											"name": "tag",
											"source": 7,
											"value": "478"
										},
										{
											"begin": 8625,
											"end": 8882,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8908,
											"end": 8913,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8970,
											"end": 8972,
											"name": "PUSH",
											"source": 7,
											"value": "5F"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8975,
											"end": 8978,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12708,
											"end": 12953,
											"name": "tag",
											"source": 7,
											"value": "486"
										},
										{
											"begin": 12708,
											"end": 12953,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9051,
											"end": 9052,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 9051,
											"end": 9052,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8975,
											"end": 8978,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 9043,
											"end": 9059,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 9043,
											"end": 9059,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 9043,
											"end": 9059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9043,
											"end": 9059,
											"name": "tag",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 9043,
											"end": 9059,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8908,
											"end": 8913,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9078,
											"end": 9157,
											"name": "PUSH",
											"source": 7,
											"value": "E17B61D324CE17328F433D0AB62581C0F0AA997312BAE80FBDFCD2AA9B91D6E3"
										},
										{
											"begin": 11595,
											"end": 11817,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9078,
											"end": 9157,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11454,
											"end": 11455,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12846,
											"end": 12848,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9078,
											"end": 9157,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 10852,
											"end": 13052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "tag",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "490"
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 8989,
											"end": 9017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "tag",
											"source": 7,
											"value": "490"
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "486"
										},
										{
											"begin": 8989,
											"end": 9017,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12708,
											"end": 12953,
											"name": "tag",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 12708,
											"end": 12953,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12907,
											"end": 12919,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12907,
											"end": 12919,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12907,
											"end": 12919,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12907,
											"end": 12919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 12907,
											"end": 12919,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12907,
											"end": 12919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 12907,
											"end": 12919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12506,
											"end": 12547,
											"name": "tag",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 12506,
											"end": 12547,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12535,
											"end": 12547,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 12523,
											"end": 12547,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12523,
											"end": 12547,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 12506,
											"end": 12547,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 12506,
											"end": 12547,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11904,
											"end": 12488,
											"name": "tag",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 11904,
											"end": 12488,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11958,
											"end": 11963,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "500"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 102,
											"end": 13066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "500"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "502"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 11595,
											"end": 11817,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "1E0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 11595,
											"end": 11817,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11958,
											"end": 11963,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "1A0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "1C0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12008,
											"end": 12026,
											"name": "PUSH",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11990,
											"end": 12007,
											"name": "PUSH",
											"source": 7,
											"value": "3E"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11990,
											"end": 12063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 11990,
											"end": 12063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 11990,
											"end": 12063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11990,
											"end": 12063,
											"name": "tag",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 11990,
											"end": 12063,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12008,
											"end": 12026,
											"name": "PUSH",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11990,
											"end": 12007,
											"name": "PUSH",
											"source": 7,
											"value": "3E"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 731,
											"end": 737,
											"name": "PUSH",
											"source": 8,
											"value": "15180"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 11786,
											"end": 11801,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11786,
											"end": 11801,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 12181,
											"end": 12236,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12178,
											"end": 12328,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "507"
										},
										{
											"begin": 12178,
											"end": 12328,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12346,
											"end": 12363,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12346,
											"end": 12363,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 12346,
											"end": 12363,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12342,
											"end": 12463,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "509"
										},
										{
											"begin": 12342,
											"end": 12463,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "510"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11904,
											"end": 12488,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11904,
											"end": 12488,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 11904,
											"end": 12488,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12342,
											"end": 12463,
											"name": "tag",
											"source": 7,
											"value": "509"
										},
										{
											"begin": 12342,
											"end": 12463,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 12008,
											"end": 12026,
											"name": "PUSH",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 12428,
											"end": 12446,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "511"
										},
										{
											"begin": 12428,
											"end": 12446,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12428,
											"end": 12446,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 12428,
											"end": 12446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12428,
											"end": 12446,
											"name": "tag",
											"source": 7,
											"value": "511"
										},
										{
											"begin": 12428,
											"end": 12446,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12342,
											"end": 12463,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12342,
											"end": 12463,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "510"
										},
										{
											"begin": 12342,
											"end": 12463,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12178,
											"end": 12328,
											"name": "tag",
											"source": 7,
											"value": "507"
										},
										{
											"begin": 12178,
											"end": 12328,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12293,
											"end": 12311,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "512"
										},
										{
											"begin": 12293,
											"end": 12311,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12293,
											"end": 12311,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 12293,
											"end": 12311,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 12293,
											"end": 12311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12293,
											"end": 12311,
											"name": "tag",
											"source": 7,
											"value": "512"
										},
										{
											"begin": 12293,
											"end": 12311,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12178,
											"end": 12328,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12178,
											"end": 12328,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 12178,
											"end": 12328,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "502"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11454,
											"end": 11455,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "513"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 102,
											"end": 13066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "513"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11595,
											"end": 11817,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11038,
											"end": 11251,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 11038,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11038,
											"end": 11251,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11125,
											"end": 11138,
											"name": "PUSH",
											"source": 8,
											"value": "3D"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 11125,
											"end": 11169,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 11125,
											"end": 11169,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11124,
											"end": 11169,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11120,
											"end": 11244,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "514"
										},
										{
											"begin": 11120,
											"end": 11244,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11038,
											"end": 11251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11038,
											"end": 11251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11038,
											"end": 11251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11120,
											"end": 11244,
											"name": "tag",
											"source": 8,
											"value": "514"
										},
										{
											"begin": 11120,
											"end": 11244,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11223,
											"end": 11231,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 11223,
											"end": 11231,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11223,
											"end": 11231,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 11223,
											"end": 11231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8483,
											"end": 9094,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 8483,
											"end": 9094,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8545,
											"end": 8558,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8545,
											"end": 8572,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8545,
											"end": 8572,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "522"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "524"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 5,
											"value": "524"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "528"
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 5,
											"value": "530"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "531"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8904,
											"end": 9090,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8839,
											"end": 8851,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8827,
											"end": 8838,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8859,
											"end": 8895,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "534"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8859,
											"end": 8895,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 8859,
											"end": 8895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8859,
											"end": 8895,
											"name": "tag",
											"source": 8,
											"value": "534"
										},
										{
											"begin": 8859,
											"end": 8895,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 8839,
											"end": 8851,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8904,
											"end": 8917,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 102,
											"end": 13066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8937,
											"end": 9089,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8937,
											"end": 9089,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8937,
											"end": 9089,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8937,
											"end": 9089,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9042,
											"end": 9057,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 8937,
											"end": 9089,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 8937,
											"end": 9089,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8937,
											"end": 9089,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8839,
											"end": 8851,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 8937,
											"end": 9089,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 8937,
											"end": 9089,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8937,
											"end": 9089,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8904,
											"end": 9090,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8904,
											"end": 9090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "tag",
											"source": 5,
											"value": "531"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "5274AFE7"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 5,
											"value": "528"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8691,
											"end": 8695,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "530"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "522"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "199959481859191C9CC81B9BDD081CD95D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11257,
											"end": 12759,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 11257,
											"end": 12759,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11257,
											"end": 12759,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11367,
											"end": 11385,
											"name": "PUSH",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11412,
											"end": 11442,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11412,
											"end": 11442,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11412,
											"end": 11442,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "536"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11480,
											"end": 11496,
											"name": "PUSH",
											"source": 8,
											"value": "3B"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 11480,
											"end": 11513,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 11480,
											"end": 11513,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "538"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "D07FE408FA264E656A9C06E272928E4D4BB400D93CD5B5E74AC592F6170C2FD"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "540"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 102,
											"end": 13066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "540"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11596,
											"end": 11597,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11644,
											"end": 11661,
											"name": "PUSH",
											"source": 8,
											"value": "3E"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11695,
											"end": 11696,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 11644,
											"end": 11696,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11746,
											"end": 11778,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 11746,
											"end": 11870,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11746,
											"end": 11870,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11746,
											"end": 11870,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "541"
										},
										{
											"begin": 11746,
											"end": 11870,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11257,
											"end": 12759,
											"name": "tag",
											"source": 8,
											"value": "542"
										},
										{
											"begin": 11257,
											"end": 12759,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11644,
											"end": 11696,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11644,
											"end": 11696,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11644,
											"end": 11696,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11900,
											"end": 11936,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11900,
											"end": 11936,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "543"
										},
										{
											"begin": 11900,
											"end": 11936,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11257,
											"end": 12759,
											"name": "tag",
											"source": 8,
											"value": "544"
										},
										{
											"begin": 11257,
											"end": 12759,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "545"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12337,
											"end": 12350,
											"name": "PUSH",
											"source": 8,
											"value": "3D"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 12388,
											"end": 12413,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 12388,
											"end": 12413,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12388,
											"end": 12413,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 11480,
											"end": 11513,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 12384,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "547"
										},
										{
											"begin": 12384,
											"end": 12422,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12689,
											"end": 12751,
											"name": "PUSH",
											"source": 8,
											"value": "360CB96D3E85B4FC299DDFA9A572850FC70961C86F0F1703F033143B0E5A82CF"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 12563,
											"end": 12578,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 11596,
											"end": 11597,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 12538,
											"end": 12560,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12538,
											"end": 12560,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 12589,
											"end": 12610,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "FF00"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 12689,
											"end": 12751,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12689,
											"end": 12751,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12689,
											"end": 12751,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12563,
											"end": 12578,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12689,
											"end": 12751,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12689,
											"end": 12751,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12689,
											"end": 12751,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 11257,
											"end": 12759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12384,
											"end": 12422,
											"name": "tag",
											"source": 8,
											"value": "547"
										},
										{
											"begin": 12384,
											"end": 12422,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12415,
											"end": 12422,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12415,
											"end": 12422,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12415,
											"end": 12422,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12415,
											"end": 12422,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12415,
											"end": 12422,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12415,
											"end": 12422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "545"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F7420656C696769626C6520666F72207765656B6C7920636F6E7465737400"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11900,
											"end": 11936,
											"name": "tag",
											"source": 8,
											"value": "543"
										},
										{
											"begin": 11900,
											"end": 11936,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11900,
											"end": 11936,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11900,
											"end": 11936,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11900,
											"end": 11936,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11900,
											"end": 11936,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "544"
										},
										{
											"begin": 11900,
											"end": 11936,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11746,
											"end": 11870,
											"name": "tag",
											"source": 8,
											"value": "541"
										},
										{
											"begin": 11746,
											"end": 11870,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11827,
											"end": 11832,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11827,
											"end": 11858,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 11827,
											"end": 11858,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 731,
											"end": 737,
											"name": "PUSH",
											"source": 8,
											"value": "15180"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11796,
											"end": 11870,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 11796,
											"end": 11870,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11746,
											"end": 11870,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11746,
											"end": 11870,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "542"
										},
										{
											"begin": 11746,
											"end": 11870,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "538"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "149BDD5B990818DB1BDCD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "tag",
											"source": 7,
											"value": "536"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A59081C9BDD5B99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13066,
											"name": "REVERT",
											"source": 7
										}
									],
									".data": {
										"92FB4C3DF386BC0D49F8847C66CDA554C07C2DF42E065E03D639278ECF8D94A7": "babb6a363fd9a057996d09882c0b74b710d121707d19eeffd91c51c3171a7c91"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/modules/InfinityPool.sol",
								"contracts/modules/Storage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ACC_PRECISION()": "32fcd966",
							"MONTH_DURATION()": "2a891534",
							"PERCENTS_DIVIDER()": "01c234a8",
							"ROI_CAP_DIVIDER()": "58c7d352",
							"ROI_CAP_MULTIPLIER()": "375b43b4",
							"RetopPoolByEarning(uint256,uint256)": "7848f0a3",
							"TIME_STEP()": "32bc298c",
							"WEEK_DURATION()": "76f5f700",
							"WeeklyCapping()": "ebe0ff15",
							"WeeklyTotalReward()": "3080b5bc",
							"canBuyNextPool(uint256)": "67d52d4d",
							"communityAccPerUser()": "78f6ad6d",
							"creatorWallet()": "7cdc65f2",
							"currentMonthlyRound()": "c9ed0708",
							"currentMonthlyStartTime()": "e898fc38",
							"currentWeeklyRound()": "ca8e9121",
							"currentWeeklyStartTime()": "fddc806f",
							"defaultRefId()": "ec597e6f",
							"glbBoosterPackages(uint256)": "2350268f",
							"minLevelForGlbBooster(uint256)": "d0a2fd79",
							"minLevelForPool(uint256)": "2132d204",
							"minPoolForGlbBooster(uint256)": "956a3228",
							"monthlyCapping()": "c8df2908",
							"packages(uint256)": "c216212a",
							"poolPackages(uint256)": "ae4708dc",
							"registeredUserIds(uint256)": "39ab3603",
							"systemMaintance()": "e9e34a16",
							"teamDevelopment()": "f5d74d93",
							"totalUsers()": "bff1f9e1",
							"upgradeBooster(uint256)": "bc1fa7c0",
							"upgradePool(uint256)": "4060160a",
							"upgradePoolByEarning(uint32,uint256)": "8e222e24",
							"usdt()": "2f48ab7d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usersCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUser\",\"type\":\"uint256\"}],\"name\":\"CommunityBonusDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"packageLevel\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"incomeType\",\"type\":\"uint256\"}],\"name\":\"IncomeDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromUserId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"LotteryReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"uplineId\",\"type\":\"uint256\"}],\"name\":\"Registration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"level\",\"type\":\"string\"}],\"name\":\"RewardSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"packageLevel\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"depositType\",\"type\":\"string\"}],\"name\":\"Upgrade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"matrixId\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"userId\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"parentId\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"position\",\"type\":\"uint8\"}],\"name\":\"UserJoined\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalUsers\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUserReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"distributedAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"leftoverReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"WeeklyClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"joinTime\",\"type\":\"uint256\"}],\"name\":\"WeeklyContestQualified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUserReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimTime\",\"type\":\"uint256\"}],\"name\":\"WeeklyRewardClaim\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ACC_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MONTH_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERCENTS_DIVIDER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROI_CAP_DIVIDER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROI_CAP_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_userId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"RetopPoolByEarning\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TIME_STEP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WEEK_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WeeklyCapping\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WeeklyTotalReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"}],\"name\":\"canBuyNextPool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"eligible\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"communityAccPerUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creatorWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentMonthlyRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentMonthlyStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentWeeklyRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentWeeklyStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultRefId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"glbBoosterPackages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"minLevelForGlbBooster\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"minLevelForPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"minPoolForGlbBooster\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"monthlyCapping\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"packages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolPackages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"registeredUserIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"systemMaintance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamDevelopment\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_userId\",\"type\":\"uint256\"}],\"name\":\"upgradeBooster\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_userId\",\"type\":\"uint256\"}],\"name\":\"upgradePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_userId\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"upgradePoolByEarning\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdt\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/InfinityPool.sol\":\"InfinityPool\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/modules/InfinityPool.sol\":{\"keccak256\":\"0xbf8cce6376314ef1e231912184157584aa138c92bf9b6638d2a034010aab773a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6931c99f400767821571435ce1103f52bc7cb4bbc12b9191e140860284b77727\",\"dweb:/ipfs/QmUccPWW1uxFqbfTtCj57aNBcxowor1wPB5RFA3Hfctxs7\"]},\"contracts/modules/Storage.sol\":{\"keccak256\":\"0xb55ab9fa20841a265b47f8425ca43ec36ddaea2f616e6a7929246d944c6b9fea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81db600f5b210f60489338003a857c701d5a41e6ca5d992741d406072380e001\",\"dweb:/ipfs/QmXbjutnPKn2Yuhwpw4rFNDzGv5nRJBCuKS7LDYzq69tHs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 100,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 1919,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "usdt",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)232"
							},
							{
								"astId": 1921,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "creatorWallet",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 1923,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "systemMaintance",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 1925,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "teamDevelopment",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 1927,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "defaultRefId",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1929,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "totalUsers",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1947,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "registeredUserIds",
								"offset": 0,
								"slot": "7",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 1949,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "nonce",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1954,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "communityAccPerUser",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1958,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "communityDebt",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 2007,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "packages",
								"offset": 0,
								"slot": "11",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 2093,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "addressToId",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 2098,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "users",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_uint256,t_struct(User)2051_storage)"
							},
							{
								"astId": 2103,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "userIncomes",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_uint256,t_struct(UserIncome)2078_storage)"
							},
							{
								"astId": 2109,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "incomeHistory",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_uint256,t_array(t_struct(Income)2089_storage)dyn_storage)"
							},
							{
								"astId": 2116,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "teams",
								"offset": 0,
								"slot": "16",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))"
							},
							{
								"astId": 2120,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "matrixDirect",
								"offset": 0,
								"slot": "17",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 2125,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "directReferrals",
								"offset": 0,
								"slot": "18",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 2208,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "poolPackages",
								"offset": 0,
								"slot": "19",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 2220,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "glbBoosterPackages",
								"offset": 0,
								"slot": "20",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 2232,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "minLevelForPool",
								"offset": 0,
								"slot": "21",
								"type": "t_array(t_uint256)7_storage"
							},
							{
								"astId": 2245,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "minLevelForGlbBooster",
								"offset": 0,
								"slot": "28",
								"type": "t_array(t_uint256)8_storage"
							},
							{
								"astId": 2258,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "minPoolForGlbBooster",
								"offset": 0,
								"slot": "36",
								"type": "t_array(t_uint256)8_storage"
							},
							{
								"astId": 2292,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "userPooltopup",
								"offset": 0,
								"slot": "44",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserPoolTopup)2274_storage))"
							},
							{
								"astId": 2299,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "userPooldtl",
								"offset": 0,
								"slot": "45",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserPool)2269_storage))"
							},
							{
								"astId": 2306,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "userChildren",
								"offset": 0,
								"slot": "46",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))"
							},
							{
								"astId": 2313,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "userIdPerPool",
								"offset": 0,
								"slot": "47",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))"
							},
							{
								"astId": 2318,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "poolUsers",
								"offset": 0,
								"slot": "48",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 2324,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "userHasPool",
								"offset": 0,
								"slot": "49",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))"
							},
							{
								"astId": 2331,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "userBoosterdtl",
								"offset": 0,
								"slot": "50",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserBooster)2285_storage))"
							},
							{
								"astId": 2338,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "userBoosterChildren",
								"offset": 0,
								"slot": "51",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))"
							},
							{
								"astId": 2343,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "boosterUsers",
								"offset": 0,
								"slot": "52",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 2349,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "userHasbooster",
								"offset": 0,
								"slot": "53",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))"
							},
							{
								"astId": 2364,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "currentWeeklyRound",
								"offset": 0,
								"slot": "54",
								"type": "t_uint256"
							},
							{
								"astId": 2367,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "currentMonthlyRound",
								"offset": 0,
								"slot": "55",
								"type": "t_uint256"
							},
							{
								"astId": 2370,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "currentWeeklyStartTime",
								"offset": 0,
								"slot": "56",
								"type": "t_uint256"
							},
							{
								"astId": 2373,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "currentMonthlyStartTime",
								"offset": 0,
								"slot": "57",
								"type": "t_uint256"
							},
							{
								"astId": 2376,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "WeeklyTotalReward",
								"offset": 0,
								"slot": "58",
								"type": "t_uint256"
							},
							{
								"astId": 2413,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "weeklyContestdtl",
								"offset": 0,
								"slot": "59",
								"type": "t_mapping(t_uint256,t_struct(WeeklyContest)2395_storage)"
							},
							{
								"astId": 2418,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "weeklyQualifiedUsers",
								"offset": 0,
								"slot": "60",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 2425,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "weeklyUserdtl",
								"offset": 0,
								"slot": "61",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(weeklyUser)2408_storage))"
							},
							{
								"astId": 2432,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "weeklyUserDirects",
								"offset": 0,
								"slot": "62",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Deposit)2016_storage)dyn_storage": {
								"base": "t_struct(Deposit)2016_storage",
								"encoding": "dynamic_array",
								"label": "struct Storage.Deposit[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(Income)2089_storage)dyn_storage": {
								"base": "t_struct(Income)2089_storage",
								"encoding": "dynamic_array",
								"label": "struct Storage.Income[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)7_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[7]",
								"numberOfBytes": "224"
							},
							"t_array(t_uint256)8_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[8]",
								"numberOfBytes": "256"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)232": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_array(t_struct(Income)2089_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.Income[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(Income)2089_storage)dyn_storage"
							},
							"t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256[])",
								"numberOfBytes": "32",
								"value": "t_array(t_uint256)dyn_storage"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => uint256[]))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_bool)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserBooster)2285_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => struct Storage.UserBooster))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(UserBooster)2285_storage)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserPool)2269_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => struct Storage.UserPool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(UserPool)2269_storage)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserPoolTopup)2274_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => struct Storage.UserPoolTopup))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(UserPoolTopup)2274_storage)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(weeklyUser)2408_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => struct Storage.weeklyUser))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(weeklyUser)2408_storage)"
							},
							"t_mapping(t_uint256,t_struct(User)2051_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.User)",
								"numberOfBytes": "32",
								"value": "t_struct(User)2051_storage"
							},
							"t_mapping(t_uint256,t_struct(UserBooster)2285_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.UserBooster)",
								"numberOfBytes": "32",
								"value": "t_struct(UserBooster)2285_storage"
							},
							"t_mapping(t_uint256,t_struct(UserIncome)2078_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.UserIncome)",
								"numberOfBytes": "32",
								"value": "t_struct(UserIncome)2078_storage"
							},
							"t_mapping(t_uint256,t_struct(UserPool)2269_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.UserPool)",
								"numberOfBytes": "32",
								"value": "t_struct(UserPool)2269_storage"
							},
							"t_mapping(t_uint256,t_struct(UserPoolTopup)2274_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.UserPoolTopup)",
								"numberOfBytes": "32",
								"value": "t_struct(UserPoolTopup)2274_storage"
							},
							"t_mapping(t_uint256,t_struct(WeeklyContest)2395_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.WeeklyContest)",
								"numberOfBytes": "32",
								"value": "t_struct(WeeklyContest)2395_storage"
							},
							"t_mapping(t_uint256,t_struct(weeklyUser)2408_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.weeklyUser)",
								"numberOfBytes": "32",
								"value": "t_struct(weeklyUser)2408_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Deposit)2016_storage": {
								"encoding": "inplace",
								"label": "struct Storage.Deposit",
								"members": [
									{
										"astId": 2009,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2011,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "withdrawn",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2013,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "start",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2015,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "depositType",
										"offset": 0,
										"slot": "3",
										"type": "t_uint8"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(Income)2089_storage": {
								"encoding": "inplace",
								"label": "struct Storage.Income",
								"members": [
									{
										"astId": 2080,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "fromUserId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2082,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2084,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "packageLevel",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2086,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "timestamp",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2088,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "incomeType",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(User)2051_storage": {
								"encoding": "inplace",
								"label": "struct Storage.User",
								"members": [
									{
										"astId": 2018,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "account",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 2022,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "deposits",
										"offset": 0,
										"slot": "1",
										"type": "t_array(t_struct(Deposit)2016_storage)dyn_storage"
									},
									{
										"astId": 2024,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "checkpoint",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2026,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "id",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2028,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "sponsorId",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 2030,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "uplineId",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 2032,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "level",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 2034,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "directTeam",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 2036,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "directPoolQualified",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									},
									{
										"astId": 2038,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "totalMatrixTeam",
										"offset": 0,
										"slot": "9",
										"type": "t_uint256"
									},
									{
										"astId": 2040,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "totalDeposit",
										"offset": 0,
										"slot": "10",
										"type": "t_uint256"
									},
									{
										"astId": 2042,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "poollevel",
										"offset": 0,
										"slot": "11",
										"type": "t_uint256"
									},
									{
										"astId": 2044,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "poolDeposit",
										"offset": 0,
										"slot": "12",
										"type": "t_uint256"
									},
									{
										"astId": 2046,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "boosterlevel",
										"offset": 0,
										"slot": "13",
										"type": "t_uint256"
									},
									{
										"astId": 2048,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "boosterDeposit",
										"offset": 0,
										"slot": "14",
										"type": "t_uint256"
									},
									{
										"astId": 2050,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "registrationTime",
										"offset": 0,
										"slot": "15",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "512"
							},
							"t_struct(UserBooster)2285_storage": {
								"encoding": "inplace",
								"label": "struct Storage.UserBooster",
								"members": [
									{
										"astId": 2276,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2278,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "poolId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2280,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "parentId",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2282,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "bonusCount",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2284,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "joinTime",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(UserIncome)2078_storage": {
								"encoding": "inplace",
								"label": "struct Storage.UserIncome",
								"members": [
									{
										"astId": 2053,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "totalIncome",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2055,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "sponsorIncome",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2057,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "matrixIncome",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2059,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "levelBoosterIncome",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2061,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "levelIncome",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 2063,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "royaltyIncome",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 2065,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "royaltyIncomeClaimed",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 2067,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "communityIncome",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 2069,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "poolIncome",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									},
									{
										"astId": 2071,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "boosterIncome",
										"offset": 0,
										"slot": "9",
										"type": "t_uint256"
									},
									{
										"astId": 2073,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "weeklyContestIncome",
										"offset": 0,
										"slot": "10",
										"type": "t_uint256"
									},
									{
										"astId": 2075,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "monthlyRoyalty",
										"offset": 0,
										"slot": "11",
										"type": "t_uint256"
									},
									{
										"astId": 2077,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "monthlyTopRoyalty",
										"offset": 0,
										"slot": "12",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "416"
							},
							"t_struct(UserPool)2269_storage": {
								"encoding": "inplace",
								"label": "struct Storage.UserPool",
								"members": [
									{
										"astId": 2260,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2262,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "mainid",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2264,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "poolId",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2266,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "parentId",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2268,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "bonusCount",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(UserPoolTopup)2274_storage": {
								"encoding": "inplace",
								"label": "struct Storage.UserPoolTopup",
								"members": [
									{
										"astId": 2271,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "nextPoolAmt",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2273,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "reTopupAmt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(WeeklyContest)2395_storage": {
								"encoding": "inplace",
								"label": "struct Storage.WeeklyContest",
								"members": [
									{
										"astId": 2378,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "roundId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2380,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "totalReward",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2382,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "totalUsers",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2384,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "perUserReward",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2386,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "claimedCount",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 2388,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "startTime",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 2390,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "endTime",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 2392,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "carryForward",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 2394,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "closed",
										"offset": 0,
										"slot": "8",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "288"
							},
							"t_struct(weeklyUser)2408_storage": {
								"encoding": "inplace",
								"label": "struct Storage.weeklyUser",
								"members": [
									{
										"astId": 2397,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2399,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "joinTime",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2401,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "roundId",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2403,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "claimTime",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2405,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "isClaimed",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									},
									{
										"astId": 2407,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "isQualified",
										"offset": 1,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/modules/Storage.sol": {
				"Storage": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "usersCount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUser",
									"type": "uint256"
								}
							],
							"name": "CommunityBonusDistributed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "packageLevel",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "incomeType",
									"type": "uint256"
								}
							],
							"name": "IncomeDistributed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "winner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromUserId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "LotteryReward",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sponsor",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "uplineId",
									"type": "uint256"
								}
							],
							"name": "Registration",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "level",
									"type": "string"
								}
							],
							"name": "RewardSent",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "packageLevel",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "depositType",
									"type": "string"
								}
							],
							"name": "Upgrade",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint8",
									"name": "matrixId",
									"type": "uint8"
								},
								{
									"indexed": true,
									"internalType": "uint32",
									"name": "userId",
									"type": "uint32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint32",
									"name": "parentId",
									"type": "uint32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "parentAddr",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "position",
									"type": "uint8"
								}
							],
							"name": "UserJoined",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalUsers",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUserReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "distributedAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "leftoverReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								}
							],
							"name": "WeeklyClosed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "joinTime",
									"type": "uint256"
								}
							],
							"name": "WeeklyContestQualified",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUserReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "claimTime",
									"type": "uint256"
								}
							],
							"name": "WeeklyRewardClaim",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ACC_PRECISION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MONTH_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERCENTS_DIVIDER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ROI_CAP_DIVIDER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ROI_CAP_MULTIPLIER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TIME_STEP",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WEEK_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WeeklyCapping",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WeeklyTotalReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "communityAccPerUser",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "creatorWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentMonthlyRound",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentMonthlyStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentWeeklyRound",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentWeeklyStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "defaultRefId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "glbBoosterPackages",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "minLevelForGlbBooster",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "minLevelForPool",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "minPoolForGlbBooster",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "monthlyCapping",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "packages",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "poolPackages",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "registeredUserIds",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "systemMaintance",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "teamDevelopment",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalUsers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdt",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n  jumpi(tag_4, callvalue)\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  sstore\n  mload(0x40)\n  0x01e0\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  dup3\n  dup3\n  lt\n  or\n  tag_6\n  jumpi\n  0x40\n  mstore\n    /* \"contracts/modules/Storage.sol\":1324:1333  15 * 1e18 */\n  0xd02ab486cedc0000\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  dup2\n  mstore\n    /* \"contracts/modules/Storage.sol\":1356:1365  25 * 1e18 */\n  0x015af1d78b58c40000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1388:1397  50 * 1e18 */\n  0x02b5e3af16b1880000\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1420:1430  100 * 1e18 */\n  0x056bc75e2d63100000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x60\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1453:1463  200 * 1e18 */\n  0x0ad78ebc5ac6200000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x80\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1486:1496  400 * 1e18 */\n  0x15af1d78b58c400000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xa0\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1519:1529  800 * 1e18 */\n  0x2b5e3af16b18800000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xc0\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1552:1563  1600 * 1e18 */\n  0x56bc75e2d631000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xe0\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1586:1597  3200 * 1e18 */\n  0xad78ebc5ac62000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0100\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1620:1631  6400 * 1e18 */\n  0x015af1d78b58c4000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0120\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1654:1666  12800 * 1e18 */\n  0x02b5e3af16b188000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0140\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1689:1701  25600 * 1e18 */\n  0x056bc75e2d6310000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0160\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1724:1736  51200 * 1e18 */\n  0x0ad78ebc5ac620000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0180\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1759:1772  102400 * 1e18 */\n  0x15af1d78b58c40000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x01a0\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1795:1808  204800 * 1e18 */\n  0x2b5e3af16b1880000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x01c0\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0b\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  sload\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0f\n  0x0b\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  sstore\n  dup1\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0f\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  lt\n  tag_8\n  jumpi\ntag_9:\n  pop\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0b\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  keccak256\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\ntag_10:\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0f\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  dup2\n  lt\n  tag_11\n  jumpi\n  tag_13\n  tag_1\n  jump\t// in\ntag_13:\n    /* \"contracts/modules/Storage.sol\":5058:5063  75e18 */\n  0x0410d586a20a4c0000\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  dup2\n  mstore\n    /* \"contracts/modules/Storage.sol\":5065:5071  300e18 */\n  0x1043561a8829300000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5073:5080  1200e18 */\n  0x410d586a20a4c00000\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5082:5089  4800e18 */\n  0x01043561a88293000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x60\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5091:5099  19200e18 */\n  0x0410d586a20a4c000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x80\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5101:5109  76800e18 */\n  0x1043561a882930000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xa0\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5111:5120  307200e18 */\n  0x410d586a20a4c0000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xc0\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x13\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  sload\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n  0x13\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  sstore\n  dup1\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  lt\n  tag_14\n  jumpi\ntag_15:\n  pop\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x13\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  keccak256\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\ntag_16:\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  dup2\n  lt\n  tag_17\n  jumpi\n  tag_19\n  tag_2\n  jump\t// in\ntag_19:\n    /* \"contracts/modules/Storage.sol\":1420:1430  100 * 1e18 */\n  0x056bc75e2d63100000\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  dup2\n  mstore\n    /* \"contracts/modules/Storage.sol\":1453:1463  200 * 1e18 */\n  0x0ad78ebc5ac6200000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1486:1496  400 * 1e18 */\n  0x15af1d78b58c400000\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1519:1529  800 * 1e18 */\n  0x2b5e3af16b18800000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x60\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1552:1563  1600 * 1e18 */\n  0x56bc75e2d631000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x80\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1586:1597  3200 * 1e18 */\n  0xad78ebc5ac62000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xa0\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1620:1631  6400 * 1e18 */\n  0x015af1d78b58c4000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xc0\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1654:1666  12800 * 1e18 */\n  0x02b5e3af16b188000000\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xe0\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x14\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  sload\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n  0x14\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  sstore\n  dup1\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  lt\n  tag_20\n  jumpi\ntag_21:\n  pop\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x14\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  keccak256\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\ntag_22:\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  dup2\n  lt\n  tag_23\n  jumpi\n  tag_25\n  tag_1\n  jump\t// in\ntag_25:\n    /* \"contracts/modules/Storage.sol\":5274:5275  3 */\n  0x03\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  dup2\n  mstore\n  0x05\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":5273:5297  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":5273:5297  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5283:5284  9 */\n  0x09\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x60\n    /* \"contracts/modules/Storage.sol\":5273:5297  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0b\n  0x80\n    /* \"contracts/modules/Storage.sol\":5273:5297  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5290:5292  13 */\n  0x0d\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xa0\n    /* \"contracts/modules/Storage.sol\":5273:5297  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0f\n  0xc0\n    /* \"contracts/modules/Storage.sol\":5273:5297  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\ntag_26:\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  dup2\n  lt\n  tag_27\n  jumpi\n  tag_29\n  tag_2\n  jump\t// in\ntag_29:\n    /* \"contracts/modules/Storage.sol\":5344:5345  4 */\n  0x04\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  dup2\n  mstore\n  0x05\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":5343:5368  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5350:5351  6 */\n  0x06\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":5343:5368  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x60\n    /* \"contracts/modules/Storage.sol\":5343:5368  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x80\n    /* \"contracts/modules/Storage.sol\":5343:5368  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5283:5284  9 */\n  0x09\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xa0\n    /* \"contracts/modules/Storage.sol\":5343:5368  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":5362:5364  10 */\n  0x0a\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xc0\n    /* \"contracts/modules/Storage.sol\":5343:5368  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0b\n  0xe0\n    /* \"contracts/modules/Storage.sol\":5343:5368  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\ntag_30:\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  dup2\n  lt\n  tag_31\n  jumpi\n  tag_33\n  tag_2\n  jump\t// in\ntag_33:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":5413:5436  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":5413:5436  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x60\n    /* \"contracts/modules/Storage.sol\":5413:5436  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x80\n    /* \"contracts/modules/Storage.sol\":5413:5436  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xa0\n    /* \"contracts/modules/Storage.sol\":5413:5436  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xc0\n    /* \"contracts/modules/Storage.sol\":5413:5436  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0xe0\n    /* \"contracts/modules/Storage.sol\":5413:5436  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\ntag_34:\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  dup2\n  lt\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":7098:7099  1 */\n  0x36\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":7144:7145  1 */\n  0x37\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":7189:7190  0 */\n  0x38\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":7235:7236  0 */\n  0x39\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":7275:7276  0 */\n  0x3a\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  sstore\n  mload(0x40)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_35:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  swap1\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  0xff\n  dup5\n  mload\n  and\n  swap4\n  add\n  swap3\n  dup2\n    /* \"contracts/modules/Storage.sol\":5413:5436  [0, 1, 1, 1, 1, 1, 1,1] */\n  0x24\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  add\n  sstore\n  add\n  jump(tag_34)\ntag_31:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  swap1\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  0xff\n  dup5\n  mload\n  and\n  swap4\n  add\n  swap3\n  dup2\n    /* \"contracts/modules/Storage.sol\":5343:5368  [4, 5, 6, 7, 8, 9, 10,11] */\n  0x1c\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  add\n  sstore\n  add\n  jump(tag_30)\ntag_27:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  swap1\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  0xff\n  dup5\n  mload\n  and\n  swap4\n  add\n  swap3\n  dup2\n    /* \"contracts/modules/Storage.sol\":5273:5297  [3, 5, 7, 9, 11, 13, 15] */\n  0x15\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  add\n  sstore\n  add\n  jump(tag_26)\ntag_23:\n  dup2\n  mload\n  sub(shl(0x50, 0x01), 0x01)\n  and\n  dup2\n  dup5\n  add\n  sstore\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  add\n  jump(tag_22)\ntag_20:\n    /* \"contracts/modules/Storage.sol\":5163:5233  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x14\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n  tag_37\n  swap1\n  0xce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ec\n  add\n  0xce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4f4\n  tag_3\n  jump\t// in\ntag_37:\n  dup2\n  jump(tag_21)\ntag_17:\n  dup2\n  mload\n  sub(shl(0x50, 0x01), 0x01)\n  and\n  dup2\n  dup5\n  add\n  sstore\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  add\n  jump(tag_16)\ntag_14:\n    /* \"contracts/modules/Storage.sol\":5057:5121  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x13\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n  tag_38\n  swap1\n  0x66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a090\n  add\n  0x66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a097\n  tag_3\n  jump\t// in\ntag_38:\n  dup2\n  jump(tag_15)\ntag_11:\n  dup2\n  mload\n  sub(shl(0x50, 0x01), 0x01)\n  and\n  dup2\n  dup5\n  add\n  sstore\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  add\n  jump(tag_10)\ntag_8:\n    /* \"contracts/modules/Storage.sol\":1313:1828  [... */\n  0x0b\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n  tag_39\n  swap1\n  0x0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9\n  add\n  0x0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01dc8\n  tag_3\n  jump\t// in\ntag_39:\n  0x00\n  jump(tag_9)\ntag_6:\n  shl(0xe0, 0x4e487b71)\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  mstore\n  mstore(0x04, 0x41)\n  0x24\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n  revert\ntag_4:\n  0x00\n  dup1\n  revert\ntag_1:\n  mload(0x40)\n  swap1\n  0xe0\n  dup3\n  add\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  dup4\n  dup3\n  lt\n  or\n  tag_6\n  jumpi\n  0x40\n  mstore\n  jump\t// out\ntag_2:\n  mload(0x40)\n  swap1\n  0x0100\n  dup3\n  add\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  dup4\n  dup3\n  lt\n  or\n  tag_6\n  jumpi\n  0x40\n  mstore\n  jump\t// out\ntag_3:\n  dup2\n  dup2\n  lt\n  tag_45\n  jumpi\n  pop\n  pop\n  jump\t// out\ntag_45:\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_3)\nstop\n\nsub_0: assembly {\n        /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n      0x80\n      dup1\n      0x40\n      mstore\n      jumpi(tag_1, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_1:\n      shr(0xe0, calldataload(0x00))\n      swap1\n      dup2\n      0x01c234a8\n      eq\n      tag_3\n      jumpi\n      pop\n      dup1\n      0x2132d204\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2350268f\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2a891534\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x2f48ab7d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x3080b5bc\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x32bc298c\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x32fcd966\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x375b43b4\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x39ab3603\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x58c7d352\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x76f5f700\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x78f6ad6d\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x7cdc65f2\n      eq\n      tag_29\n      jumpi\n      dup1\n      0x956a3228\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xae4708dc\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xbff1f9e1\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xc216212a\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xc8df2908\n      eq\n      tag_39\n      jumpi\n      dup1\n      0xc9ed0708\n      eq\n      tag_41\n      jumpi\n      dup1\n      0xca8e9121\n      eq\n      tag_43\n      jumpi\n      dup1\n      0xd0a2fd79\n      eq\n      tag_45\n      jumpi\n      dup1\n      0xe898fc38\n      eq\n      tag_47\n      jumpi\n      dup1\n      0xe9e34a16\n      eq\n      tag_49\n      jumpi\n      dup1\n      0xebe0ff15\n      eq\n      tag_51\n      jumpi\n      dup1\n      0xec597e6f\n      eq\n      tag_53\n      jumpi\n      dup1\n      0xf5d74d93\n      eq\n      tag_55\n      jumpi\n      0xfddc806f\n      eq\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      jumpi(tag_61, callvalue)\n      jumpi(tag_61, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":7152:7190  uint public currentWeeklyStartTime = 0 */\n      0x38\n        /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_61:\n      0x00\n      dup1\n      revert\n    tag_55:\n      jumpi(tag_61, callvalue)\n      jumpi(tag_61, slt(add(not(0x03), calldatasize), 0x00))\n      sload(0x04)\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_53:\n      jumpi(tag_61, callvalue)\n      jumpi(tag_61, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":534:558  uint public defaultRefId */\n      0x05\n        /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_51:\n      jumpi(tag_61, callvalue)\n      jumpi(tag_61, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":6996:7003  1000e18 */\n      0x3635c9adc5dea00000\n        /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_49:\n      jumpi(tag_61, callvalue)\n      jumpi(tag_61, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"contracts/modules/Storage.sol\":460:490  address public systemMaintance */\n      0x03\n        /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_47:\n      jumpi(tag_61, callvalue)\n      jumpi(tag_61, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":7197:7236  uint public currentMonthlyStartTime = 0 */\n      0x39\n        /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_45:\n      jumpi(tag_61, callvalue)\n      jumpi(tag_61, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      0x08\n        /* \"contracts/modules/Storage.sol\":5304:5368  uint[8] public minLevelForGlbBooster = [4, 5, 6, 7, 8, 9, 10,11] */\n      dup2\n      lt\n      iszero\n      tag_61\n      jumpi\n        /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n      0x20\n      swap1\n        /* \"contracts/modules/Storage.sol\":5304:5368  uint[8] public minLevelForGlbBooster = [4, 5, 6, 7, 8, 9, 10,11] */\n      0x1c\n        /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_43:\n      jumpi(tag_61, callvalue)\n      jumpi(tag_61, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":7065:7099  uint public currentWeeklyRound = 1 */\n      0x36\n        /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_41:\n      jumpi(tag_61, callvalue)\n      jumpi(tag_61, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":7110:7145  uint public currentMonthlyRound = 1 */\n      0x37\n        /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_39:\n      jumpi(tag_61, callvalue)\n      jumpi(tag_61, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":7048:7056  10000e18 */\n      0x021e19e0c9bab2400000\n        /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_37:\n      jumpi(tag_61, callvalue)\n      jumpi(tag_61, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \"contracts/modules/Storage.sol\":1288:1828  uint[] public packages = [... */\n      0x0b\n        /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n      sload\n        /* \"contracts/modules/Storage.sol\":1288:1828  uint[] public packages = [... */\n      dup2\n      lt\n      iszero\n      tag_61\n      jumpi\n      0x0b\n        /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n      sload\n      dup2\n      lt\n      iszero\n      tag_107\n      jumpi\n        /* \"contracts/modules/Storage.sol\":1288:1828  uint[] public packages = [... */\n      0x0b\n        /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n      0x00\n      mstore\n      0x0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_107:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_35:\n      jumpi(tag_61, callvalue)\n      jumpi(tag_61, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":565:587  uint public totalUsers */\n      0x06\n        /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_33:\n      jumpi(tag_61, callvalue)\n      jumpi(tag_61, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \"contracts/modules/Storage.sol\":5028:5121  uint[] public poolPackages = [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n      0x13\n        /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n      sload\n        /* \"contracts/modules/Storage.sol\":5028:5121  uint[] public poolPackages = [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n      dup2\n      lt\n      iszero\n      tag_61\n      jumpi\n      0x13\n        /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n      sload\n      dup2\n      lt\n      iszero\n      tag_107\n      jumpi\n        /* \"contracts/modules/Storage.sol\":5028:5121  uint[] public poolPackages = [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n      0x13\n        /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n      0x00\n      mstore\n      0x66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a090\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_31:\n      jumpi(tag_61, callvalue)\n      jumpi(tag_61, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      0x08\n        /* \"contracts/modules/Storage.sol\":5375:5436  uint[8] public minPoolForGlbBooster = [0, 1, 1, 1, 1, 1, 1,1] */\n      dup2\n      lt\n      iszero\n      tag_61\n      jumpi\n        /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n      0x20\n      swap1\n        /* \"contracts/modules/Storage.sol\":5375:5436  uint[8] public minPoolForGlbBooster = [0, 1, 1, 1, 1, 1, 1,1] */\n      0x24\n        /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_29:\n      jumpi(tag_61, callvalue)\n      jumpi(tag_61, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"contracts/modules/Storage.sol\":422:450  address public creatorWallet */\n      0x02\n        /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_27:\n      jumpi(tag_61, callvalue)\n      jumpi(tag_61, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":1131:1165  uint256 public communityAccPerUser */\n      0x09\n        /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_25:\n      jumpi(tag_61, callvalue)\n      jumpi(tag_61, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":6894:6900  7 days */\n      0x093a80\n        /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_23:\n      jumpi(tag_61, callvalue)\n      jumpi(tag_61, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":848:850  10 */\n      0x0a\n        /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_21:\n      jumpi(tag_61, callvalue)\n      jumpi(tag_61, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \"contracts/modules/Storage.sol\":864:895  uint[] public registeredUserIds */\n      0x07\n        /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n      sload\n        /* \"contracts/modules/Storage.sol\":864:895  uint[] public registeredUserIds */\n      dup2\n      lt\n      iszero\n      tag_61\n      jumpi\n      0x07\n        /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n      sload\n      dup2\n      lt\n      iszero\n      tag_107\n      jumpi\n        /* \"contracts/modules/Storage.sol\":864:895  uint[] public registeredUserIds */\n      0x07\n        /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n      0x00\n      mstore\n      0xa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_19:\n      jumpi(tag_61, callvalue)\n      jumpi(tag_61, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":789:791  15 */\n      0x0f\n        /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_17:\n      jumpi(tag_61, callvalue)\n      jumpi(tag_61, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":1120:1124  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_15:\n      jumpi(tag_61, callvalue)\n      jumpi(tag_61, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":731:737  1 days */\n      0x015180\n        /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_13:\n      jumpi(tag_61, callvalue)\n      jumpi(tag_61, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":7243:7276  uint public WeeklyTotalReward = 0 */\n      0x3a\n        /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_11:\n      jumpi(tag_61, callvalue)\n      jumpi(tag_61, slt(add(not(0x03), calldatasize), 0x00))\n      sload(0x01)\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_9:\n      jumpi(tag_61, callvalue)\n      jumpi(tag_61, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":6945:6952  30 days */\n      0x278d00\n        /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_7:\n      jumpi(tag_61, callvalue)\n      jumpi(tag_61, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \"contracts/modules/Storage.sol\":5128:5233  uint[] public glbBoosterPackages = [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n      0x14\n        /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n      sload\n        /* \"contracts/modules/Storage.sol\":5128:5233  uint[] public glbBoosterPackages = [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n      dup2\n      lt\n      iszero\n      tag_61\n      jumpi\n      0x14\n        /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n      sload\n      dup2\n      lt\n      iszero\n      tag_107\n      jumpi\n        /* \"contracts/modules/Storage.sol\":5128:5233  uint[] public glbBoosterPackages = [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n      0x14\n        /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n      0x00\n      mstore\n      0xce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ec\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_5:\n      jumpi(tag_61, callvalue)\n      jumpi(tag_61, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      0x07\n        /* \"contracts/modules/Storage.sol\":5240:5297  uint[7] public minLevelForPool = [3, 5, 7, 9, 11, 13, 15] */\n      dup2\n      lt\n      iszero\n      tag_61\n      jumpi\n        /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n      0x20\n      swap1\n        /* \"contracts/modules/Storage.sol\":5240:5297  uint[7] public minLevelForPool = [3, 5, 7, 9, 11, 13, 15] */\n      0x15\n        /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_3:\n      jumpi(tag_61, callvalue)\n      jumpi(tag_61, slt(add(not(0x03), calldatasize), 0x00))\n      dup1\n        /* \"contracts/modules/Storage.sol\":683:688  10000 */\n      0x2710\n        /* \"contracts/modules/Storage.sol\":292:12762  contract Storage is ReentrancyGuard {... */\n      0x20\n      swap3\n      mstore\n      return\n\n    auxdata: 0xa26469706673582212201cb761b14094df1a2cdc627edf54a9487f516e189e6cdbbbd06803ac85c6201664736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"allocate_memory": {
									"entryPoint": 1342,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"allocate_memory_3389": {
									"entryPoint": 1311,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"clear_storage_range_uint256": {
									"entryPoint": 1374,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040523461051b5760015f556040516101e081016001600160401b038111828210176105075760405267d02ab486cedc0000815268015af1d78b58c4000060208201526802b5e3af16b1880000604082015268056bc75e2d631000006060820152680ad78ebc5ac620000060808201526815af1d78b58c40000060a0820152682b5e3af16b1880000060c08201526856bc75e2d63100000060e082015268ad78ebc5ac6200000061010082015269015af1d78b58c40000006101208201526902b5e3af16b18800000061014082015269056bc75e2d6310000000610160820152690ad78ebc5ac6200000006101808201526915af1d78b58c400000006101a0820152692b5e3af16b18800000006101c0820152600b54600f600b5580600f106104b1575b50600b5f5260205f20905f5b600f81106104945761014161051f565b680410d586a20a4c00008152681043561a8829300000602082015268410d586a20a4c0000060408201526901043561a882930000006060820152690410d586a20a4c0000006080820152691043561a88293000000060a082015269410d586a20a4c000000060c082015260135460076013558060071061043e575b5060135f5260205f20905f5b60078110610421576101d861053e565b68056bc75e2d631000008152680ad78ebc5ac620000060208201526815af1d78b58c4000006040820152682b5e3af16b1880000060608201526856bc75e2d631000000608082015268ad78ebc5ac6200000060a082015269015af1d78b58c400000060c08201526902b5e3af16b18800000060e08201526014546008601455806008106103cb575b5060145f5260205f20905f5b600881106103ae5761027c61051f565b60038152600560208201526007604082015260096060820152600b6080820152600d60a0820152600f60c08201525f5b60078110610396576102bc61053e565b6004815260056020820152600660408201526007606082015260086080820152600960a0820152600a60c0820152600b60e08201525f5b6008811061037e5761030361053e565b5f815260016020820152600160408201526001606082015260016080820152600160a0820152600160c0820152600160e08201525f5b6008811061036657600160365560016037555f6038555f6039555f603a5560405161062290816105758239f35b600190602060ff845116930192816024015501610339565b600190602060ff84511693019281601c0155016102f3565b600190602060ff8451169301928160150155016102ac565b81516001600160501b03168184015560209091019060010161026c565b60145f5261041b907fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ec017fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4f461055e565b81610260565b81516001600160501b0316818401556020909101906001016101c8565b60135f5261048e907f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a090017f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a09761055e565b816101bc565b81516001600160501b031681840155602090910190600101610131565b600b5f52610501907f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9017f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01dc861055e565b5f610125565b634e487b7160e01b5f52604160045260245ffd5b5f80fd5b6040519060e082016001600160401b0381118382101761050757604052565b6040519061010082016001600160401b0381118382101761050757604052565b818110610569575050565b5f815560010161055e56fe6080806040526004361015610012575f80fd5b5f3560e01c90816301c234a8146105d2575080632132d204146105a65780632350268f1461054c5780632a8915341461052f5780632f48ab7d146105075780633080b5bc146104ea57806332bc298c146104cd57806332fcd966146104ab578063375b43b41461049057806339ab36031461043657806358c7d3521461041b57806376f5f700146103fe57806378f6ad6d146103e15780637cdc65f2146103b9578063956a32281461038d578063ae4708dc14610333578063bff1f9e114610316578063c216212a146102a8578063c8df290814610284578063c9ed070814610267578063ca8e91211461024a578063d0a2fd791461021e578063e898fc3814610201578063e9e34a16146101d9578063ebe0ff15146101b6578063ec597e6f14610199578063f5d74d93146101715763fddc806f14610150575f80fd5b3461016d575f36600319011261016d576020603854604051908152f35b5f80fd5b3461016d575f36600319011261016d576004546040516001600160a01b039091168152602090f35b3461016d575f36600319011261016d576020600554604051908152f35b3461016d575f36600319011261016d576020604051683635c9adc5dea000008152f35b3461016d575f36600319011261016d576003546040516001600160a01b039091168152602090f35b3461016d575f36600319011261016d576020603954604051908152f35b3461016d57602036600319011261016d57600435600881101561016d57602090601c0154604051908152f35b3461016d575f36600319011261016d576020603654604051908152f35b3461016d575f36600319011261016d576020603754604051908152f35b3461016d575f36600319011261016d57602060405169021e19e0c9bab24000008152f35b3461016d57602036600319011261016d57600435600b5481101561016d57600b5481101561030257600b5f527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90154604051908152602090f35b634e487b7160e01b5f52603260045260245ffd5b3461016d575f36600319011261016d576020600654604051908152f35b3461016d57602036600319011261016d5760043560135481101561016d576013548110156103025760135f527f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a0900154604051908152602090f35b3461016d57602036600319011261016d57600435600881101561016d5760209060240154604051908152f35b3461016d575f36600319011261016d576002546040516001600160a01b039091168152602090f35b3461016d575f36600319011261016d576020600954604051908152f35b3461016d575f36600319011261016d57602060405162093a808152f35b3461016d575f36600319011261016d576020604051600a8152f35b3461016d57602036600319011261016d5760043560075481101561016d576007548110156103025760075f527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880154604051908152602090f35b3461016d575f36600319011261016d576020604051600f8152f35b3461016d575f36600319011261016d576020604051670de0b6b3a76400008152f35b3461016d575f36600319011261016d576020604051620151808152f35b3461016d575f36600319011261016d576020603a54604051908152f35b3461016d575f36600319011261016d576001546040516001600160a01b039091168152602090f35b3461016d575f36600319011261016d57602060405162278d008152f35b3461016d57602036600319011261016d5760043560145481101561016d576014548110156103025760145f527fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ec0154604051908152602090f35b3461016d57602036600319011261016d57600435600781101561016d5760209060150154604051908152f35b3461016d575f36600319011261016d578061271060209252f3fea26469706673582212201cb761b14094df1a2cdc627edf54a9487f516e189e6cdbbbd06803ac85c6201664736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x51B JUMPI PUSH1 0x1 PUSH0 SSTORE PUSH1 0x40 MLOAD PUSH2 0x1E0 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR PUSH2 0x507 JUMPI PUSH1 0x40 MSTORE PUSH8 0xD02AB486CEDC0000 DUP2 MSTORE PUSH9 0x15AF1D78B58C40000 PUSH1 0x20 DUP3 ADD MSTORE PUSH9 0x2B5E3AF16B1880000 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x56BC75E2D63100000 PUSH1 0x60 DUP3 ADD MSTORE PUSH9 0xAD78EBC5AC6200000 PUSH1 0x80 DUP3 ADD MSTORE PUSH9 0x15AF1D78B58C400000 PUSH1 0xA0 DUP3 ADD MSTORE PUSH9 0x2B5E3AF16B18800000 PUSH1 0xC0 DUP3 ADD MSTORE PUSH9 0x56BC75E2D631000000 PUSH1 0xE0 DUP3 ADD MSTORE PUSH9 0xAD78EBC5AC62000000 PUSH2 0x100 DUP3 ADD MSTORE PUSH10 0x15AF1D78B58C4000000 PUSH2 0x120 DUP3 ADD MSTORE PUSH10 0x2B5E3AF16B188000000 PUSH2 0x140 DUP3 ADD MSTORE PUSH10 0x56BC75E2D6310000000 PUSH2 0x160 DUP3 ADD MSTORE PUSH10 0xAD78EBC5AC620000000 PUSH2 0x180 DUP3 ADD MSTORE PUSH10 0x15AF1D78B58C40000000 PUSH2 0x1A0 DUP3 ADD MSTORE PUSH10 0x2B5E3AF16B1880000000 PUSH2 0x1C0 DUP3 ADD MSTORE PUSH1 0xB SLOAD PUSH1 0xF PUSH1 0xB SSTORE DUP1 PUSH1 0xF LT PUSH2 0x4B1 JUMPI JUMPDEST POP PUSH1 0xB PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH0 JUMPDEST PUSH1 0xF DUP2 LT PUSH2 0x494 JUMPI PUSH2 0x141 PUSH2 0x51F JUMP JUMPDEST PUSH9 0x410D586A20A4C0000 DUP2 MSTORE PUSH9 0x1043561A8829300000 PUSH1 0x20 DUP3 ADD MSTORE PUSH9 0x410D586A20A4C00000 PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x1043561A88293000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH10 0x410D586A20A4C000000 PUSH1 0x80 DUP3 ADD MSTORE PUSH10 0x1043561A882930000000 PUSH1 0xA0 DUP3 ADD MSTORE PUSH10 0x410D586A20A4C0000000 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x13 SLOAD PUSH1 0x7 PUSH1 0x13 SSTORE DUP1 PUSH1 0x7 LT PUSH2 0x43E JUMPI JUMPDEST POP PUSH1 0x13 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH0 JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x421 JUMPI PUSH2 0x1D8 PUSH2 0x53E JUMP JUMPDEST PUSH9 0x56BC75E2D63100000 DUP2 MSTORE PUSH9 0xAD78EBC5AC6200000 PUSH1 0x20 DUP3 ADD MSTORE PUSH9 0x15AF1D78B58C400000 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x2B5E3AF16B18800000 PUSH1 0x60 DUP3 ADD MSTORE PUSH9 0x56BC75E2D631000000 PUSH1 0x80 DUP3 ADD MSTORE PUSH9 0xAD78EBC5AC62000000 PUSH1 0xA0 DUP3 ADD MSTORE PUSH10 0x15AF1D78B58C4000000 PUSH1 0xC0 DUP3 ADD MSTORE PUSH10 0x2B5E3AF16B188000000 PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x14 SLOAD PUSH1 0x8 PUSH1 0x14 SSTORE DUP1 PUSH1 0x8 LT PUSH2 0x3CB JUMPI JUMPDEST POP PUSH1 0x14 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH0 JUMPDEST PUSH1 0x8 DUP2 LT PUSH2 0x3AE JUMPI PUSH2 0x27C PUSH2 0x51F JUMP JUMPDEST PUSH1 0x3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0xC0 DUP3 ADD MSTORE PUSH0 JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x396 JUMPI PUSH2 0x2BC PUSH2 0x53E JUMP JUMPDEST PUSH1 0x4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0xE0 DUP3 ADD MSTORE PUSH0 JUMPDEST PUSH1 0x8 DUP2 LT PUSH2 0x37E JUMPI PUSH2 0x303 PUSH2 0x53E JUMP JUMPDEST PUSH0 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 DUP3 ADD MSTORE PUSH0 JUMPDEST PUSH1 0x8 DUP2 LT PUSH2 0x366 JUMPI PUSH1 0x1 PUSH1 0x36 SSTORE PUSH1 0x1 PUSH1 0x37 SSTORE PUSH0 PUSH1 0x38 SSTORE PUSH0 PUSH1 0x39 SSTORE PUSH0 PUSH1 0x3A SSTORE PUSH1 0x40 MLOAD PUSH2 0x622 SWAP1 DUP2 PUSH2 0x575 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH1 0xFF DUP5 MLOAD AND SWAP4 ADD SWAP3 DUP2 PUSH1 0x24 ADD SSTORE ADD PUSH2 0x339 JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH1 0xFF DUP5 MLOAD AND SWAP4 ADD SWAP3 DUP2 PUSH1 0x1C ADD SSTORE ADD PUSH2 0x2F3 JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH1 0xFF DUP5 MLOAD AND SWAP4 ADD SWAP3 DUP2 PUSH1 0x15 ADD SSTORE ADD PUSH2 0x2AC JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND DUP2 DUP5 ADD SSTORE PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x26C JUMP JUMPDEST PUSH1 0x14 PUSH0 MSTORE PUSH2 0x41B SWAP1 PUSH32 0xCE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4EC ADD PUSH32 0xCE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4F4 PUSH2 0x55E JUMP JUMPDEST DUP2 PUSH2 0x260 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND DUP2 DUP5 ADD SSTORE PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1C8 JUMP JUMPDEST PUSH1 0x13 PUSH0 MSTORE PUSH2 0x48E SWAP1 PUSH32 0x66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A090 ADD PUSH32 0x66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A097 PUSH2 0x55E JUMP JUMPDEST DUP2 PUSH2 0x1BC JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND DUP2 DUP5 ADD SSTORE PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x131 JUMP JUMPDEST PUSH1 0xB PUSH0 MSTORE PUSH2 0x501 SWAP1 PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 ADD PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DC8 PUSH2 0x55E JUMP JUMPDEST PUSH0 PUSH2 0x125 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0xE0 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x507 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x100 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x507 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x569 JUMPI POP POP JUMP JUMPDEST PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x55E JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1C234A8 EQ PUSH2 0x5D2 JUMPI POP DUP1 PUSH4 0x2132D204 EQ PUSH2 0x5A6 JUMPI DUP1 PUSH4 0x2350268F EQ PUSH2 0x54C JUMPI DUP1 PUSH4 0x2A891534 EQ PUSH2 0x52F JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0x507 JUMPI DUP1 PUSH4 0x3080B5BC EQ PUSH2 0x4EA JUMPI DUP1 PUSH4 0x32BC298C EQ PUSH2 0x4CD JUMPI DUP1 PUSH4 0x32FCD966 EQ PUSH2 0x4AB JUMPI DUP1 PUSH4 0x375B43B4 EQ PUSH2 0x490 JUMPI DUP1 PUSH4 0x39AB3603 EQ PUSH2 0x436 JUMPI DUP1 PUSH4 0x58C7D352 EQ PUSH2 0x41B JUMPI DUP1 PUSH4 0x76F5F700 EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0x78F6AD6D EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0x7CDC65F2 EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0x956A3228 EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0xAE4708DC EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0xBFF1F9E1 EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0xC216212A EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0xC8DF2908 EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0xC9ED0708 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0xCA8E9121 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0xD0A2FD79 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0xE898FC38 EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0xE9E34A16 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xEBE0FF15 EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0xEC597E6F EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0xF5D74D93 EQ PUSH2 0x171 JUMPI PUSH4 0xFDDC806F EQ PUSH2 0x150 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x20 PUSH1 0x38 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH9 0x3635C9ADC5DEA00000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x20 PUSH1 0x39 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x16D JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1C ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x20 PUSH1 0x36 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x20 PUSH1 0x37 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH10 0x21E19E0C9BAB2400000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x16D JUMPI PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x302 JUMPI PUSH1 0xB PUSH0 MSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x13 SLOAD DUP2 LT ISZERO PUSH2 0x16D JUMPI PUSH1 0x13 SLOAD DUP2 LT ISZERO PUSH2 0x302 JUMPI PUSH1 0x13 PUSH0 MSTORE PUSH32 0x66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A090 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x16D JUMPI PUSH1 0x20 SWAP1 PUSH1 0x24 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x20 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x93A80 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xA DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x16D JUMPI PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x302 JUMPI PUSH1 0x7 PUSH0 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xF DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH8 0xDE0B6B3A7640000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x15180 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x20 PUSH1 0x3A SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x278D00 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x14 SLOAD DUP2 LT ISZERO PUSH2 0x16D JUMPI PUSH1 0x14 SLOAD DUP2 LT ISZERO PUSH2 0x302 JUMPI PUSH1 0x14 PUSH0 MSTORE PUSH32 0xCE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4EC ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x16D JUMPI PUSH1 0x20 SWAP1 PUSH1 0x15 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI DUP1 PUSH2 0x2710 PUSH1 0x20 SWAP3 MSTORE RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR 0xB7 PUSH2 0xB140 SWAP5 0xDF BYTE 0x2C 0xDC PUSH3 0x7EDF54 0xA9 BASEFEE PUSH32 0x516E189E6CDBBBD06803AC85C6201664736F6C634300081E0033000000000000 ",
							"sourceMap": "292:12470:8:-:0;;;;;;1716:1:3;1821:22;292:12470:8;;;;;;-1:-1:-1;;;;;292:12470:8;;;;;;;;;;1324:9;292:12470;;1356:9;1313:515;;;292:12470;1388:9;292:12470;1313:515;;292:12470;1420:10;1313:515;;;292:12470;1453:10;1313:515;;;292:12470;1486:10;1313:515;;;292:12470;1519:10;1313:515;;;292:12470;1552:11;1313:515;;;292:12470;1586:11;1313:515;;;292:12470;1620:11;1313:515;;;292:12470;1654:12;1313:515;;;292:12470;1689:12;1313:515;;;292:12470;1724:12;1313:515;;;292:12470;1759:13;1313:515;;;292:12470;1795:13;1313:515;;;292:12470;1313:515;292:12470;1313:515;;292:12470;;1313:515;292:12470;;;-1:-1:-1;292:12470:8;1313:515;1821:22:3;292:12470:8;1313:515;1821:22:3;292:12470:8;;1821:22:3;292:12470:8;1313:515;292:12470;;;;;;:::i;:::-;5058:5;292:12470;;5065:6;1313:515;5057:64;;292:12470;5073:7;292:12470;5057:64;;292:12470;5082:7;1313:515;5057:64;;292:12470;5091:8;1313:515;5057:64;;292:12470;5101:8;1313:515;5057:64;;292:12470;5111:9;1313:515;5057:64;;292:12470;5057:64;292:12470;5057:64;;292:12470;;5057:64;292:12470;;;;;5057:64;1821:22:3;292:12470:8;1313:515;1821:22:3;292:12470:8;;1821:22:3;292:12470:8;5057:64;292:12470;;;;;;:::i;:::-;1420:10;292:12470;;1453:10;1313:515;5163:70;;292:12470;1486:10;292:12470;5163:70;;292:12470;1519:10;1313:515;5163:70;;292:12470;1552:11;1313:515;5163:70;;292:12470;1586:11;1313:515;5163:70;;292:12470;1620:11;1313:515;5163:70;;292:12470;1654:12;1313:515;5163:70;;292:12470;5163:70;292:12470;5163:70;;292:12470;;5163:70;292:12470;;;;;5163:70;1821:22:3;292:12470:8;1313:515;1821:22:3;292:12470:8;;1821:22:3;292:12470:8;5163:70;292:12470;;;;;;:::i;:::-;5274:1;292:12470;;;1313:515;5273:24;;292:12470;5057:64;292:12470;5273:24;;292:12470;5283:1;1313:515;5273:24;;292:12470;1313:515;;5273:24;;292:12470;5290:2;1313:515;5273:24;;292:12470;1313:515;;5273:24;;292:12470;1821:22:3;292:12470:8;5057:64;292:12470;;;;;;:::i;:::-;5344:1;292:12470;;;1313:515;5343:25;;292:12470;5350:1;292:12470;5343:25;;292:12470;5057:64;1313:515;5343:25;;292:12470;5163:70;1313:515;5343:25;;292:12470;5283:1;1313:515;5343:25;;292:12470;5362:2;1313:515;5343:25;;292:12470;1313:515;;5343:25;;292:12470;1821:22:3;292:12470:8;5163:70;292:12470;;;;;;:::i;:::-;1821:22:3;292:12470:8;;1716:1:3;1313:515:8;5413:23;;292:12470;1716:1:3;292:12470:8;5413:23;;292:12470;1716:1:3;1313:515:8;5413:23;;292:12470;1716:1:3;1313:515:8;5413:23;;292:12470;1716:1:3;1313:515:8;5413:23;;292:12470;1716:1:3;1313:515:8;5413:23;;292:12470;1716:1:3;1313:515:8;5413:23;;292:12470;1821:22:3;292:12470:8;5163:70;292:12470;;;;1716:1:3;7098::8;292:12470;1716:1:3;7144::8;292:12470;1821:22:3;7189:1:8;292:12470;1821:22:3;7235:1:8;292:12470;1821:22:3;7275:1:8;292:12470;;;;;;;;;;;1716:1:3;292:12470:8;1313:515;292:12470;;;;;;;;5413:23;292:12470;;;;;;1716:1:3;292:12470:8;1313:515;292:12470;;;;;;;;5343:25;292:12470;;;;;;1716:1:3;292:12470:8;1313:515;292:12470;;;;;;;;5273:24;292:12470;;;;;;;;-1:-1:-1;;;;;292:12470:8;;;;;1313:515;292:12470;;;;1716:1:3;292:12470:8;;;;5163:70;1821:22:3;292:12470:8;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;292:12470:8;;;;;1313:515;292:12470;;;;1716:1:3;292:12470:8;;;;5057:64;1821:22:3;292:12470:8;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;292:12470:8;;;;;1313:515;292:12470;;;;1716:1:3;292:12470:8;;;;1313:515;1821:22:3;292:12470:8;;;;;;;:::i;:::-;;;;;;;;1821:22:3;292:12470:8;;;;;1821:22:3;292:12470:8;;;;;;;;;;;;-1:-1:-1;;;;;292:12470:8;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;292:12470:8;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080806040526004361015610012575f80fd5b5f3560e01c90816301c234a8146105d2575080632132d204146105a65780632350268f1461054c5780632a8915341461052f5780632f48ab7d146105075780633080b5bc146104ea57806332bc298c146104cd57806332fcd966146104ab578063375b43b41461049057806339ab36031461043657806358c7d3521461041b57806376f5f700146103fe57806378f6ad6d146103e15780637cdc65f2146103b9578063956a32281461038d578063ae4708dc14610333578063bff1f9e114610316578063c216212a146102a8578063c8df290814610284578063c9ed070814610267578063ca8e91211461024a578063d0a2fd791461021e578063e898fc3814610201578063e9e34a16146101d9578063ebe0ff15146101b6578063ec597e6f14610199578063f5d74d93146101715763fddc806f14610150575f80fd5b3461016d575f36600319011261016d576020603854604051908152f35b5f80fd5b3461016d575f36600319011261016d576004546040516001600160a01b039091168152602090f35b3461016d575f36600319011261016d576020600554604051908152f35b3461016d575f36600319011261016d576020604051683635c9adc5dea000008152f35b3461016d575f36600319011261016d576003546040516001600160a01b039091168152602090f35b3461016d575f36600319011261016d576020603954604051908152f35b3461016d57602036600319011261016d57600435600881101561016d57602090601c0154604051908152f35b3461016d575f36600319011261016d576020603654604051908152f35b3461016d575f36600319011261016d576020603754604051908152f35b3461016d575f36600319011261016d57602060405169021e19e0c9bab24000008152f35b3461016d57602036600319011261016d57600435600b5481101561016d57600b5481101561030257600b5f527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90154604051908152602090f35b634e487b7160e01b5f52603260045260245ffd5b3461016d575f36600319011261016d576020600654604051908152f35b3461016d57602036600319011261016d5760043560135481101561016d576013548110156103025760135f527f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a0900154604051908152602090f35b3461016d57602036600319011261016d57600435600881101561016d5760209060240154604051908152f35b3461016d575f36600319011261016d576002546040516001600160a01b039091168152602090f35b3461016d575f36600319011261016d576020600954604051908152f35b3461016d575f36600319011261016d57602060405162093a808152f35b3461016d575f36600319011261016d576020604051600a8152f35b3461016d57602036600319011261016d5760043560075481101561016d576007548110156103025760075f527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880154604051908152602090f35b3461016d575f36600319011261016d576020604051600f8152f35b3461016d575f36600319011261016d576020604051670de0b6b3a76400008152f35b3461016d575f36600319011261016d576020604051620151808152f35b3461016d575f36600319011261016d576020603a54604051908152f35b3461016d575f36600319011261016d576001546040516001600160a01b039091168152602090f35b3461016d575f36600319011261016d57602060405162278d008152f35b3461016d57602036600319011261016d5760043560145481101561016d576014548110156103025760145f527fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ec0154604051908152602090f35b3461016d57602036600319011261016d57600435600781101561016d5760209060150154604051908152f35b3461016d575f36600319011261016d578061271060209252f3fea26469706673582212201cb761b14094df1a2cdc627edf54a9487f516e189e6cdbbbd06803ac85c6201664736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1C234A8 EQ PUSH2 0x5D2 JUMPI POP DUP1 PUSH4 0x2132D204 EQ PUSH2 0x5A6 JUMPI DUP1 PUSH4 0x2350268F EQ PUSH2 0x54C JUMPI DUP1 PUSH4 0x2A891534 EQ PUSH2 0x52F JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0x507 JUMPI DUP1 PUSH4 0x3080B5BC EQ PUSH2 0x4EA JUMPI DUP1 PUSH4 0x32BC298C EQ PUSH2 0x4CD JUMPI DUP1 PUSH4 0x32FCD966 EQ PUSH2 0x4AB JUMPI DUP1 PUSH4 0x375B43B4 EQ PUSH2 0x490 JUMPI DUP1 PUSH4 0x39AB3603 EQ PUSH2 0x436 JUMPI DUP1 PUSH4 0x58C7D352 EQ PUSH2 0x41B JUMPI DUP1 PUSH4 0x76F5F700 EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0x78F6AD6D EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0x7CDC65F2 EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0x956A3228 EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0xAE4708DC EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0xBFF1F9E1 EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0xC216212A EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0xC8DF2908 EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0xC9ED0708 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0xCA8E9121 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0xD0A2FD79 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0xE898FC38 EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0xE9E34A16 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xEBE0FF15 EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0xEC597E6F EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0xF5D74D93 EQ PUSH2 0x171 JUMPI PUSH4 0xFDDC806F EQ PUSH2 0x150 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x20 PUSH1 0x38 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH9 0x3635C9ADC5DEA00000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x20 PUSH1 0x39 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x16D JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1C ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x20 PUSH1 0x36 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x20 PUSH1 0x37 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH10 0x21E19E0C9BAB2400000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x16D JUMPI PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x302 JUMPI PUSH1 0xB PUSH0 MSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x13 SLOAD DUP2 LT ISZERO PUSH2 0x16D JUMPI PUSH1 0x13 SLOAD DUP2 LT ISZERO PUSH2 0x302 JUMPI PUSH1 0x13 PUSH0 MSTORE PUSH32 0x66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A090 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x16D JUMPI PUSH1 0x20 SWAP1 PUSH1 0x24 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x20 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x93A80 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xA DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x16D JUMPI PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x302 JUMPI PUSH1 0x7 PUSH0 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xF DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH8 0xDE0B6B3A7640000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x15180 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x20 PUSH1 0x3A SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x278D00 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x14 SLOAD DUP2 LT ISZERO PUSH2 0x16D JUMPI PUSH1 0x14 SLOAD DUP2 LT ISZERO PUSH2 0x302 JUMPI PUSH1 0x14 PUSH0 MSTORE PUSH32 0xCE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4EC ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x16D JUMPI PUSH1 0x20 SWAP1 PUSH1 0x15 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16D JUMPI DUP1 PUSH2 0x2710 PUSH1 0x20 SWAP3 MSTORE RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR 0xB7 PUSH2 0xB140 SWAP5 0xDF BYTE 0x2C 0xDC PUSH3 0x7EDF54 0xA9 BASEFEE PUSH32 0x516E189E6CDBBBD06803AC85C6201664736F6C634300081E0033000000000000 ",
							"sourceMap": "292:12470:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;292:12470:8;;;;;7152:38;292:12470;;;;;;;;;;;;;;;;;-1:-1:-1;;292:12470:8;;;;;;;;-1:-1:-1;;;;;292:12470:8;;;;;;;;;;;;;;-1:-1:-1;;292:12470:8;;;;;534:24;292:12470;;;;;;;;;;;;;-1:-1:-1;;292:12470:8;;;;;;;6996:7;292:12470;;;;;;;;;-1:-1:-1;;292:12470:8;;;;460:30;292:12470;;;-1:-1:-1;;;;;292:12470:8;;;;;;;;;;;;;;-1:-1:-1;;292:12470:8;;;;;7197:39;292:12470;;;;;;;;;;;;;-1:-1:-1;;292:12470:8;;;;;;;5304:64;;;;;292:12470;;5304:64;292:12470;;;;;;;;;;;;;;-1:-1:-1;;292:12470:8;;;;;7065:34;292:12470;;;;;;;;;;;;;-1:-1:-1;;292:12470:8;;;;;7110:35;292:12470;;;;;;;;;;;;;-1:-1:-1;;292:12470:8;;;;;;;7048:8;292:12470;;;;;;;;;-1:-1:-1;;292:12470:8;;;;;;1288:540;292:12470;1288:540;;;;;;292:12470;;;;;;1288:540;292:12470;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;292:12470:8;;;;;565:22;292:12470;;;;;;;;;;;;;-1:-1:-1;;292:12470:8;;;;;;5028:93;292:12470;5028:93;;;;;;292:12470;;;;;;5028:93;292:12470;;;;;;;;;;;;;;;;;;;-1:-1:-1;;292:12470:8;;;;;;;5375:61;;;;;292:12470;;5375:61;292:12470;;;;;;;;;;;;;;-1:-1:-1;;292:12470:8;;;;422:28;292:12470;;;-1:-1:-1;;;;;292:12470:8;;;;;;;;;;;;;;-1:-1:-1;;292:12470:8;;;;;1131:34;292:12470;;;;;;;;;;;;;-1:-1:-1;;292:12470:8;;;;;;;6894:6;292:12470;;;;;;;;;-1:-1:-1;;292:12470:8;;;;;;;848:2;292:12470;;;;;;;;;-1:-1:-1;;292:12470:8;;;;;;864:31;292:12470;864:31;;;;;;292:12470;;;;;;864:31;292:12470;;;;;;;;;;;;;;;;;;;-1:-1:-1;;292:12470:8;;;;;;;789:2;292:12470;;;;;;;;;-1:-1:-1;;292:12470:8;;;;;;;1120:4;292:12470;;;;;;;;;-1:-1:-1;;292:12470:8;;;;;;;731:6;292:12470;;;;;;;;;-1:-1:-1;;292:12470:8;;;;;7243:33;292:12470;;;;;;;;;;;;;-1:-1:-1;;292:12470:8;;;;;;;;-1:-1:-1;;;;;292:12470:8;;;;;;;;;;;;;;-1:-1:-1;;292:12470:8;;;;;;;6945:7;292:12470;;;;;;;;;-1:-1:-1;;292:12470:8;;;;;;5128:105;292:12470;5128:105;;;;;;292:12470;;;;;;5128:105;292:12470;;;;;;;;;;;;;;;;;;;-1:-1:-1;;292:12470:8;;;;;;;5240:57;;;;;292:12470;;5240:57;292:12470;;;;;;;;;;;;;;-1:-1:-1;;292:12470:8;;;;;683:5;292:12470;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "314000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ACC_PRECISION()": "307",
								"MONTH_DURATION()": "219",
								"PERCENTS_DIVIDER()": "148",
								"ROI_CAP_DIVIDER()": "373",
								"ROI_CAP_MULTIPLIER()": "329",
								"TIME_STEP()": "285",
								"WEEK_DURATION()": "395",
								"WeeklyCapping()": "681",
								"WeeklyTotalReward()": "2366",
								"communityAccPerUser()": "2520",
								"creatorWallet()": "2566",
								"currentMonthlyRound()": "2674",
								"currentMonthlyStartTime()": "2740",
								"currentWeeklyRound()": "2696",
								"currentWeeklyStartTime()": "2847",
								"defaultRefId()": "2806",
								"glbBoosterPackages(uint256)": "6571",
								"minLevelForGlbBooster(uint256)": "2756",
								"minLevelForPool(uint256)": "2316",
								"minPoolForGlbBooster(uint256)": "2602",
								"monthlyCapping()": "549",
								"packages(uint256)": "6901",
								"poolPackages(uint256)": "6857",
								"registeredUserIds(uint256)": "6725",
								"systemMaintance()": "2786",
								"teamDevelopment()": "2852",
								"totalUsers()": "2608",
								"usdt()": "2368"
							},
							"internal": {
								"_distributeIncome(uint256,uint256,uint256,uint256,uint256)": "infinite",
								"_sendToCreator(uint256)": "infinite",
								"_tryWeeklyContestQualify(uint256,uint256)": "infinite",
								"_weeklyContestQualifier(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH",
									"source": 8,
									"value": "1E0"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1324,
									"end": 1333,
									"name": "PUSH",
									"source": 8,
									"value": "D02AB486CEDC0000"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1356,
									"end": 1365,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C40000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1388,
									"end": 1397,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B1880000"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1420,
									"end": 1430,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D63100000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1453,
									"end": 1463,
									"name": "PUSH",
									"source": 8,
									"value": "AD78EBC5AC6200000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1486,
									"end": 1496,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C400000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1519,
									"end": 1529,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B18800000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1552,
									"end": 1563,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D631000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1586,
									"end": 1597,
									"name": "PUSH",
									"source": 8,
									"value": "AD78EBC5AC62000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1620,
									"end": 1631,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C4000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1654,
									"end": 1666,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B188000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "140"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1689,
									"end": 1701,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D6310000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1724,
									"end": 1736,
									"name": "PUSH",
									"source": 8,
									"value": "AD78EBC5AC620000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "180"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1759,
									"end": 1772,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C40000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "1A0"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1795,
									"end": 1808,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B1880000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "1C0"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "F"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "F"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "tag",
									"source": -1,
									"value": "9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "tag",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "F"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 12762,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "tag",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5058,
									"end": 5063,
									"name": "PUSH",
									"source": 8,
									"value": "410D586A20A4C0000"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5065,
									"end": 5071,
									"name": "PUSH",
									"source": 8,
									"value": "1043561A8829300000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5073,
									"end": 5080,
									"name": "PUSH",
									"source": 8,
									"value": "410D586A20A4C00000"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5082,
									"end": 5089,
									"name": "PUSH",
									"source": 8,
									"value": "1043561A88293000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5091,
									"end": 5099,
									"name": "PUSH",
									"source": 8,
									"value": "410D586A20A4C000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5101,
									"end": 5109,
									"name": "PUSH",
									"source": 8,
									"value": "1043561A882930000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5111,
									"end": 5120,
									"name": "PUSH",
									"source": 8,
									"value": "410D586A20A4C0000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "PUSH",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "PUSH",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "tag",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "PUSH",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "tag",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 292,
									"end": 12762,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "tag",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1420,
									"end": 1430,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D63100000"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1453,
									"end": 1463,
									"name": "PUSH",
									"source": 8,
									"value": "AD78EBC5AC6200000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1486,
									"end": 1496,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C400000"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1519,
									"end": 1529,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B18800000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1552,
									"end": 1563,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D631000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1586,
									"end": 1597,
									"name": "PUSH",
									"source": 8,
									"value": "AD78EBC5AC62000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1620,
									"end": 1631,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C4000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1654,
									"end": 1666,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B188000000"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "PUSH",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "PUSH",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "PUSH",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 12762,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5274,
									"end": 5275,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5283,
									"end": 5284,
									"name": "PUSH",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5290,
									"end": 5292,
									"name": "PUSH",
									"source": 8,
									"value": "D"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "F"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 292,
									"end": 12762,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "tag",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5344,
									"end": 5345,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5350,
									"end": 5351,
									"name": "PUSH",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5283,
									"end": 5284,
									"name": "PUSH",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5362,
									"end": 5364,
									"name": "PUSH",
									"source": 8,
									"value": "A"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "tag",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 292,
									"end": 12762,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "tag",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 7098,
									"end": 7099,
									"name": "PUSH",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 7144,
									"end": 7145,
									"name": "PUSH",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7189,
									"end": 7190,
									"name": "PUSH",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7235,
									"end": 7236,
									"name": "PUSH",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7275,
									"end": 7276,
									"name": "PUSH",
									"source": 8,
									"value": "3A"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "RETURN",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "tag",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5413,
									"end": 5436,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5343,
									"end": 5368,
									"name": "PUSH",
									"source": 8,
									"value": "1C"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5273,
									"end": 5297,
									"name": "PUSH",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "50"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "tag",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5233,
									"name": "PUSH",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH",
									"source": 8,
									"value": "CE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4EC"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH",
									"source": 8,
									"value": "CE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4F4"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 292,
									"end": 12762,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "tag",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "tag",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "50"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "tag",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "PUSH",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH",
									"source": 8,
									"value": "66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A090"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH",
									"source": 8,
									"value": "66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A097"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 292,
									"end": 12762,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "tag",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "50"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "tag",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1313,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH",
									"source": 8,
									"value": "175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH",
									"source": 8,
									"value": "175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DC8"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 292,
									"end": 12762,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "tag",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "tag",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "tag",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 292,
									"end": 12762,
									"name": "JUMP",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201cb761b14094df1a2cdc627edf54a9487f516e189e6cdbbbd06803ac85c6201664736f6c634300081e0033",
									".code": [
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "1C234A8"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "2132D204"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "2350268F"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "2A891534"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "2F48AB7D"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "3080B5BC"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "32BC298C"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "32FCD966"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "375B43B4"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "39AB3603"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "58C7D352"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "76F5F700"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "78F6AD6D"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "7CDC65F2"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "956A3228"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "AE4708DC"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "BFF1F9E1"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "C216212A"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "C8DF2908"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "C9ED0708"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "CA8E9121"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "D0A2FD79"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "E898FC38"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "E9E34A16"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "EBE0FF15"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "EC597E6F"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "F5D74D93"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "FDDC806F"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7152,
											"end": 7190,
											"name": "PUSH",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 534,
											"end": 558,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6996,
											"end": 7003,
											"name": "PUSH",
											"source": 8,
											"value": "3635C9ADC5DEA00000"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 460,
											"end": 490,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7197,
											"end": 7236,
											"name": "PUSH",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 5304,
											"end": 5368,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5304,
											"end": 5368,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5304,
											"end": 5368,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5304,
											"end": 5368,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 5304,
											"end": 5368,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5304,
											"end": 5368,
											"name": "PUSH",
											"source": 8,
											"value": "1C"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7065,
											"end": 7099,
											"name": "PUSH",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7110,
											"end": 7145,
											"name": "PUSH",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7048,
											"end": 7056,
											"name": "PUSH",
											"source": 8,
											"value": "21E19E0C9BAB2400000"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1288,
											"end": 1828,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1288,
											"end": 1828,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1288,
											"end": 1828,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1288,
											"end": 1828,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1288,
											"end": 1828,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 1288,
											"end": 1828,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1288,
											"end": 1828,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1288,
											"end": 1828,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5028,
											"end": 5121,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5028,
											"end": 5121,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5028,
											"end": 5121,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5028,
											"end": 5121,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5028,
											"end": 5121,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 5028,
											"end": 5121,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5028,
											"end": 5121,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5028,
											"end": 5121,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A090"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 5375,
											"end": 5436,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5375,
											"end": 5436,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5375,
											"end": 5436,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5375,
											"end": 5436,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 5375,
											"end": 5436,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5375,
											"end": 5436,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 422,
											"end": 450,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1131,
											"end": 1165,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6894,
											"end": 6900,
											"name": "PUSH",
											"source": 8,
											"value": "93A80"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 848,
											"end": 850,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 864,
											"end": 895,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 864,
											"end": 895,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 864,
											"end": 895,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 864,
											"end": 895,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 864,
											"end": 895,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 864,
											"end": 895,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 864,
											"end": 895,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 864,
											"end": 895,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "A66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 789,
											"end": 791,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1120,
											"end": 1124,
											"name": "PUSH",
											"source": 8,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 731,
											"end": 737,
											"name": "PUSH",
											"source": 8,
											"value": "15180"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7243,
											"end": 7276,
											"name": "PUSH",
											"source": 8,
											"value": "3A"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6945,
											"end": 6952,
											"name": "PUSH",
											"source": 8,
											"value": "278D00"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5128,
											"end": 5233,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5128,
											"end": 5233,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5128,
											"end": 5233,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5128,
											"end": 5233,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5128,
											"end": 5233,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 5128,
											"end": 5233,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5128,
											"end": 5233,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5128,
											"end": 5233,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "CE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4EC"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 5240,
											"end": 5297,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5240,
											"end": 5297,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5240,
											"end": 5297,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5240,
											"end": 5297,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 5240,
											"end": 5297,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5240,
											"end": 5297,
											"name": "PUSH",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 683,
											"end": 688,
											"name": "PUSH",
											"source": 8,
											"value": "2710"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 12762,
											"name": "RETURN",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/modules/InfinityPool.sol",
								"contracts/modules/Storage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ACC_PRECISION()": "32fcd966",
							"MONTH_DURATION()": "2a891534",
							"PERCENTS_DIVIDER()": "01c234a8",
							"ROI_CAP_DIVIDER()": "58c7d352",
							"ROI_CAP_MULTIPLIER()": "375b43b4",
							"TIME_STEP()": "32bc298c",
							"WEEK_DURATION()": "76f5f700",
							"WeeklyCapping()": "ebe0ff15",
							"WeeklyTotalReward()": "3080b5bc",
							"communityAccPerUser()": "78f6ad6d",
							"creatorWallet()": "7cdc65f2",
							"currentMonthlyRound()": "c9ed0708",
							"currentMonthlyStartTime()": "e898fc38",
							"currentWeeklyRound()": "ca8e9121",
							"currentWeeklyStartTime()": "fddc806f",
							"defaultRefId()": "ec597e6f",
							"glbBoosterPackages(uint256)": "2350268f",
							"minLevelForGlbBooster(uint256)": "d0a2fd79",
							"minLevelForPool(uint256)": "2132d204",
							"minPoolForGlbBooster(uint256)": "956a3228",
							"monthlyCapping()": "c8df2908",
							"packages(uint256)": "c216212a",
							"poolPackages(uint256)": "ae4708dc",
							"registeredUserIds(uint256)": "39ab3603",
							"systemMaintance()": "e9e34a16",
							"teamDevelopment()": "f5d74d93",
							"totalUsers()": "bff1f9e1",
							"usdt()": "2f48ab7d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usersCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUser\",\"type\":\"uint256\"}],\"name\":\"CommunityBonusDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"packageLevel\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"incomeType\",\"type\":\"uint256\"}],\"name\":\"IncomeDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromUserId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"LotteryReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"uplineId\",\"type\":\"uint256\"}],\"name\":\"Registration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"level\",\"type\":\"string\"}],\"name\":\"RewardSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"packageLevel\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"depositType\",\"type\":\"string\"}],\"name\":\"Upgrade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"matrixId\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"userId\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"parentId\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"position\",\"type\":\"uint8\"}],\"name\":\"UserJoined\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalUsers\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUserReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"distributedAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"leftoverReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"WeeklyClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"joinTime\",\"type\":\"uint256\"}],\"name\":\"WeeklyContestQualified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUserReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimTime\",\"type\":\"uint256\"}],\"name\":\"WeeklyRewardClaim\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ACC_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MONTH_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERCENTS_DIVIDER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROI_CAP_DIVIDER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROI_CAP_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TIME_STEP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WEEK_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WeeklyCapping\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WeeklyTotalReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"communityAccPerUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creatorWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentMonthlyRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentMonthlyStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentWeeklyRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentWeeklyStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultRefId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"glbBoosterPackages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"minLevelForGlbBooster\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"minLevelForPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"minPoolForGlbBooster\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"monthlyCapping\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"packages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolPackages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"registeredUserIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"systemMaintance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamDevelopment\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdt\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/Storage.sol\":\"Storage\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/modules/Storage.sol\":{\"keccak256\":\"0xb55ab9fa20841a265b47f8425ca43ec36ddaea2f616e6a7929246d944c6b9fea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81db600f5b210f60489338003a857c701d5a41e6ca5d992741d406072380e001\",\"dweb:/ipfs/QmXbjutnPKn2Yuhwpw4rFNDzGv5nRJBCuKS7LDYzq69tHs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 100,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 1919,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "usdt",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)232"
							},
							{
								"astId": 1921,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "creatorWallet",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 1923,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "systemMaintance",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 1925,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "teamDevelopment",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 1927,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "defaultRefId",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1929,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "totalUsers",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1947,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "registeredUserIds",
								"offset": 0,
								"slot": "7",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 1949,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "nonce",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1954,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "communityAccPerUser",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1958,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "communityDebt",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 2007,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "packages",
								"offset": 0,
								"slot": "11",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 2093,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "addressToId",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 2098,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "users",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_uint256,t_struct(User)2051_storage)"
							},
							{
								"astId": 2103,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "userIncomes",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_uint256,t_struct(UserIncome)2078_storage)"
							},
							{
								"astId": 2109,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "incomeHistory",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_uint256,t_array(t_struct(Income)2089_storage)dyn_storage)"
							},
							{
								"astId": 2116,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "teams",
								"offset": 0,
								"slot": "16",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))"
							},
							{
								"astId": 2120,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "matrixDirect",
								"offset": 0,
								"slot": "17",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 2125,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "directReferrals",
								"offset": 0,
								"slot": "18",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 2208,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "poolPackages",
								"offset": 0,
								"slot": "19",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 2220,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "glbBoosterPackages",
								"offset": 0,
								"slot": "20",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 2232,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "minLevelForPool",
								"offset": 0,
								"slot": "21",
								"type": "t_array(t_uint256)7_storage"
							},
							{
								"astId": 2245,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "minLevelForGlbBooster",
								"offset": 0,
								"slot": "28",
								"type": "t_array(t_uint256)8_storage"
							},
							{
								"astId": 2258,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "minPoolForGlbBooster",
								"offset": 0,
								"slot": "36",
								"type": "t_array(t_uint256)8_storage"
							},
							{
								"astId": 2292,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "userPooltopup",
								"offset": 0,
								"slot": "44",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserPoolTopup)2274_storage))"
							},
							{
								"astId": 2299,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "userPooldtl",
								"offset": 0,
								"slot": "45",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserPool)2269_storage))"
							},
							{
								"astId": 2306,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "userChildren",
								"offset": 0,
								"slot": "46",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))"
							},
							{
								"astId": 2313,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "userIdPerPool",
								"offset": 0,
								"slot": "47",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))"
							},
							{
								"astId": 2318,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "poolUsers",
								"offset": 0,
								"slot": "48",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 2324,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "userHasPool",
								"offset": 0,
								"slot": "49",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))"
							},
							{
								"astId": 2331,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "userBoosterdtl",
								"offset": 0,
								"slot": "50",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserBooster)2285_storage))"
							},
							{
								"astId": 2338,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "userBoosterChildren",
								"offset": 0,
								"slot": "51",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))"
							},
							{
								"astId": 2343,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "boosterUsers",
								"offset": 0,
								"slot": "52",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 2349,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "userHasbooster",
								"offset": 0,
								"slot": "53",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))"
							},
							{
								"astId": 2364,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "currentWeeklyRound",
								"offset": 0,
								"slot": "54",
								"type": "t_uint256"
							},
							{
								"astId": 2367,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "currentMonthlyRound",
								"offset": 0,
								"slot": "55",
								"type": "t_uint256"
							},
							{
								"astId": 2370,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "currentWeeklyStartTime",
								"offset": 0,
								"slot": "56",
								"type": "t_uint256"
							},
							{
								"astId": 2373,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "currentMonthlyStartTime",
								"offset": 0,
								"slot": "57",
								"type": "t_uint256"
							},
							{
								"astId": 2376,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "WeeklyTotalReward",
								"offset": 0,
								"slot": "58",
								"type": "t_uint256"
							},
							{
								"astId": 2413,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "weeklyContestdtl",
								"offset": 0,
								"slot": "59",
								"type": "t_mapping(t_uint256,t_struct(WeeklyContest)2395_storage)"
							},
							{
								"astId": 2418,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "weeklyQualifiedUsers",
								"offset": 0,
								"slot": "60",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 2425,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "weeklyUserdtl",
								"offset": 0,
								"slot": "61",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(weeklyUser)2408_storage))"
							},
							{
								"astId": 2432,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "weeklyUserDirects",
								"offset": 0,
								"slot": "62",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Deposit)2016_storage)dyn_storage": {
								"base": "t_struct(Deposit)2016_storage",
								"encoding": "dynamic_array",
								"label": "struct Storage.Deposit[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(Income)2089_storage)dyn_storage": {
								"base": "t_struct(Income)2089_storage",
								"encoding": "dynamic_array",
								"label": "struct Storage.Income[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)7_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[7]",
								"numberOfBytes": "224"
							},
							"t_array(t_uint256)8_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[8]",
								"numberOfBytes": "256"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)232": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_array(t_struct(Income)2089_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.Income[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(Income)2089_storage)dyn_storage"
							},
							"t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256[])",
								"numberOfBytes": "32",
								"value": "t_array(t_uint256)dyn_storage"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => uint256[]))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_bool)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserBooster)2285_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => struct Storage.UserBooster))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(UserBooster)2285_storage)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserPool)2269_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => struct Storage.UserPool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(UserPool)2269_storage)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserPoolTopup)2274_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => struct Storage.UserPoolTopup))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(UserPoolTopup)2274_storage)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(weeklyUser)2408_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => struct Storage.weeklyUser))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(weeklyUser)2408_storage)"
							},
							"t_mapping(t_uint256,t_struct(User)2051_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.User)",
								"numberOfBytes": "32",
								"value": "t_struct(User)2051_storage"
							},
							"t_mapping(t_uint256,t_struct(UserBooster)2285_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.UserBooster)",
								"numberOfBytes": "32",
								"value": "t_struct(UserBooster)2285_storage"
							},
							"t_mapping(t_uint256,t_struct(UserIncome)2078_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.UserIncome)",
								"numberOfBytes": "32",
								"value": "t_struct(UserIncome)2078_storage"
							},
							"t_mapping(t_uint256,t_struct(UserPool)2269_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.UserPool)",
								"numberOfBytes": "32",
								"value": "t_struct(UserPool)2269_storage"
							},
							"t_mapping(t_uint256,t_struct(UserPoolTopup)2274_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.UserPoolTopup)",
								"numberOfBytes": "32",
								"value": "t_struct(UserPoolTopup)2274_storage"
							},
							"t_mapping(t_uint256,t_struct(WeeklyContest)2395_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.WeeklyContest)",
								"numberOfBytes": "32",
								"value": "t_struct(WeeklyContest)2395_storage"
							},
							"t_mapping(t_uint256,t_struct(weeklyUser)2408_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.weeklyUser)",
								"numberOfBytes": "32",
								"value": "t_struct(weeklyUser)2408_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Deposit)2016_storage": {
								"encoding": "inplace",
								"label": "struct Storage.Deposit",
								"members": [
									{
										"astId": 2009,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2011,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "withdrawn",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2013,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "start",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2015,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "depositType",
										"offset": 0,
										"slot": "3",
										"type": "t_uint8"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(Income)2089_storage": {
								"encoding": "inplace",
								"label": "struct Storage.Income",
								"members": [
									{
										"astId": 2080,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "fromUserId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2082,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2084,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "packageLevel",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2086,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "timestamp",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2088,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "incomeType",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(User)2051_storage": {
								"encoding": "inplace",
								"label": "struct Storage.User",
								"members": [
									{
										"astId": 2018,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "account",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 2022,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "deposits",
										"offset": 0,
										"slot": "1",
										"type": "t_array(t_struct(Deposit)2016_storage)dyn_storage"
									},
									{
										"astId": 2024,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "checkpoint",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2026,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "id",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2028,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "sponsorId",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 2030,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "uplineId",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 2032,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "level",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 2034,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "directTeam",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 2036,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "directPoolQualified",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									},
									{
										"astId": 2038,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "totalMatrixTeam",
										"offset": 0,
										"slot": "9",
										"type": "t_uint256"
									},
									{
										"astId": 2040,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "totalDeposit",
										"offset": 0,
										"slot": "10",
										"type": "t_uint256"
									},
									{
										"astId": 2042,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "poollevel",
										"offset": 0,
										"slot": "11",
										"type": "t_uint256"
									},
									{
										"astId": 2044,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "poolDeposit",
										"offset": 0,
										"slot": "12",
										"type": "t_uint256"
									},
									{
										"astId": 2046,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "boosterlevel",
										"offset": 0,
										"slot": "13",
										"type": "t_uint256"
									},
									{
										"astId": 2048,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "boosterDeposit",
										"offset": 0,
										"slot": "14",
										"type": "t_uint256"
									},
									{
										"astId": 2050,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "registrationTime",
										"offset": 0,
										"slot": "15",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "512"
							},
							"t_struct(UserBooster)2285_storage": {
								"encoding": "inplace",
								"label": "struct Storage.UserBooster",
								"members": [
									{
										"astId": 2276,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2278,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "poolId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2280,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "parentId",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2282,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "bonusCount",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2284,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "joinTime",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(UserIncome)2078_storage": {
								"encoding": "inplace",
								"label": "struct Storage.UserIncome",
								"members": [
									{
										"astId": 2053,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "totalIncome",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2055,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "sponsorIncome",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2057,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "matrixIncome",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2059,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "levelBoosterIncome",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2061,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "levelIncome",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 2063,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "royaltyIncome",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 2065,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "royaltyIncomeClaimed",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 2067,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "communityIncome",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 2069,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "poolIncome",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									},
									{
										"astId": 2071,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "boosterIncome",
										"offset": 0,
										"slot": "9",
										"type": "t_uint256"
									},
									{
										"astId": 2073,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "weeklyContestIncome",
										"offset": 0,
										"slot": "10",
										"type": "t_uint256"
									},
									{
										"astId": 2075,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "monthlyRoyalty",
										"offset": 0,
										"slot": "11",
										"type": "t_uint256"
									},
									{
										"astId": 2077,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "monthlyTopRoyalty",
										"offset": 0,
										"slot": "12",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "416"
							},
							"t_struct(UserPool)2269_storage": {
								"encoding": "inplace",
								"label": "struct Storage.UserPool",
								"members": [
									{
										"astId": 2260,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2262,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "mainid",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2264,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "poolId",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2266,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "parentId",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2268,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "bonusCount",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(UserPoolTopup)2274_storage": {
								"encoding": "inplace",
								"label": "struct Storage.UserPoolTopup",
								"members": [
									{
										"astId": 2271,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "nextPoolAmt",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2273,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "reTopupAmt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(WeeklyContest)2395_storage": {
								"encoding": "inplace",
								"label": "struct Storage.WeeklyContest",
								"members": [
									{
										"astId": 2378,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "roundId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2380,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "totalReward",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2382,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "totalUsers",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2384,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "perUserReward",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2386,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "claimedCount",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 2388,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "startTime",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 2390,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "endTime",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 2392,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "carryForward",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 2394,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "closed",
										"offset": 0,
										"slot": "8",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "288"
							},
							"t_struct(weeklyUser)2408_storage": {
								"encoding": "inplace",
								"label": "struct Storage.weeklyUser",
								"members": [
									{
										"astId": 2397,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2399,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "joinTime",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2401,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "roundId",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2403,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "claimTime",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2405,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "isClaimed",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									},
									{
										"astId": 2407,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "isQualified",
										"offset": 1,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC165": [
							708
						],
						"IERC20": [
							232
						]
					},
					"id": 82,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 82,
							"sourceUnit": 90,
							"src": "133:36:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 232,
										"src": "141:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 82,
							"sourceUnit": 86,
							"src": "170:38:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 708,
										"src": "178:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "IERC20",
										"nameLocations": [
											"590:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 232,
										"src": "590:6:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IERC165",
										"nameLocations": [
											"598:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 708,
										"src": "598:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:0"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:0",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 81,
							"linearizedBaseContracts": [
								81,
								708,
								232
							],
							"name": "IERC1363",
							"nameLocation": "578:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 20,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1548:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1560:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1593:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:0"
									},
									"scope": 81,
									"src": "1523:76:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 32,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2088:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2100:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2115:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 26,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2154:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 29,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:0"
									},
									"scope": 81,
									"src": "2063:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2653:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2667:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2679:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2712:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:0"
									},
									"scope": 81,
									"src": "2624:94:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3294:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3308:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3320:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3335:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 52,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3374:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:0"
									},
									"scope": 81,
									"src": "3265:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 68,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3805:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3822:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3855:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 65,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:0"
									},
									"scope": 81,
									"src": "3781:80:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4374:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4391:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4406:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 74,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4445:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 77,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:0"
									},
									"scope": 81,
									"src": "4350:101:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 82,
							"src": "568:3885:0",
							"usedErrors": [],
							"usedEvents": [
								166,
								175
							]
						}
					],
					"src": "107:4347:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							708
						]
					},
					"id": 86,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 83,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 85,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 86,
							"sourceUnit": 709,
							"src": "133:59:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 84,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 708,
										"src": "141:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:87:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							232
						]
					},
					"id": 90,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 87,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "105:25:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 89,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 90,
							"sourceUnit": 233,
							"src": "132:49:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 88,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 232,
										"src": "140:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:77:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							154
						]
					},
					"id": 155,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 91,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 92,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:3",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 154,
							"linearizedBaseContracts": [
								154
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 95,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 154,
									"src": "1676:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 93,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 94,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 98,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 154,
									"src": "1723:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 96,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 97,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 100,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 154,
									"src": "1767:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 99,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "1811:39:3",
										"statements": [
											{
												"expression": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 103,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "1821:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 104,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "1831:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:3"
											}
										]
									},
									"id": 108,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:3"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:3"
									},
									"scope": 154,
									"src": "1797:53:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "2251:79:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 111,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 134,
														"src": "2261:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 113,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:3"
											},
											{
												"id": 114,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:3"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 115,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 142,
														"src": "2303:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 117,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:3"
											}
										]
									},
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:3",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 119,
									"name": "nonReentrant",
									"nameLocation": "2236:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:3"
									},
									"src": "2227:103:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 133,
										"nodeType": "Block",
										"src": "2375:248:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 123,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 100,
																"src": "2468:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 124,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "2479:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 122,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 128,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:3"
											},
											{
												"expression": {
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 129,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "2598:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 130,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "2608:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:3"
											}
										]
									},
									"id": 134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:3"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:3"
									},
									"scope": 154,
									"src": "2336:287:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "2667:171:3",
										"statements": [
											{
												"expression": {
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 137,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "2809:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 138,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "2819:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:3"
											}
										]
									},
									"id": 142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:3"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:3"
									},
									"scope": 154,
									"src": "2629:209:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "3081:43:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 148,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "3098:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 149,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "3109:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 147,
												"id": 151,
												"nodeType": "Return",
												"src": "3091:26:3"
											}
										]
									},
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:3",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:3"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "3075:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 145,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:3"
									},
									"scope": 154,
									"src": "3017:107:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 155,
							"src": "888:2238:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							232
						]
					},
					"id": 233,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 156,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 157,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 232,
							"linearizedBaseContracts": [
								232
							],
							"name": "IERC20",
							"nameLocation": "215:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 166,
									"name": "Transfer",
									"nameLocation": "397:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "406:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "428:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "448:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:4"
									},
									"src": "391:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 175,
									"name": "Approval",
									"nameLocation": "628:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "637:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "660:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "685:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:4"
									},
									"src": "622:78:4"
								},
								{
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 181,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:4"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "822:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:4"
									},
									"scope": 232,
									"src": "776:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "932:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:4"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "972:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:4"
									},
									"scope": 232,
									"src": "913:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 199,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1223:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1235:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:4"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1268:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 196,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:4"
									},
									"scope": 232,
									"src": "1205:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 209,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1568:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1583:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:4"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1623:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:4"
									},
									"scope": 232,
									"src": "1549:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 219,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2327:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2344:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:4"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2377:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 216,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:4"
									},
									"scope": 232,
									"src": "2310:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 231,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2713:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2727:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2739:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:4"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2772:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 228,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:4"
									},
									"scope": 232,
									"src": "2691:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 233,
							"src": "205:2575:4",
							"usedErrors": [],
							"usedEvents": [
								166,
								175
							]
						}
					],
					"src": "106:2675:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC20": [
							232
						],
						"SafeERC20": [
							696
						]
					},
					"id": 697,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 234,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 236,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 697,
							"sourceUnit": 233,
							"src": "141:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 235,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 232,
										"src": "149:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 238,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 697,
							"sourceUnit": 82,
							"src": "179:58:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 237,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 81,
										"src": "187:8:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 239,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 696,
							"linearizedBaseContracts": [
								696
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:5",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 244,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "823:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:5"
									},
									"src": "792:46:5"
								},
								{
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:5",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 253,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "959:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "976:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "1002:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:5"
									},
									"src": "920:109:5"
								},
								{
									"body": {
										"id": 276,
										"nodeType": "Block",
										"src": "1291:88:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 265,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "1321:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 268,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 257,
																		"src": "1343:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 199,
																	"src": "1343:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 270,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 259,
																			"src": "1360:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 271,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 261,
																			"src": "1364:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 272,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 266,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 264,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "1301:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:5"
											}
										]
									},
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:5",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "1241:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 256,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 255,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "1241:6:5"
													},
													"referencedDeclaration": 232,
													"src": "1241:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "1255:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "1267:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:5"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:5"
									},
									"scope": 696,
									"src": "1219:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 303,
										"nodeType": "Block",
										"src": "1708:98:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 291,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "1738:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 294,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 281,
																		"src": "1760:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 231,
																	"src": "1760:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 296,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 283,
																			"src": "1781:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 297,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 285,
																			"src": "1787:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 298,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "1791:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 299,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 292,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 290,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "1718:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:5"
											}
										]
									},
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:5",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1644:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 280,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 279,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "1644:6:5"
													},
													"referencedDeclaration": 232,
													"src": "1644:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1658:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1672:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:5"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:5"
									},
									"scope": 696,
									"src": "1618:188:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 329,
										"nodeType": "Block",
										"src": "2033:99:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 318,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "2074:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 321,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 308,
																		"src": "2096:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 199,
																	"src": "2096:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 323,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 310,
																			"src": "2113:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 324,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 312,
																			"src": "2117:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 325,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 319,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 320,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 317,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "2050:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 316,
												"id": 328,
												"nodeType": "Return",
												"src": "2043:82:5"
											}
										]
									},
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:5",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "1968:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 307,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 306,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "1968:6:5"
													},
													"referencedDeclaration": 232,
													"src": "1968:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "1982:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "1994:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:5"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "2027:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 314,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:5"
									},
									"scope": 696,
									"src": "1943:189:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "2381:109:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 346,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "2422:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 349,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 334,
																		"src": "2444:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 231,
																	"src": "2444:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 351,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 336,
																			"src": "2465:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 352,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 338,
																			"src": "2471:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 353,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 340,
																			"src": "2475:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 354,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 347,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 348,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 345,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "2398:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 344,
												"id": 357,
												"nodeType": "Return",
												"src": "2391:92:5"
											}
										]
									},
									"documentation": {
										"id": 331,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:5",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2302:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 333,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 332,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "2302:6:5"
													},
													"referencedDeclaration": 232,
													"src": "2302:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2316:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2330:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2342:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:5"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2375:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:5"
									},
									"scope": 696,
									"src": "2273:217:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "3232:139:5",
										"statements": [
											{
												"assignments": [
													371
												],
												"declarations": [
													{
														"constant": false,
														"id": 371,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 389,
														"src": "3242:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 370,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 380,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 376,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$696",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$696",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 374,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 378,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "3296:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 372,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "3265:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														"id": 373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:5",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 209,
														"src": "3265:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 382,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "3327:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 383,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "3334:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 384,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 371,
																"src": "3343:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 385,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 367,
																"src": "3358:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 381,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "3314:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:5"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:5",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3177:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 362,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 361,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "3177:6:5"
													},
													"referencedDeclaration": 232,
													"src": "3177:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3191:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3208:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:5"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:5"
									},
									"scope": 696,
									"src": "3146:225:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 432,
										"nodeType": "Block",
										"src": "4137:370:5",
										"statements": [
											{
												"id": 431,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:5",
												"statements": [
													{
														"assignments": [
															402
														],
														"declarations": [
															{
																"constant": false,
																"id": 402,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:5",
																"nodeType": "VariableDeclaration",
																"scope": 431,
																"src": "4171:24:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 401,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 411,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 407,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$696",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$696",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 405,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 409,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 396,
																	"src": "4229:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 403,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "4198:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$232",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:5",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 209,
																"src": "4198:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 412,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "4255:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 413,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "4274:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 422,
														"nodeType": "IfStatement",
														"src": "4251:160:5",
														"trueBody": {
															"id": 421,
															"nodeType": "Block",
															"src": "4293:118:5",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 416,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 396,
																				"src": "4351:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 417,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 402,
																				"src": "4360:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 418,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 398,
																				"src": "4378:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 415,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 253,
																			"src": "4318:32:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 420,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:5"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 424,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "4437:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$232",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 425,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 396,
																	"src": "4444:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 426,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 402,
																		"src": "4453:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 427,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 398,
																		"src": "4472:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$232",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 423,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "4424:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 430,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:5",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "4070:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 393,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 392,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "4070:6:5"
													},
													"referencedDeclaration": 232,
													"src": "4070:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "4084:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "4101:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:5"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:5"
									},
									"scope": 696,
									"src": "4039:468:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "5161:303:5",
										"statements": [
											{
												"assignments": [
													445
												],
												"declarations": [
													{
														"constant": false,
														"id": 445,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 479,
														"src": "5171:25:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 444,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 454,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 448,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 437,
																"src": "5214:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$232",
																	"typeString": "contract IERC20"
																}
															},
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:5",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 219,
															"src": "5214:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 450,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 439,
																	"src": "5230:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 451,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 441,
																	"src": "5239:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 452,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 446,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 447,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:5",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:5"
											},
											{
												"condition": {
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:5",
													"subExpression": {
														"arguments": [
															{
																"id": 456,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 437,
																"src": "5286:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$232",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 457,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 445,
																"src": "5293:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$232",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 455,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "5262:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 478,
												"nodeType": "IfStatement",
												"src": "5257:201:5",
												"trueBody": {
													"id": 477,
													"nodeType": "Block",
													"src": "5308:150:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 461,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "5342:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 464,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 437,
																					"src": "5364:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$232",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 465,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:5",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 219,
																				"src": "5364:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 466,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 439,
																						"src": "5380:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 467,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 468,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 462,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 463,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:5",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 460,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 654,
																	"src": "5322:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 471,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 473,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "5427:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 474,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 445,
																		"src": "5434:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 472,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 654,
																	"src": "5407:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 476,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:5",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "5106:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 436,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 435,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "5106:6:5"
													},
													"referencedDeclaration": 232,
													"src": "5106:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "5120:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "5137:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:5"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:5"
									},
									"scope": 696,
									"src": "5084:380:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "5911:219:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 493,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 486,
																"src": "5925:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 495,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 507,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 486,
																	"src": "6034:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 508,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 488,
																	"src": "6038:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 509,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 490,
																	"src": "6045:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 505,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 484,
																	"src": "6012:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:5",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 32,
																"src": "6012:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 520,
													"nodeType": "IfStatement",
													"src": "6007:117:5",
													"trueBody": {
														"id": 519,
														"nodeType": "Block",
														"src": "6052:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 515,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 484,
																					"src": "6106:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 514,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 513,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 512,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "6073:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 518,
																"nodeType": "RevertStatement",
																"src": "6066:47:5"
															}
														]
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5921:203:5",
												"trueBody": {
													"id": 504,
													"nodeType": "Block",
													"src": "5946:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 499,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 484,
																		"src": "5973:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 500,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 486,
																		"src": "5980:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 501,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 488,
																		"src": "5984:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 498,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 277,
																	"src": "5960:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 503,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:5",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "5840:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 483,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 482,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "5840:8:5"
													},
													"referencedDeclaration": 81,
													"src": "5840:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "5856:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "5868:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "5883:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 489,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:5"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:5"
									},
									"scope": 696,
									"src": "5808:322:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "6649:239:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 538,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 531,
																"src": "6663:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 540,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 529,
																	"src": "6786:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 554,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 531,
																	"src": "6792:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 555,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 533,
																	"src": "6796:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 556,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 535,
																	"src": "6803:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 551,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 527,
																	"src": "6760:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:5",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 58,
																"src": "6760:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 567,
													"nodeType": "IfStatement",
													"src": "6755:127:5",
													"trueBody": {
														"id": 566,
														"nodeType": "Block",
														"src": "6810:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 562,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 527,
																					"src": "6864:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 561,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 560,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 559,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "6831:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 565,
																"nodeType": "RevertStatement",
																"src": "6824:47:5"
															}
														]
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "6659:223:5",
												"trueBody": {
													"id": 550,
													"nodeType": "Block",
													"src": "6684:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 544,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 527,
																		"src": "6715:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 545,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 529,
																		"src": "6722:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 546,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 531,
																		"src": "6728:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 547,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 533,
																		"src": "6732:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 543,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 304,
																	"src": "6698:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 549,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:5",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6527:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 526,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 525,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "6527:8:5"
													},
													"referencedDeclaration": 81,
													"src": "6527:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6551:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6573:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6593:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6616:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 534,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:5"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:5"
									},
									"scope": 696,
									"src": "6482:406:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 612,
										"nodeType": "Block",
										"src": "7655:218:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 583,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "7669:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 585,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 586,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 597,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 576,
																	"src": "7777:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 598,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 578,
																	"src": "7781:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 599,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "7788:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 595,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 574,
																	"src": "7756:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:5",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 80,
																"src": "7756:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 610,
													"nodeType": "IfStatement",
													"src": "7751:116:5",
													"trueBody": {
														"id": 609,
														"nodeType": "Block",
														"src": "7795:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 605,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 574,
																					"src": "7849:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 604,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 603,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 602,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "7816:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 608,
																"nodeType": "RevertStatement",
																"src": "7809:47:5"
															}
														]
													}
												},
												"id": 611,
												"nodeType": "IfStatement",
												"src": "7665:202:5",
												"trueBody": {
													"id": 594,
													"nodeType": "Block",
													"src": "7690:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 589,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 574,
																		"src": "7717:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 590,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "7724:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 591,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 578,
																		"src": "7728:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 588,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "7704:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 593,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:5",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "7584:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 573,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 572,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "7584:8:5"
													},
													"referencedDeclaration": 81,
													"src": "7584:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "7600:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "7612:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "7627:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 579,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:5"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:5"
									},
									"scope": 696,
									"src": "7553:320:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 653,
										"nodeType": "Block",
										"src": "8440:650:5",
										"statements": [
											{
												"assignments": [
													623
												],
												"declarations": [
													{
														"constant": false,
														"id": 623,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 653,
														"src": "8450:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 622,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 624,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:5"
											},
											{
												"assignments": [
													626
												],
												"declarations": [
													{
														"constant": false,
														"id": 626,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 653,
														"src": "8478:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 625,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 627,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:5"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:5",
													"nodeType": "YulBlock",
													"src": "8532:396:5",
													"statements": [
														{
															"nativeSrc": "8546:75:5",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:5"
																		},
																		"nativeSrc": "8566:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:5",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:5"
																		},
																		"nativeSrc": "8583:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:5"
																		},
																		"nativeSrc": "8600:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:5"
																},
																"nativeSrc": "8561:60:5",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:5"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:5",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:5",
																"nodeType": "YulBlock",
																"src": "8682:157:5",
																"statements": [
																	{
																		"nativeSrc": "8700:22:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:5",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:5",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:5",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:5"
																			},
																			"nativeSrc": "8711:11:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:5"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:5",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:5",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:5"
																					},
																					"nativeSrc": "8762:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:5"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:5",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:5"
																			},
																			"nativeSrc": "8739:40:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:5"
																		},
																		"nativeSrc": "8739:40:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:5"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:5"
																					},
																					"nativeSrc": "8808:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:5"
																			},
																			"nativeSrc": "8796:29:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:5"
																		},
																		"nativeSrc": "8796:29:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:5"
																},
																"nativeSrc": "8666:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:5"
															},
															"nativeSrc": "8663:176:5",
															"nodeType": "YulIf",
															"src": "8663:176:5"
														},
														{
															"nativeSrc": "8852:30:5",
															"nodeType": "YulAssignment",
															"src": "8852:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:5"
																},
																"nativeSrc": "8866:16:5",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:5"
																}
															]
														},
														{
															"nativeSrc": "8895:23:5",
															"nodeType": "YulAssignment",
															"src": "8895:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:5"
																},
																"nativeSrc": "8910:8:5",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 619,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:5",
														"valueSize": 1
													},
													{
														"declaration": 619,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:5",
														"valueSize": 1
													},
													{
														"declaration": 623,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:5",
														"valueSize": 1
													},
													{
														"declaration": 626,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:5",
														"valueSize": 1
													},
													{
														"declaration": 617,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 628,
												"nodeType": "InlineAssembly",
												"src": "8507:421:5"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 631,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 629,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "8942:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 642,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 640,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "8994:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 641,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:5",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 634,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 617,
																			"src": "8968:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$232",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$232",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 633,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 632,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 636,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:5",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 652,
												"nodeType": "IfStatement",
												"src": "8938:146:5",
												"trueBody": {
													"id": 651,
													"nodeType": "Block",
													"src": "9012:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 647,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 617,
																				"src": "9066:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$232",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$232",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 645,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 644,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 244,
																	"src": "9033:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 650,
															"nodeType": "RevertStatement",
															"src": "9026:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "8399:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 616,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 615,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "8399:6:5"
													},
													"referencedDeclaration": 232,
													"src": "8399:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "8413:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 618,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:5"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:5"
									},
									"scope": 696,
									"src": "8370:720:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 694,
										"nodeType": "Block",
										"src": "9681:391:5",
										"statements": [
											{
												"assignments": [
													666
												],
												"declarations": [
													{
														"constant": false,
														"id": 666,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 694,
														"src": "9691:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 665,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 667,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:5"
											},
											{
												"assignments": [
													669
												],
												"declarations": [
													{
														"constant": false,
														"id": 669,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 694,
														"src": "9713:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 668,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 670,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:5"
											},
											{
												"assignments": [
													672
												],
												"declarations": [
													{
														"constant": false,
														"id": 672,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 694,
														"src": "9741:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 671,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 673,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:5"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:5",
													"nodeType": "YulBlock",
													"src": "9795:174:5",
													"statements": [
														{
															"nativeSrc": "9809:71:5",
															"nodeType": "YulAssignment",
															"src": "9809:71:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:5"
																		},
																		"nativeSrc": "9825:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:5",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:5"
																		},
																		"nativeSrc": "9842:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:5"
																		},
																		"nativeSrc": "9859:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:5",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:5"
																},
																"nativeSrc": "9820:60:5",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:5"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:5"
																}
															]
														},
														{
															"nativeSrc": "9893:30:5",
															"nodeType": "YulAssignment",
															"src": "9893:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:5"
																},
																"nativeSrc": "9907:16:5",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:5"
																}
															]
														},
														{
															"nativeSrc": "9936:23:5",
															"nodeType": "YulAssignment",
															"src": "9936:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:5"
																},
																"nativeSrc": "9951:8:5",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 660,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:5",
														"valueSize": 1
													},
													{
														"declaration": 660,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:5",
														"valueSize": 1
													},
													{
														"declaration": 669,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:5",
														"valueSize": 1
													},
													{
														"declaration": 672,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:5",
														"valueSize": 1
													},
													{
														"declaration": 666,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:5",
														"valueSize": 1
													},
													{
														"declaration": 658,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 674,
												"nodeType": "InlineAssembly",
												"src": "9770:199:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 675,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "9985:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 676,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "9997:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 687,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 672,
																		"src": "10048:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 688,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:5",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 681,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 658,
																						"src": "10023:5:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$232",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$232",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 680,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 679,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:5",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 682,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 683,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:5",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 691,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 664,
												"id": 693,
												"nodeType": "Return",
												"src": "9978:87:5"
											}
										]
									},
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 695,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "9625:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 657,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 656,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "9625:6:5"
													},
													"referencedDeclaration": 232,
													"src": "9625:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "9639:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 659,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:5"
									},
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "9675:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 662,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:5"
									},
									"scope": 696,
									"src": "9592:480:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 697,
							"src": "698:9376:5",
							"usedErrors": [
								244,
								253
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							708
						]
					},
					"id": 709,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 698,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 699,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:6",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 708,
							"linearizedBaseContracts": [
								708
							],
							"name": "IERC165",
							"nameLocation": "433:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 700,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:6",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 707,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "819:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 701,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:6"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "862:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 704,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:6"
									},
									"scope": 708,
									"src": "792:76:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 709,
							"src": "423:447:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:6"
				},
				"id": 6
			},
			"contracts/modules/InfinityPool.sol": {
				"ast": {
					"absolutePath": "contracts/modules/InfinityPool.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC20": [
							232
						],
						"InfinityPool": [
							1905
						],
						"ReentrancyGuard": [
							154
						],
						"SafeERC20": [
							696
						],
						"Storage": [
							2858
						]
					},
					"id": 1906,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 710,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".30"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:7"
						},
						{
							"absolutePath": "contracts/modules/Storage.sol",
							"file": "./Storage.sol",
							"id": 711,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1906,
							"sourceUnit": 2859,
							"src": "71:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 712,
										"name": "Storage",
										"nameLocations": [
											"127:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2858,
										"src": "127:7:7"
									},
									"id": 713,
									"nodeType": "InheritanceSpecifier",
									"src": "127:7:7"
								}
							],
							"canonicalName": "InfinityPool",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1905,
							"linearizedBaseContracts": [
								1905,
								2858,
								154
							],
							"name": "InfinityPool",
							"nameLocation": "111:12:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 716,
										"nodeType": "Block",
										"src": "167:18:7",
										"statements": []
									},
									"id": 717,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "164:2:7"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:0:7"
									},
									"scope": 1905,
									"src": "153:32:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 782,
										"nodeType": "Block",
										"src": "288:588:7",
										"statements": [
											{
												"assignments": [
													728
												],
												"declarations": [
													{
														"constant": false,
														"id": 728,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "312:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 782,
														"src": "299:17:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$2051_storage_ptr",
															"typeString": "struct Storage.User"
														},
														"typeName": {
															"id": 727,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 726,
																"name": "User",
																"nameLocations": [
																	"299:4:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2051,
																"src": "299:4:7"
															},
															"referencedDeclaration": 2051,
															"src": "299:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2051_storage_ptr",
																"typeString": "struct Storage.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 732,
												"initialValue": {
													"baseExpression": {
														"id": 729,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2098,
														"src": "319:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2051_storage_$",
															"typeString": "mapping(uint256 => struct Storage.User storage ref)"
														}
													},
													"id": 731,
													"indexExpression": {
														"id": 730,
														"name": "userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 719,
														"src": "325:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "319:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$2051_storage",
														"typeString": "struct Storage.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "299:33:7"
											},
											{
												"assignments": [
													734
												],
												"declarations": [
													{
														"constant": false,
														"id": 734,
														"mutability": "mutable",
														"name": "nextPool",
														"nameLocation": "348:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 782,
														"src": "343:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 733,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "343:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 737,
												"initialValue": {
													"expression": {
														"id": 735,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "359:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$2051_storage_ptr",
															"typeString": "struct Storage.User storage pointer"
														}
													},
													"id": 736,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "364:9:7",
													"memberName": "poollevel",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2042,
													"src": "359:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "343:30:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 738,
														"name": "nextPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 734,
														"src": "388:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"expression": {
															"id": 739,
															"name": "poolPackages",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2208,
															"src": "400:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 740,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "413:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "400:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "388:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 747,
												"nodeType": "IfStatement",
												"src": "384:117:7",
												"trueBody": {
													"id": 746,
													"nodeType": "Block",
													"src": "421:80:7",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 742,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "444:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "596f752061726520616c726561647920617420746865206869676865737420706f6f6c",
																		"id": 743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "451:37:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_744d03fe4a98631da082f0ecf18c7009d35088e037dbca2932748b6542ce1070",
																			"typeString": "literal_string \"You are already at the highest pool\""
																		},
																		"value": "You are already at the highest pool"
																	}
																],
																"id": 744,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "443:46:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_stringliteral_744d03fe4a98631da082f0ecf18c7009d35088e037dbca2932748b6542ce1070_$",
																	"typeString": "tuple(bool,literal_string \"You are already at the highest pool\")"
																}
															},
															"functionReturnParameters": 725,
															"id": 745,
															"nodeType": "Return",
															"src": "436:53:7"
														}
													]
												}
											},
											{
												"assignments": [
													749
												],
												"declarations": [
													{
														"constant": false,
														"id": 749,
														"mutability": "mutable",
														"name": "requiredLevel",
														"nameLocation": "518:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 782,
														"src": "513:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 748,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "513:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 753,
												"initialValue": {
													"baseExpression": {
														"id": 750,
														"name": "minLevelForPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2232,
														"src": "534:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$7_storage",
															"typeString": "uint256[7] storage ref"
														}
													},
													"id": 752,
													"indexExpression": {
														"id": 751,
														"name": "nextPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 734,
														"src": "550:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "534:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "513:46:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 754,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 728,
															"src": "576:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2051_storage_ptr",
																"typeString": "struct Storage.User storage pointer"
															}
														},
														"id": 755,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "581:5:7",
														"memberName": "level",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2032,
														"src": "576:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 756,
														"name": "requiredLevel",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "589:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "576:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 763,
												"nodeType": "IfStatement",
												"src": "572:115:7",
												"trueBody": {
													"id": 762,
													"nodeType": "Block",
													"src": "604:83:7",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 758,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "627:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "596f75206e65656420746f207265616368206120686967686572206c6576656c206669727374",
																		"id": 759,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "634:40:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3aadf727440b46723180ac9d128b418b1a0bcac78dfa740be5b4c5bf3a3acf15",
																			"typeString": "literal_string \"You need to reach a higher level first\""
																		},
																		"value": "You need to reach a higher level first"
																	}
																],
																"id": 760,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "626:49:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_stringliteral_3aadf727440b46723180ac9d128b418b1a0bcac78dfa740be5b4c5bf3a3acf15_$",
																	"typeString": "tuple(bool,literal_string \"You need to reach a higher level first\")"
																}
															},
															"functionReturnParameters": 725,
															"id": 761,
															"nodeType": "Return",
															"src": "619:56:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 766,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 764,
															"name": "nextPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "703:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "714:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "703:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 770,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 767,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 728,
																"src": "719:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$2051_storage_ptr",
																	"typeString": "struct Storage.User storage pointer"
																}
															},
															"id": 768,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "724:9:7",
															"memberName": "poollevel",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2042,
															"src": "719:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 769,
															"name": "nextPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "736:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "719:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "703:41:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 777,
												"nodeType": "IfStatement",
												"src": "699:115:7",
												"trueBody": {
													"id": 776,
													"nodeType": "Block",
													"src": "746:68:7",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 772,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "769:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "4275792070726576696f757320706f6f6c206669727374",
																		"id": 773,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "776:25:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_5f5fa9d58a74e1ce1932ae4e067a9f842704fbfbc24d932ec13f6cf4e6e7c5b8",
																			"typeString": "literal_string \"Buy previous pool first\""
																		},
																		"value": "Buy previous pool first"
																	}
																],
																"id": 774,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "768:34:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_stringliteral_5f5fa9d58a74e1ce1932ae4e067a9f842704fbfbc24d932ec13f6cf4e6e7c5b8_$",
																	"typeString": "tuple(bool,literal_string \"Buy previous pool first\")"
																}
															},
															"functionReturnParameters": 725,
															"id": 775,
															"nodeType": "Return",
															"src": "761:41:7"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "834:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"hexValue": "456c696769626c6520746f20627579206e65787420706f6f6c",
															"id": 779,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "840:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2fafd60b978dcf196df403054d18f0a85faa9d7d73e6cdf9657e05b527116f52",
																"typeString": "literal_string \"Eligible to buy next pool\""
															},
															"value": "Eligible to buy next pool"
														}
													],
													"id": 780,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "833:35:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_stringliteral_2fafd60b978dcf196df403054d18f0a85faa9d7d73e6cdf9657e05b527116f52_$",
														"typeString": "tuple(bool,literal_string \"Eligible to buy next pool\")"
													}
												},
												"functionReturnParameters": 725,
												"id": 781,
												"nodeType": "Return",
												"src": "826:42:7"
											}
										]
									},
									"functionSelector": "67d52d4d",
									"id": 783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "canBuyNextPool",
									"nameLocation": "202:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "userId",
												"nameLocation": "222:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "217:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "217:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "216:13:7"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "eligible",
												"nameLocation": "256:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "251:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 721,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "251:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "280:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "266:20:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 723,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "266:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "250:37:7"
									},
									"scope": 1905,
									"src": "193:683:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 880,
										"nodeType": "Block",
										"src": "951:1054:7",
										"statements": [
											{
												"assignments": [
													792
												],
												"declarations": [
													{
														"constant": false,
														"id": 792,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "980:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 880,
														"src": "967:17:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$2051_storage_ptr",
															"typeString": "struct Storage.User"
														},
														"typeName": {
															"id": 791,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 790,
																"name": "User",
																"nameLocations": [
																	"967:4:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2051,
																"src": "967:4:7"
															},
															"referencedDeclaration": 2051,
															"src": "967:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2051_storage_ptr",
																"typeString": "struct Storage.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 796,
												"initialValue": {
													"baseExpression": {
														"id": 793,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2098,
														"src": "987:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2051_storage_$",
															"typeString": "mapping(uint256 => struct Storage.User storage ref)"
														}
													},
													"id": 795,
													"indexExpression": {
														"id": 794,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "993:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "987:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$2051_storage",
														"typeString": "struct Storage.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "967:34:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 798,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "1020:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$2051_storage_ptr",
																		"typeString": "struct Storage.User storage pointer"
																	}
																},
																"id": 799,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1025:7:7",
																"memberName": "account",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2018,
																"src": "1020:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 800,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1036:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 801,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1040:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1036:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1020:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420796f7572206163636f756e74",
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1048:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d2be5388e395114c9bc63051fd6def6e9e0facc3465cd48116ad48bef63b0e75",
																"typeString": "literal_string \"Not your account\""
															},
															"value": "Not your account"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d2be5388e395114c9bc63051fd6def6e9e0facc3465cd48116ad48bef63b0e75",
																"typeString": "literal_string \"Not your account\""
															}
														],
														"id": 797,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1012:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1012:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 805,
												"nodeType": "ExpressionStatement",
												"src": "1012:55:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 807,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "1086:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$2051_storage_ptr",
																		"typeString": "struct Storage.User storage pointer"
																	}
																},
																"id": 808,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1091:9:7",
																"memberName": "poollevel",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2042,
																"src": "1086:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "37",
																"id": 809,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1103:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_7_by_1",
																	"typeString": "int_const 7"
																},
																"value": "7"
															},
															"src": "1086:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4174206d617820706f6f6c",
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1106:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f2301e420cfc72a69fd463c53e71ee80b3f7d1dada318fc1a447f9445639f8de",
																"typeString": "literal_string \"At max pool\""
															},
															"value": "At max pool"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f2301e420cfc72a69fd463c53e71ee80b3f7d1dada318fc1a447f9445639f8de",
																"typeString": "literal_string \"At max pool\""
															}
														],
														"id": 806,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1078:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1078:42:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 813,
												"nodeType": "ExpressionStatement",
												"src": "1078:42:7"
											},
											{
												"assignments": [
													815
												],
												"declarations": [
													{
														"constant": false,
														"id": 815,
														"mutability": "mutable",
														"name": "packagePrice",
														"nameLocation": "1225:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 880,
														"src": "1217:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 814,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1217:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 816,
												"nodeType": "VariableDeclarationStatement",
												"src": "1217:20:7"
											},
											{
												"expression": {
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 817,
														"name": "packagePrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 815,
														"src": "1250:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 818,
															"name": "poolPackages",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2208,
															"src": "1265:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 820,
														"indexExpression": {
															"id": 819,
															"name": "_poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "1278:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1265:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1250:36:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 822,
												"nodeType": "ExpressionStatement",
												"src": "1250:36:7"
											},
											{
												"assignments": [
													825
												],
												"declarations": [
													{
														"constant": false,
														"id": 825,
														"mutability": "mutable",
														"name": "top",
														"nameLocation": "1325:3:7",
														"nodeType": "VariableDeclaration",
														"scope": 880,
														"src": "1303:25:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserPoolTopup_$2274_storage_ptr",
															"typeString": "struct Storage.UserPoolTopup"
														},
														"typeName": {
															"id": 824,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 823,
																"name": "UserPoolTopup",
																"nameLocations": [
																	"1303:13:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2274,
																"src": "1303:13:7"
															},
															"referencedDeclaration": 2274,
															"src": "1303:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserPoolTopup_$2274_storage_ptr",
																"typeString": "struct Storage.UserPoolTopup"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 831,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 826,
															"name": "userPooltopup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2292,
															"src": "1331:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_UserPoolTopup_$2274_storage_$_$",
																"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.UserPoolTopup storage ref))"
															}
														},
														"id": 828,
														"indexExpression": {
															"id": 827,
															"name": "_poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "1345:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1331:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserPoolTopup_$2274_storage_$",
															"typeString": "mapping(uint256 => struct Storage.UserPoolTopup storage ref)"
														}
													},
													"id": 830,
													"indexExpression": {
														"id": 829,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "1354:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1331:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserPoolTopup_$2274_storage",
														"typeString": "struct Storage.UserPoolTopup storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1303:59:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 833,
																	"name": "top",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 825,
																	"src": "1381:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserPoolTopup_$2274_storage_ptr",
																		"typeString": "struct Storage.UserPoolTopup storage pointer"
																	}
																},
																"id": 834,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1385:10:7",
																"memberName": "reTopupAmt",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2273,
																"src": "1381:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 835,
																"name": "packagePrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 815,
																"src": "1399:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1381:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f756768207265546f7075702062616c616e6365",
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1413:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_814e4f9b85ee8c0e54438da0ecd15e2e4b1a37ced8b1df4be66e0647686f8fb5",
																"typeString": "literal_string \"Not enough reTopup balance\""
															},
															"value": "Not enough reTopup balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_814e4f9b85ee8c0e54438da0ecd15e2e4b1a37ced8b1df4be66e0647686f8fb5",
																"typeString": "literal_string \"Not enough reTopup balance\""
															}
														],
														"id": 832,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1373:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 839,
												"nodeType": "ExpressionStatement",
												"src": "1373:69:7"
											},
											{
												"expression": {
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 840,
															"name": "top",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "1482:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserPoolTopup_$2274_storage_ptr",
																"typeString": "struct Storage.UserPoolTopup storage pointer"
															}
														},
														"id": 842,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1486:10:7",
														"memberName": "reTopupAmt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2273,
														"src": "1482:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 843,
														"name": "packagePrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 815,
														"src": "1500:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1482:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 845,
												"nodeType": "ExpressionStatement",
												"src": "1482:30:7"
											},
											{
												"expression": {
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 846,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "1552:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2051_storage_ptr",
																"typeString": "struct Storage.User storage pointer"
															}
														},
														"id": 848,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1557:11:7",
														"memberName": "poolDeposit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2044,
														"src": "1552:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 849,
														"name": "packagePrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 815,
														"src": "1572:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1552:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 851,
												"nodeType": "ExpressionStatement",
												"src": "1552:32:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 853,
															"name": "_poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "1651:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 854,
															"name": "_userId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "1660:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 855,
															"name": "packagePrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "1669:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 852,
														"name": "_placeInPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1306,
														"src": "1638:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1638:44:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 857,
												"nodeType": "ExpressionStatement",
												"src": "1638:44:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 864,
																	"name": "packagePrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 815,
																	"src": "1761:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 865,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1799:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"expression": {
																		"id": 866,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "1822:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1828:9:7",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "1822:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "3130",
																	"id": 868,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1865:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	}
																],
																"id": 863,
																"name": "Deposit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2016,
																"src": "1730:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Deposit_$2016_storage_ptr_$",
																	"typeString": "type(struct Storage.Deposit storage pointer)"
																}
															},
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"1753:6:7",
																"1788:9:7",
																"1815:5:7",
																"1852:11:7"
															],
															"names": [
																"amount",
																"withdrawn",
																"start",
																"depositType"
															],
															"nodeType": "FunctionCall",
															"src": "1730:172:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deposit_$2016_memory_ptr",
																"typeString": "struct Storage.Deposit memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Deposit_$2016_memory_ptr",
																"typeString": "struct Storage.Deposit memory"
															}
														],
														"expression": {
															"expression": {
																"id": 858,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 792,
																"src": "1711:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$2051_storage_ptr",
																	"typeString": "struct Storage.User storage pointer"
																}
															},
															"id": 861,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1716:8:7",
															"memberName": "deposits",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2022,
															"src": "1711:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Deposit_$2016_storage_$dyn_storage",
																"typeString": "struct Storage.Deposit storage ref[] storage ref"
															}
														},
														"id": 862,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1725:4:7",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1711:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Deposit_$2016_storage_$dyn_storage_ptr_$_t_struct$_Deposit_$2016_storage_$returns$__$attached_to$_t_array$_t_struct$_Deposit_$2016_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct Storage.Deposit storage ref[] storage pointer,struct Storage.Deposit storage ref)"
														}
													},
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1711:192:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 871,
												"nodeType": "ExpressionStatement",
												"src": "1711:192:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 873,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1929:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1933:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1929:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 875,
															"name": "_userId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "1941:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 876,
															"name": "_poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "1950:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "506f6f6c205265546f70757020284561726e696e6729",
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1959:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_17c9f18468bc8a39f55c52e9a3a8211c840200ad3e9a11f88031b36e010cfcd9",
																"typeString": "literal_string \"Pool ReTopup (Earning)\""
															},
															"value": "Pool ReTopup (Earning)"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_17c9f18468bc8a39f55c52e9a3a8211c840200ad3e9a11f88031b36e010cfcd9",
																"typeString": "literal_string \"Pool ReTopup (Earning)\""
															}
														],
														"id": 872,
														"name": "Upgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2167,
														"src": "1921:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,string memory)"
														}
													},
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1921:63:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 879,
												"nodeType": "EmitStatement",
												"src": "1916:68:7"
											}
										]
									},
									"functionSelector": "7848f0a3",
									"id": 881,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "RetopPoolByEarning",
									"nameLocation": "895:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "_userId",
												"nameLocation": "919:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "914:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 784,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "933:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "928:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 786,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "928:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:28:7"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "951:0:7"
									},
									"scope": 1905,
									"src": "886:1119:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1025,
										"nodeType": "Block",
										"src": "2080:1576:7",
										"statements": [
											{
												"assignments": [
													890
												],
												"declarations": [
													{
														"constant": false,
														"id": 890,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "2213:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1025,
														"src": "2200:17:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$2051_storage_ptr",
															"typeString": "struct Storage.User"
														},
														"typeName": {
															"id": 889,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 888,
																"name": "User",
																"nameLocations": [
																	"2200:4:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2051,
																"src": "2200:4:7"
															},
															"referencedDeclaration": 2051,
															"src": "2200:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2051_storage_ptr",
																"typeString": "struct Storage.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 894,
												"initialValue": {
													"baseExpression": {
														"id": 891,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2098,
														"src": "2220:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2051_storage_$",
															"typeString": "mapping(uint256 => struct Storage.User storage ref)"
														}
													},
													"id": 893,
													"indexExpression": {
														"id": 892,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "2226:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2220:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$2051_storage",
														"typeString": "struct Storage.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2200:34:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 896,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 890,
																	"src": "2253:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$2051_storage_ptr",
																		"typeString": "struct Storage.User storage pointer"
																	}
																},
																"id": 897,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2258:7:7",
																"memberName": "account",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2018,
																"src": "2253:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 898,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2269:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 899,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2273:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2269:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2253:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420796f7572206163636f756e74",
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2281:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d2be5388e395114c9bc63051fd6def6e9e0facc3465cd48116ad48bef63b0e75",
																"typeString": "literal_string \"Not your account\""
															},
															"value": "Not your account"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d2be5388e395114c9bc63051fd6def6e9e0facc3465cd48116ad48bef63b0e75",
																"typeString": "literal_string \"Not your account\""
															}
														],
														"id": 895,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2245:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2245:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 903,
												"nodeType": "ExpressionStatement",
												"src": "2245:55:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 905,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 890,
																	"src": "2319:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$2051_storage_ptr",
																		"typeString": "struct Storage.User storage pointer"
																	}
																},
																"id": 906,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2324:9:7",
																"memberName": "poollevel",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2042,
																"src": "2319:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "37",
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2336:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_7_by_1",
																	"typeString": "int_const 7"
																},
																"value": "7"
															},
															"src": "2319:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4174206d617820706f6f6c",
															"id": 909,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2339:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f2301e420cfc72a69fd463c53e71ee80b3f7d1dada318fc1a447f9445639f8de",
																"typeString": "literal_string \"At max pool\""
															},
															"value": "At max pool"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f2301e420cfc72a69fd463c53e71ee80b3f7d1dada318fc1a447f9445639f8de",
																"typeString": "literal_string \"At max pool\""
															}
														],
														"id": 904,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2311:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2311:42:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 911,
												"nodeType": "ExpressionStatement",
												"src": "2311:42:7"
											},
											{
												"assignments": [
													913
												],
												"declarations": [
													{
														"constant": false,
														"id": 913,
														"mutability": "mutable",
														"name": "packagePrice",
														"nameLocation": "2380:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 1025,
														"src": "2372:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 912,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2372:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 914,
												"nodeType": "VariableDeclarationStatement",
												"src": "2372:20:7"
											},
											{
												"assignments": [
													916
												],
												"declarations": [
													{
														"constant": false,
														"id": 916,
														"mutability": "mutable",
														"name": "targetPool",
														"nameLocation": "2411:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1025,
														"src": "2403:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 915,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2403:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 917,
												"nodeType": "VariableDeclarationStatement",
												"src": "2403:18:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 921,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 919,
																	"name": "_poolId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 885,
																	"src": "2454:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 920,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2464:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2454:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 922,
																	"name": "poolPackages",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2208,
																	"src": "2468:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 923,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2481:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2468:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2454:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2068696768657220706f6f6c",
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0dbf30eb606b6f290538ccf43fbcaab7e5f2c265479fab9e1e0529ecc3a34f35",
																"typeString": "literal_string \"No higher pool\""
															},
															"value": "No higher pool"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0dbf30eb606b6f290538ccf43fbcaab7e5f2c265479fab9e1e0529ecc3a34f35",
																"typeString": "literal_string \"No higher pool\""
															}
														],
														"id": 918,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2446:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2446:60:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 927,
												"nodeType": "ExpressionStatement",
												"src": "2446:60:7"
											},
											{
												"expression": {
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 928,
														"name": "packagePrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 913,
														"src": "2517:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 929,
															"name": "poolPackages",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2208,
															"src": "2532:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 933,
														"indexExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 930,
																"name": "_poolId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 885,
																"src": "2545:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2555:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2545:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2532:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2517:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 935,
												"nodeType": "ExpressionStatement",
												"src": "2517:40:7"
											},
											{
												"expression": {
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 936,
														"name": "targetPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "2568:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 939,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 937,
															"name": "_poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "2581:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2591:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2581:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2568:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 941,
												"nodeType": "ExpressionStatement",
												"src": "2568:24:7"
											},
											{
												"assignments": [
													944
												],
												"declarations": [
													{
														"constant": false,
														"id": 944,
														"mutability": "mutable",
														"name": "top",
														"nameLocation": "2798:3:7",
														"nodeType": "VariableDeclaration",
														"scope": 1025,
														"src": "2776:25:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserPoolTopup_$2274_storage_ptr",
															"typeString": "struct Storage.UserPoolTopup"
														},
														"typeName": {
															"id": 943,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 942,
																"name": "UserPoolTopup",
																"nameLocations": [
																	"2776:13:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2274,
																"src": "2776:13:7"
															},
															"referencedDeclaration": 2274,
															"src": "2776:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserPoolTopup_$2274_storage_ptr",
																"typeString": "struct Storage.UserPoolTopup"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 950,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 945,
															"name": "userPooltopup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2292,
															"src": "2804:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_UserPoolTopup_$2274_storage_$_$",
																"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.UserPoolTopup storage ref))"
															}
														},
														"id": 947,
														"indexExpression": {
															"id": 946,
															"name": "_poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "2818:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2804:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserPoolTopup_$2274_storage_$",
															"typeString": "mapping(uint256 => struct Storage.UserPoolTopup storage ref)"
														}
													},
													"id": 949,
													"indexExpression": {
														"id": 948,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "2827:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2804:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserPoolTopup_$2274_storage",
														"typeString": "struct Storage.UserPoolTopup storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2776:59:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 952,
																	"name": "top",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 944,
																	"src": "2854:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserPoolTopup_$2274_storage_ptr",
																		"typeString": "struct Storage.UserPoolTopup storage pointer"
																	}
																},
																"id": 953,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2858:11:7",
																"memberName": "nextPoolAmt",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2271,
																"src": "2854:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 954,
																"name": "packagePrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 913,
																"src": "2873:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2854:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f756768206e65787420706f6f6c2062616c616e6365",
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2887:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1c47752b15d308659416836a32471817185c55251e39b4cf1576050203056cf5",
																"typeString": "literal_string \"Not enough next pool balance\""
															},
															"value": "Not enough next pool balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1c47752b15d308659416836a32471817185c55251e39b4cf1576050203056cf5",
																"typeString": "literal_string \"Not enough next pool balance\""
															}
														],
														"id": 951,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2846:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2846:72:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 958,
												"nodeType": "ExpressionStatement",
												"src": "2846:72:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2937:33:7",
															"subExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 960,
																		"name": "userHasPool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2324,
																		"src": "2938:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
																			"typeString": "mapping(uint256 => mapping(uint256 => bool))"
																		}
																	},
																	"id": 962,
																	"indexExpression": {
																		"id": 961,
																		"name": "_userId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 883,
																		"src": "2950:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2938:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																		"typeString": "mapping(uint256 => bool)"
																	}
																},
																"id": 964,
																"indexExpression": {
																	"id": 963,
																	"name": "targetPool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 916,
																	"src": "2959:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2938:32:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920707572636861736564206e65787420706f6f6c",
															"id": 966,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2972:29:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_820c20ccf70b35ca40ef8fcfc7c034bbd70a5d837f151a35affd990d9766d829",
																"typeString": "literal_string \"Already purchased next pool\""
															},
															"value": "Already purchased next pool"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_820c20ccf70b35ca40ef8fcfc7c034bbd70a5d837f151a35affd990d9766d829",
																"typeString": "literal_string \"Already purchased next pool\""
															}
														],
														"id": 959,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2929:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2929:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 968,
												"nodeType": "ExpressionStatement",
												"src": "2929:73:7"
											},
											{
												"expression": {
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 969,
															"name": "top",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "3040:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserPoolTopup_$2274_storage_ptr",
																"typeString": "struct Storage.UserPoolTopup storage pointer"
															}
														},
														"id": 971,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3044:11:7",
														"memberName": "nextPoolAmt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2271,
														"src": "3040:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 972,
														"name": "packagePrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 913,
														"src": "3059:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3040:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 974,
												"nodeType": "ExpressionStatement",
												"src": "3040:31:7"
											},
											{
												"expression": {
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 975,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 890,
															"src": "3113:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2051_storage_ptr",
																"typeString": "struct Storage.User storage pointer"
															}
														},
														"id": 977,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3118:9:7",
														"memberName": "poollevel",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2042,
														"src": "3113:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 978,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3131:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3113:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 980,
												"nodeType": "ExpressionStatement",
												"src": "3113:19:7"
											},
											{
												"expression": {
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 981,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 890,
															"src": "3149:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2051_storage_ptr",
																"typeString": "struct Storage.User storage pointer"
															}
														},
														"id": 983,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3154:11:7",
														"memberName": "poolDeposit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2044,
														"src": "3149:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 984,
														"name": "packagePrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 913,
														"src": "3169:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3149:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 986,
												"nodeType": "ExpressionStatement",
												"src": "3149:32:7"
											},
											{
												"expression": {
													"id": 993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 987,
																"name": "userHasPool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2324,
																"src": "3192:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
																	"typeString": "mapping(uint256 => mapping(uint256 => bool))"
																}
															},
															"id": 990,
															"indexExpression": {
																"id": 988,
																"name": "_userId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 883,
																"src": "3204:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3192:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 991,
														"indexExpression": {
															"id": 989,
															"name": "targetPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "3213:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3192:32:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 992,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3227:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3192:39:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 994,
												"nodeType": "ExpressionStatement",
												"src": "3192:39:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 996,
															"name": "targetPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "3288:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 997,
															"name": "_userId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "3300:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														{
															"id": 998,
															"name": "packagePrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "3309:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 995,
														"name": "_placeInPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1306,
														"src": "3275:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3275:47:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1000,
												"nodeType": "ExpressionStatement",
												"src": "3275:47:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1007,
																	"name": "packagePrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "3412:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 1008,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3450:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"expression": {
																		"id": 1009,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "3473:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1010,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3479:9:7",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "3473:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "3131",
																	"id": 1011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3516:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_11_by_1",
																		"typeString": "int_const 11"
																	},
																	"value": "11"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_11_by_1",
																		"typeString": "int_const 11"
																	}
																],
																"id": 1006,
																"name": "Deposit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2016,
																"src": "3381:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Deposit_$2016_storage_ptr_$",
																	"typeString": "type(struct Storage.Deposit storage pointer)"
																}
															},
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"3404:6:7",
																"3439:9:7",
																"3466:5:7",
																"3503:11:7"
															],
															"names": [
																"amount",
																"withdrawn",
																"start",
																"depositType"
															],
															"nodeType": "FunctionCall",
															"src": "3381:172:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deposit_$2016_memory_ptr",
																"typeString": "struct Storage.Deposit memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Deposit_$2016_memory_ptr",
																"typeString": "struct Storage.Deposit memory"
															}
														],
														"expression": {
															"expression": {
																"id": 1001,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 890,
																"src": "3362:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$2051_storage_ptr",
																	"typeString": "struct Storage.User storage pointer"
																}
															},
															"id": 1004,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3367:8:7",
															"memberName": "deposits",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2022,
															"src": "3362:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Deposit_$2016_storage_$dyn_storage",
																"typeString": "struct Storage.Deposit storage ref[] storage ref"
															}
														},
														"id": 1005,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3376:4:7",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "3362:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Deposit_$2016_storage_$dyn_storage_ptr_$_t_struct$_Deposit_$2016_storage_$returns$__$attached_to$_t_array$_t_struct$_Deposit_$2016_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct Storage.Deposit storage ref[] storage pointer,struct Storage.Deposit storage ref)"
														}
													},
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3362:192:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1014,
												"nodeType": "ExpressionStatement",
												"src": "3362:192:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1016,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3580:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3584:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3580:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1018,
															"name": "_userId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "3592:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1019,
																"name": "targetPool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 916,
																"src": "3601:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1020,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3614:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "3601:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "506f6f6c205570677261646520284561726e696e6729",
															"id": 1022,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3617:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a8a5b118f00f38fd0e122b1d0a87415e70fc4729fe34330c5bf5aa82af033b89",
																"typeString": "literal_string \"Pool Upgrade (Earning)\""
															},
															"value": "Pool Upgrade (Earning)"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_a8a5b118f00f38fd0e122b1d0a87415e70fc4729fe34330c5bf5aa82af033b89",
																"typeString": "literal_string \"Pool Upgrade (Earning)\""
															}
														],
														"id": 1015,
														"name": "Upgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2167,
														"src": "3572:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,string memory)"
														}
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:70:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1024,
												"nodeType": "EmitStatement",
												"src": "3567:75:7"
											}
										]
									},
									"functionSelector": "8e222e24",
									"id": 1026,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradePoolByEarning",
									"nameLocation": "2020:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "_userId",
												"nameLocation": "2048:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "2041:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 882,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2041:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "2062:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "2057:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 884,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2057:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2040:30:7"
									},
									"returnParameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2080:0:7"
									},
									"scope": 1905,
									"src": "2011:1645:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1198,
										"nodeType": "Block",
										"src": "3708:1696:7",
										"statements": [
											{
												"assignments": [
													1033
												],
												"declarations": [
													{
														"constant": false,
														"id": 1033,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "3732:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1198,
														"src": "3719:17:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$2051_storage_ptr",
															"typeString": "struct Storage.User"
														},
														"typeName": {
															"id": 1032,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1031,
																"name": "User",
																"nameLocations": [
																	"3719:4:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2051,
																"src": "3719:4:7"
															},
															"referencedDeclaration": 2051,
															"src": "3719:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2051_storage_ptr",
																"typeString": "struct Storage.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1037,
												"initialValue": {
													"baseExpression": {
														"id": 1034,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2098,
														"src": "3739:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2051_storage_$",
															"typeString": "mapping(uint256 => struct Storage.User storage ref)"
														}
													},
													"id": 1036,
													"indexExpression": {
														"id": 1035,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "3745:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3739:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$2051_storage",
														"typeString": "struct Storage.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3719:34:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1039,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1033,
																	"src": "3772:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$2051_storage_ptr",
																		"typeString": "struct Storage.User storage pointer"
																	}
																},
																"id": 1040,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3777:7:7",
																"memberName": "account",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2018,
																"src": "3772:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1041,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3788:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1042,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3792:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3788:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3772:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420796f7572206163636f756e74",
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3800:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d2be5388e395114c9bc63051fd6def6e9e0facc3465cd48116ad48bef63b0e75",
																"typeString": "literal_string \"Not your account\""
															},
															"value": "Not your account"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d2be5388e395114c9bc63051fd6def6e9e0facc3465cd48116ad48bef63b0e75",
																"typeString": "literal_string \"Not your account\""
															}
														],
														"id": 1038,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3764:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3764:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1046,
												"nodeType": "ExpressionStatement",
												"src": "3764:55:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1048,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1033,
																	"src": "3838:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$2051_storage_ptr",
																		"typeString": "struct Storage.User storage pointer"
																	}
																},
																"id": 1049,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3843:9:7",
																"memberName": "poollevel",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2042,
																"src": "3838:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "37",
																"id": 1050,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3855:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_7_by_1",
																	"typeString": "int_const 7"
																},
																"value": "7"
															},
															"src": "3838:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4174206d6178206c6576656c",
															"id": 1052,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3858:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4f6d6f7b763be4c628a2ded4434e90bc0b02384f0d3a36303458913b65373af4",
																"typeString": "literal_string \"At max level\""
															},
															"value": "At max level"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4f6d6f7b763be4c628a2ded4434e90bc0b02384f0d3a36303458913b65373af4",
																"typeString": "literal_string \"At max level\""
															}
														],
														"id": 1047,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3830:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3830:43:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1054,
												"nodeType": "ExpressionStatement",
												"src": "3830:43:7"
											},
											{
												"assignments": [
													1056
												],
												"declarations": [
													{
														"constant": false,
														"id": 1056,
														"mutability": "mutable",
														"name": "nextLevel",
														"nameLocation": "3899:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1198,
														"src": "3894:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1055,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3894:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1059,
												"initialValue": {
													"expression": {
														"id": 1057,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "3911:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$2051_storage_ptr",
															"typeString": "struct Storage.User storage pointer"
														}
													},
													"id": 1058,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3916:9:7",
													"memberName": "poollevel",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2042,
													"src": "3911:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3894:31:7"
											},
											{
												"assignments": [
													1061
												],
												"declarations": [
													{
														"constant": false,
														"id": 1061,
														"mutability": "mutable",
														"name": "nextPool",
														"nameLocation": "3943:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 1198,
														"src": "3938:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1060,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3938:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1064,
												"initialValue": {
													"expression": {
														"id": 1062,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "3954:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$2051_storage_ptr",
															"typeString": "struct Storage.User storage pointer"
														}
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3959:9:7",
													"memberName": "poollevel",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2042,
													"src": "3954:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3938:30:7"
											},
											{
												"assignments": [
													1066
												],
												"declarations": [
													{
														"constant": false,
														"id": 1066,
														"mutability": "mutable",
														"name": "requiredLevel",
														"nameLocation": "4020:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 1198,
														"src": "4015:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1065,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4015:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1070,
												"initialValue": {
													"baseExpression": {
														"id": 1067,
														"name": "minLevelForPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2232,
														"src": "4036:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$7_storage",
															"typeString": "uint256[7] storage ref"
														}
													},
													"id": 1069,
													"indexExpression": {
														"id": 1068,
														"name": "nextPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1061,
														"src": "4052:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4036:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4015:46:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1072,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1033,
																	"src": "4177:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$2051_storage_ptr",
																		"typeString": "struct Storage.User storage pointer"
																	}
																},
																"id": 1073,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4182:5:7",
																"memberName": "level",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2032,
																"src": "4177:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1074,
																"name": "requiredLevel",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1066,
																"src": "4191:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4177:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5570677261646520796f7572206c6576656c206669727374",
															"id": 1076,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4206:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3f4c21ebb40b1d6d7105da588a0eeee46f6103db1aedadf89b4d7409a5c1bb9a",
																"typeString": "literal_string \"Upgrade your level first\""
															},
															"value": "Upgrade your level first"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3f4c21ebb40b1d6d7105da588a0eeee46f6103db1aedadf89b4d7409a5c1bb9a",
																"typeString": "literal_string \"Upgrade your level first\""
															}
														],
														"id": 1071,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4169:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4169:64:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1078,
												"nodeType": "ExpressionStatement",
												"src": "4169:64:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1079,
														"name": "nextPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1061,
														"src": "4313:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1080,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4324:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4313:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1091,
												"nodeType": "IfStatement",
												"src": "4309:107:7",
												"trueBody": {
													"id": 1090,
													"nodeType": "Block",
													"src": "4327:89:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1086,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1083,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1033,
																				"src": "4350:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_User_$2051_storage_ptr",
																					"typeString": "struct Storage.User storage pointer"
																				}
																			},
																			"id": 1084,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4355:9:7",
																			"memberName": "poollevel",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2042,
																			"src": "4350:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 1085,
																			"name": "nextPool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1061,
																			"src": "4368:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4350:26:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4275792070726576696f757320706f6f6c206669727374",
																		"id": 1087,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4378:25:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_5f5fa9d58a74e1ce1932ae4e067a9f842704fbfbc24d932ec13f6cf4e6e7c5b8",
																			"typeString": "literal_string \"Buy previous pool first\""
																		},
																		"value": "Buy previous pool first"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_5f5fa9d58a74e1ce1932ae4e067a9f842704fbfbc24d932ec13f6cf4e6e7c5b8",
																			"typeString": "literal_string \"Buy previous pool first\""
																		}
																	],
																	"id": 1082,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4342:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1088,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4342:62:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1089,
															"nodeType": "ExpressionStatement",
															"src": "4342:62:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4434:31:7",
															"subExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1093,
																		"name": "userHasPool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2324,
																		"src": "4435:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
																			"typeString": "mapping(uint256 => mapping(uint256 => bool))"
																		}
																	},
																	"id": 1095,
																	"indexExpression": {
																		"id": 1094,
																		"name": "_userId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1028,
																		"src": "4447:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4435:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																		"typeString": "mapping(uint256 => bool)"
																	}
																},
																"id": 1097,
																"indexExpression": {
																	"id": 1096,
																	"name": "nextPool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1061,
																	"src": "4456:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4435:30:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f6f6c20616c726561647920707572636861736564",
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4467:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_909f3d3b7d1bfc91fce0554a59fdfa995b3e693af9ec22f5924ab4d305e96bc1",
																"typeString": "literal_string \"Pool already purchased\""
															},
															"value": "Pool already purchased"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_909f3d3b7d1bfc91fce0554a59fdfa995b3e693af9ec22f5924ab4d305e96bc1",
																"typeString": "literal_string \"Pool already purchased\""
															}
														],
														"id": 1092,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4426:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4426:66:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1101,
												"nodeType": "ExpressionStatement",
												"src": "4426:66:7"
											},
											{
												"assignments": [
													1103
												],
												"declarations": [
													{
														"constant": false,
														"id": 1103,
														"mutability": "mutable",
														"name": "packagePrice",
														"nameLocation": "4522:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 1198,
														"src": "4517:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1102,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4517:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1107,
												"initialValue": {
													"baseExpression": {
														"id": 1104,
														"name": "poolPackages",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2208,
														"src": "4537:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1106,
													"indexExpression": {
														"id": 1105,
														"name": "nextPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1061,
														"src": "4550:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4537:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4517:42:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1111,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4645:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4649:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4645:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1115,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4665:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_InfinityPool_$1905",
																		"typeString": "contract InfinityPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_InfinityPool_$1905",
																		"typeString": "contract InfinityPool"
																	}
																],
																"id": 1114,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4657:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1113,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4657:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4657:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1117,
															"name": "packagePrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "4672:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1108,
															"name": "usdt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1919,
															"src": "4627:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														"id": 1110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4632:12:7",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 231,
														"src": "4627:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4627:58:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1119,
												"nodeType": "ExpressionStatement",
												"src": "4627:58:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1120,
														"name": "nextPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1061,
														"src": "4709:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4721:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4709:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1147,
												"nodeType": "IfStatement",
												"src": "4706:234:7",
												"trueBody": {
													"id": 1146,
													"nodeType": "Block",
													"src": "4723:217:7",
													"statements": [
														{
															"assignments": [
																1124
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1124,
																	"mutability": "mutable",
																	"name": "_sponsorId",
																	"nameLocation": "4743:10:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1146,
																	"src": "4738:15:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1123,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "4738:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1127,
															"initialValue": {
																"expression": {
																	"id": 1125,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1033,
																	"src": "4756:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$2051_storage_ptr",
																		"typeString": "struct Storage.User storage pointer"
																	}
																},
																"id": 1126,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4761:9:7",
																"memberName": "sponsorId",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2028,
																"src": "4756:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4738:32:7"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1133,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1128,
																				"name": "users",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2098,
																				"src": "4788:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2051_storage_$",
																					"typeString": "mapping(uint256 => struct Storage.User storage ref)"
																				}
																			},
																			"id": 1130,
																			"indexExpression": {
																				"id": 1129,
																				"name": "_sponsorId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1124,
																				"src": "4794:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4788:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_User_$2051_storage",
																				"typeString": "struct Storage.User storage ref"
																			}
																		},
																		"id": 1131,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4806:16:7",
																		"memberName": "registrationTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2050,
																		"src": "4788:34:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "313732383030",
																		"id": 1132,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4825:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_172800_by_1",
																			"typeString": "int_const 172800"
																		},
																		"value": "172800"
																	},
																	"src": "4788:43:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"expression": {
																		"id": 1134,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "4835:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4841:9:7",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "4835:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4788:62:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1145,
															"nodeType": "IfStatement",
															"src": "4785:144:7",
															"trueBody": {
																"id": 1144,
																"nodeType": "Block",
																"src": "4851:78:7",
																"statements": [
																	{
																		"expression": {
																			"id": 1142,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 1137,
																						"name": "users",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2098,
																						"src": "4871:5:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2051_storage_$",
																							"typeString": "mapping(uint256 => struct Storage.User storage ref)"
																						}
																					},
																					"id": 1139,
																					"indexExpression": {
																						"id": 1138,
																						"name": "_sponsorId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1124,
																						"src": "4877:10:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "4871:17:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_User_$2051_storage",
																						"typeString": "struct Storage.User storage ref"
																					}
																				},
																				"id": 1140,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "4889:19:7",
																				"memberName": "directPoolQualified",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2036,
																				"src": "4871:37:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"hexValue": "31",
																				"id": 1141,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4912:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "4871:42:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1143,
																		"nodeType": "ExpressionStatement",
																		"src": "4871:42:7"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1148,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1033,
															"src": "4950:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2051_storage_ptr",
																"typeString": "struct Storage.User storage pointer"
															}
														},
														"id": 1150,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4955:9:7",
														"memberName": "poollevel",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2042,
														"src": "4950:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1151,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4950:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1153,
												"nodeType": "ExpressionStatement",
												"src": "4950:19:7"
											},
											{
												"expression": {
													"id": 1160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1154,
																"name": "userHasPool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2324,
																"src": "4980:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
																	"typeString": "mapping(uint256 => mapping(uint256 => bool))"
																}
															},
															"id": 1157,
															"indexExpression": {
																"id": 1155,
																"name": "_userId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1028,
																"src": "4992:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4980:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 1158,
														"indexExpression": {
															"id": 1156,
															"name": "nextPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "5001:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4980:30:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1159,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5013:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4980:37:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1161,
												"nodeType": "ExpressionStatement",
												"src": "4980:37:7"
											},
											{
												"expression": {
													"id": 1166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1162,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1033,
															"src": "5028:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2051_storage_ptr",
																"typeString": "struct Storage.User storage pointer"
															}
														},
														"id": 1164,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5033:11:7",
														"memberName": "poolDeposit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2044,
														"src": "5028:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1165,
														"name": "packagePrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1103,
														"src": "5048:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5028:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1167,
												"nodeType": "ExpressionStatement",
												"src": "5028:32:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1169,
															"name": "nextLevel",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "5084:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1170,
															"name": "_userId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "5095:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1171,
															"name": "packagePrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "5104:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1168,
														"name": "_placeInPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1306,
														"src": "5071:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5071:46:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1173,
												"nodeType": "ExpressionStatement",
												"src": "5071:46:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1180,
																	"name": "packagePrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1103,
																	"src": "5210:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 1181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5248:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"expression": {
																		"id": 1182,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "5271:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5277:9:7",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "5271:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "3130",
																	"id": 1184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5313:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	}
																],
																"id": 1179,
																"name": "Deposit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2016,
																"src": "5179:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Deposit_$2016_storage_ptr_$",
																	"typeString": "type(struct Storage.Deposit storage pointer)"
																}
															},
															"id": 1185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"5202:6:7",
																"5237:9:7",
																"5264:5:7",
																"5301:11:7"
															],
															"names": [
																"amount",
																"withdrawn",
																"start",
																"depositType"
															],
															"nodeType": "FunctionCall",
															"src": "5179:148:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deposit_$2016_memory_ptr",
																"typeString": "struct Storage.Deposit memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Deposit_$2016_memory_ptr",
																"typeString": "struct Storage.Deposit memory"
															}
														],
														"expression": {
															"expression": {
																"id": 1174,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1033,
																"src": "5160:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$2051_storage_ptr",
																	"typeString": "struct Storage.User storage pointer"
																}
															},
															"id": 1177,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5165:8:7",
															"memberName": "deposits",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2022,
															"src": "5160:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Deposit_$2016_storage_$dyn_storage",
																"typeString": "struct Storage.Deposit storage ref[] storage ref"
															}
														},
														"id": 1178,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5174:4:7",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "5160:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Deposit_$2016_storage_$dyn_storage_ptr_$_t_struct$_Deposit_$2016_storage_$returns$__$attached_to$_t_array$_t_struct$_Deposit_$2016_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct Storage.Deposit storage ref[] storage pointer,struct Storage.Deposit storage ref)"
														}
													},
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:168:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1187,
												"nodeType": "ExpressionStatement",
												"src": "5160:168:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1189,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5354:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5358:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5354:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1191,
															"name": "_userId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "5366:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1192,
																"name": "nextPool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1061,
																"src": "5375:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5386:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "5375:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "506f6f6c",
															"id": 1195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5389:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4a62f5c1187999cdd374fd40d850be57b4952a965136e01501e2ac9ed75fe27f",
																"typeString": "literal_string \"Pool\""
															},
															"value": "Pool"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_4a62f5c1187999cdd374fd40d850be57b4952a965136e01501e2ac9ed75fe27f",
																"typeString": "literal_string \"Pool\""
															}
														],
														"id": 1188,
														"name": "Upgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2167,
														"src": "5346:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,string memory)"
														}
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5346:50:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1197,
												"nodeType": "EmitStatement",
												"src": "5341:55:7"
											}
										]
									},
									"functionSelector": "4060160a",
									"id": 1199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradePool",
									"nameLocation": "3673:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "_userId",
												"nameLocation": "3690:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "3685:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1027,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3685:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3684:14:7"
									},
									"returnParameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3708:0:7"
									},
									"scope": 1905,
									"src": "3664:1740:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1305,
										"nodeType": "Block",
										"src": "5500:1026:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1209,
																"name": "poolId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1201,
																"src": "5519:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 1210,
																	"name": "poolPackages",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2208,
																	"src": "5528:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 1211,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5541:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "5528:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5519:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964",
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5549:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c84d91f537f720db0d8ff8472db06e97a59d22ac83366d0af861134338d0e345",
																"typeString": "literal_string \"Invalid\""
															},
															"value": "Invalid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c84d91f537f720db0d8ff8472db06e97a59d22ac83366d0af861134338d0e345",
																"typeString": "literal_string \"Invalid\""
															}
														],
														"id": 1208,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5511:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5511:48:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1215,
												"nodeType": "ExpressionStatement",
												"src": "5511:48:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1217,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5578:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5582:5:7",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "5578:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"baseExpression": {
																	"id": 1219,
																	"name": "poolPackages",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2208,
																	"src": "5591:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 1221,
																"indexExpression": {
																	"id": 1220,
																	"name": "poolId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1201,
																	"src": "5604:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5591:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5578:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e636f727265637420616d6f756e74",
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5613:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f313977f9f132db863cda3455f302e47301ce6a1616834c5cd6d5972d9a8c2f4",
																"typeString": "literal_string \"Incorrect amount\""
															},
															"value": "Incorrect amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f313977f9f132db863cda3455f302e47301ce6a1616834c5cd6d5972d9a8c2f4",
																"typeString": "literal_string \"Incorrect amount\""
															}
														],
														"id": 1216,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5570:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5570:62:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1225,
												"nodeType": "ExpressionStatement",
												"src": "5570:62:7"
											},
											{
												"assignments": [
													1227
												],
												"declarations": [
													{
														"constant": false,
														"id": 1227,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "5715:5:7",
														"nodeType": "VariableDeclaration",
														"scope": 1305,
														"src": "5710:10:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1226,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5710:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1232,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1228,
															"name": "poolUsers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2318,
															"src": "5723:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
																"typeString": "mapping(uint256 => uint256[] storage ref)"
															}
														},
														"id": 1230,
														"indexExpression": {
															"id": 1229,
															"name": "poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "5733:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5723:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5741:6:7",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "5723:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5710:37:7"
											},
											{
												"assignments": [
													1234
												],
												"declarations": [
													{
														"constant": false,
														"id": 1234,
														"mutability": "mutable",
														"name": "newUserId",
														"nameLocation": "5826:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1305,
														"src": "5821:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1233,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5821:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1241,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1235,
														"name": "defaultRefId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1927,
														"src": "5838:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [
															{
																"id": 1238,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1227,
																"src": "5858:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1237,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5853:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1236,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "5853:4:7",
																"typeDescriptions": {}
															}
														},
														"id": 1239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5853:11:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5838:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5821:43:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1246,
															"name": "newUserId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "5898:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 1242,
																"name": "poolUsers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2318,
																"src": "5875:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(uint256 => uint256[] storage ref)"
																}
															},
															"id": 1244,
															"indexExpression": {
																"id": 1243,
																"name": "poolId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1201,
																"src": "5885:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5875:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5893:4:7",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "5875:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5875:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1248,
												"nodeType": "ExpressionStatement",
												"src": "5875:33:7"
											},
											{
												"assignments": [
													1250
												],
												"declarations": [
													{
														"constant": false,
														"id": 1250,
														"mutability": "mutable",
														"name": "parentIndex",
														"nameLocation": "5957:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1305,
														"src": "5949:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1249,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5949:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1257,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1251,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1227,
																	"src": "5972:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5980:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "5972:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1254,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5971:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "33",
														"id": 1255,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5985:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "5971:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5949:37:7"
											},
											{
												"assignments": [
													1259
												],
												"declarations": [
													{
														"constant": false,
														"id": 1259,
														"mutability": "mutable",
														"name": "parentId",
														"nameLocation": "6002:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 1305,
														"src": "5997:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1258,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5997:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1265,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1260,
															"name": "poolUsers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2318,
															"src": "6013:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
																"typeString": "mapping(uint256 => uint256[] storage ref)"
															}
														},
														"id": 1262,
														"indexExpression": {
															"id": 1261,
															"name": "poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "6023:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6013:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1264,
													"indexExpression": {
														"id": 1263,
														"name": "parentIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1250,
														"src": "6031:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6013:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5997:46:7"
											},
											{
												"expression": {
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1266,
																"name": "userPooldtl",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2299,
																"src": "6082:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_UserPool_$2269_storage_$_$",
																	"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.UserPool storage ref))"
																}
															},
															"id": 1269,
															"indexExpression": {
																"id": 1267,
																"name": "poolId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1201,
																"src": "6094:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6082:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserPool_$2269_storage_$",
																"typeString": "mapping(uint256 => struct Storage.UserPool storage ref)"
															}
														},
														"id": 1270,
														"indexExpression": {
															"id": 1268,
															"name": "newUserId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "6102:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6082:30:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserPool_$2269_storage",
															"typeString": "struct Storage.UserPool storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1272,
																"name": "newUserId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1234,
																"src": "6147:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1273,
																"name": "userMainId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1203,
																"src": "6183:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1274,
																"name": "poolId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1201,
																"src": "6220:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1275,
																"name": "parentId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1259,
																"src": "6255:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "30",
																"id": 1276,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6294:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1271,
															"name": "UserPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2269,
															"src": "6115:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_UserPool_$2269_storage_ptr_$",
																"typeString": "type(struct Storage.UserPool storage pointer)"
															}
														},
														"id": 1277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"6143:2:7",
															"6175:6:7",
															"6212:6:7",
															"6245:8:7",
															"6282:10:7"
														],
														"names": [
															"id",
															"mainid",
															"poolId",
															"parentId",
															"bonusCount"
														],
														"nodeType": "FunctionCall",
														"src": "6115:196:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserPool_$2269_memory_ptr",
															"typeString": "struct Storage.UserPool memory"
														}
													},
													"src": "6082:229:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserPool_$2269_storage",
														"typeString": "struct Storage.UserPool storage ref"
													}
												},
												"id": 1279,
												"nodeType": "ExpressionStatement",
												"src": "6082:229:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1286,
															"name": "newUserId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "6374:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1280,
																	"name": "userIdPerPool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2313,
																	"src": "6335:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
																		"typeString": "mapping(uint256 => mapping(uint256 => uint256[] storage ref))"
																	}
																},
																"id": 1283,
																"indexExpression": {
																	"id": 1281,
																	"name": "poolId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1201,
																	"src": "6349:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6335:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(uint256 => uint256[] storage ref)"
																}
															},
															"id": 1284,
															"indexExpression": {
																"id": 1282,
																"name": "userMainId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1203,
																"src": "6357:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6335:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1285,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6369:4:7",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "6335:38:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6335:49:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1288,
												"nodeType": "ExpressionStatement",
												"src": "6335:49:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1295,
															"name": "newUserId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "6431:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1289,
																	"name": "userChildren",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2306,
																	"src": "6395:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
																		"typeString": "mapping(uint256 => mapping(uint256 => uint256[] storage ref))"
																	}
																},
																"id": 1292,
																"indexExpression": {
																	"id": 1290,
																	"name": "poolId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1201,
																	"src": "6408:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6395:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(uint256 => uint256[] storage ref)"
																}
															},
															"id": 1293,
															"indexExpression": {
																"id": 1291,
																"name": "parentId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1259,
																"src": "6416:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6395:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1294,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6426:4:7",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "6395:35:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6395:46:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1297,
												"nodeType": "ExpressionStatement",
												"src": "6395:46:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1299,
															"name": "parentId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1259,
															"src": "6475:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1300,
															"name": "poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "6485:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1301,
															"name": "userMainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1203,
															"src": "6493:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1302,
															"name": "packagePrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1205,
															"src": "6505:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1298,
														"name": "_distributePoolIncome",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1458,
														"src": "6452:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6452:66:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1304,
												"nodeType": "ExpressionStatement",
												"src": "6452:66:7"
											}
										]
									},
									"id": 1306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_placeInPool",
									"nameLocation": "5427:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "5448:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "5440:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5440:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "userMainId",
												"nameLocation": "5461:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "5456:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1202,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5456:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "packagePrice",
												"nameLocation": "5478:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "5473:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1204,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5473:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5439:52:7"
									},
									"returnParameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5500:0:7"
									},
									"scope": 1905,
									"src": "5418:1108:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1457,
										"nodeType": "Block",
										"src": "6636:1564:7",
										"statements": [
											{
												"assignments": [
													1318
												],
												"declarations": [
													{
														"constant": false,
														"id": 1318,
														"mutability": "mutable",
														"name": "currentParent",
														"nameLocation": "6661:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 1457,
														"src": "6656:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1317,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6656:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1320,
												"initialValue": {
													"id": 1319,
													"name": "_parentId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1308,
													"src": "6677:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6656:30:7"
											},
											{
												"assignments": [
													1322
												],
												"declarations": [
													{
														"constant": false,
														"id": 1322,
														"mutability": "mutable",
														"name": "amountPerLevel",
														"nameLocation": "6709:14:7",
														"nodeType": "VariableDeclaration",
														"scope": 1457,
														"src": "6704:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1321,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6704:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1326,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1323,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1314,
														"src": "6726:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "33",
														"id": 1324,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6736:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "6726:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6704:33:7"
											},
											{
												"assignments": [
													1328
												],
												"declarations": [
													{
														"constant": false,
														"id": 1328,
														"mutability": "mutable",
														"name": "totalDistributed",
														"nameLocation": "6755:16:7",
														"nodeType": "VariableDeclaration",
														"scope": 1457,
														"src": "6750:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1327,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6750:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1330,
												"initialValue": {
													"hexValue": "30",
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6774:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6750:25:7"
											},
											{
												"body": {
													"id": 1440,
													"nodeType": "Block",
													"src": "6811:1158:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1341,
																		"name": "currentParent",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1318,
																		"src": "6843:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6860:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6843:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1344,
																		"name": "currentParent",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1318,
																		"src": "6865:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 1345,
																		"name": "defaultRefId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1927,
																		"src": "6882:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6865:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6843:51:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1365,
															"nodeType": "IfStatement",
															"src": "6839:335:7",
															"trueBody": {
																"id": 1364,
																"nodeType": "Block",
																"src": "6896:278:7",
																"statements": [
																	{
																		"assignments": [
																			1349
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1349,
																				"mutability": "mutable",
																				"name": "remaining",
																				"nameLocation": "6991:9:7",
																				"nodeType": "VariableDeclaration",
																				"scope": 1364,
																				"src": "6986:14:7",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1348,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "6986:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1353,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1350,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1314,
																				"src": "7003:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1351,
																				"name": "totalDistributed",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1328,
																				"src": "7013:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7003:26:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "6986:43:7"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1356,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1354,
																				"name": "remaining",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1349,
																				"src": "7052:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1355,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7064:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "7052:13:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1362,
																		"nodeType": "IfStatement",
																		"src": "7048:87:7",
																		"trueBody": {
																			"id": 1361,
																			"nodeType": "Block",
																			"src": "7067:68:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"id": 1358,
																								"name": "remaining",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1349,
																								"src": "7105:9:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 1357,
																							"name": "_sendToCreator",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2518,
																							"src": "7090:14:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																								"typeString": "function (uint256)"
																							}
																						},
																						"id": 1359,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "7090:25:7",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 1360,
																					"nodeType": "ExpressionStatement",
																					"src": "7090:25:7"
																				}
																			]
																		}
																	},
																	{
																		"id": 1363,
																		"nodeType": "Break",
																		"src": "7153:5:7"
																	}
																]
															}
														},
														{
															"assignments": [
																1368
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1368,
																	"mutability": "mutable",
																	"name": "userp",
																	"nameLocation": "7207:5:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1440,
																	"src": "7190:22:7",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserPool_$2269_storage_ptr",
																		"typeString": "struct Storage.UserPool"
																	},
																	"typeName": {
																		"id": 1367,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1366,
																			"name": "UserPool",
																			"nameLocations": [
																				"7190:8:7"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 2269,
																			"src": "7190:8:7"
																		},
																		"referencedDeclaration": 2269,
																		"src": "7190:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserPool_$2269_storage_ptr",
																			"typeString": "struct Storage.UserPool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1374,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1369,
																		"name": "userPooldtl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2299,
																		"src": "7215:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_UserPool_$2269_storage_$_$",
																			"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.UserPool storage ref))"
																		}
																	},
																	"id": 1371,
																	"indexExpression": {
																		"id": 1370,
																		"name": "_poolId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1310,
																		"src": "7227:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7215:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserPool_$2269_storage_$",
																		"typeString": "mapping(uint256 => struct Storage.UserPool storage ref)"
																	}
																},
																"id": 1373,
																"indexExpression": {
																	"id": 1372,
																	"name": "currentParent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1318,
																	"src": "7236:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7215:35:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserPool_$2269_storage",
																	"typeString": "struct Storage.UserPool storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7190:60:7"
														},
														{
															"assignments": [
																1376
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1376,
																	"mutability": "mutable",
																	"name": "parentMainId",
																	"nameLocation": "7270:12:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1440,
																	"src": "7265:17:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1375,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "7265:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1379,
															"initialValue": {
																"expression": {
																	"id": 1377,
																	"name": "userp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1368,
																	"src": "7285:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserPool_$2269_storage_ptr",
																		"typeString": "struct Storage.UserPool storage pointer"
																	}
																},
																"id": 1378,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7291:6:7",
																"memberName": "mainid",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2262,
																"src": "7285:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7265:32:7"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1380,
																		"name": "userp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1368,
																		"src": "7333:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserPool_$2269_storage_ptr",
																			"typeString": "struct Storage.UserPool storage pointer"
																		}
																	},
																	"id": 1381,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7339:10:7",
																	"memberName": "bonusCount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2268,
																	"src": "7333:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "3339",
																	"id": 1382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7352:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_39_by_1",
																		"typeString": "int_const 39"
																	},
																	"value": "39"
																},
																"src": "7333:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1430,
															"nodeType": "IfStatement",
															"src": "7329:497:7",
															"trueBody": {
																"id": 1429,
																"nodeType": "Block",
																"src": "7356:470:7",
																"statements": [
																	{
																		"expression": {
																			"id": 1388,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 1384,
																					"name": "userp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1368,
																					"src": "7375:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserPool_$2269_storage_ptr",
																						"typeString": "struct Storage.UserPool storage pointer"
																					}
																				},
																				"id": 1386,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "7381:10:7",
																				"memberName": "bonusCount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2268,
																				"src": "7375:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"hexValue": "31",
																				"id": 1387,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7395:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "7375:21:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1389,
																		"nodeType": "ExpressionStatement",
																		"src": "7375:21:7"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1393,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1390,
																					"name": "userp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1368,
																					"src": "7421:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserPool_$2269_storage_ptr",
																						"typeString": "struct Storage.UserPool storage pointer"
																					}
																				},
																				"id": 1391,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7427:10:7",
																				"memberName": "bonusCount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2268,
																				"src": "7421:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"hexValue": "3234",
																				"id": 1392,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7441:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_24_by_1",
																					"typeString": "int_const 24"
																				},
																				"value": "24"
																			},
																			"src": "7421:22:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1406,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 1403,
																						"name": "userp",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1368,
																						"src": "7562:5:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserPool_$2269_storage_ptr",
																							"typeString": "struct Storage.UserPool storage pointer"
																						}
																					},
																					"id": 1404,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "7568:10:7",
																					"memberName": "bonusCount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2268,
																					"src": "7562:16:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<=",
																				"rightExpression": {
																					"hexValue": "3336",
																					"id": 1405,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7582:2:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_36_by_1",
																						"typeString": "int_const 36"
																					},
																					"value": "36"
																				},
																				"src": "7562:22:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseBody": {
																				"id": 1426,
																				"nodeType": "Block",
																				"src": "7701:108:7",
																				"statements": [
																					{
																						"expression": {
																							"id": 1424,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftHandSide": {
																								"expression": {
																									"baseExpression": {
																										"baseExpression": {
																											"id": 1417,
																											"name": "userPooltopup",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2292,
																											"src": "7724:13:7",
																											"typeDescriptions": {
																												"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_UserPoolTopup_$2274_storage_$_$",
																												"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.UserPoolTopup storage ref))"
																											}
																										},
																										"id": 1420,
																										"indexExpression": {
																											"id": 1418,
																											"name": "_poolId",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1310,
																											"src": "7738:7:7",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "7724:22:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserPoolTopup_$2274_storage_$",
																											"typeString": "mapping(uint256 => struct Storage.UserPoolTopup storage ref)"
																										}
																									},
																									"id": 1421,
																									"indexExpression": {
																										"id": 1419,
																										"name": "parentMainId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1376,
																										"src": "7747:12:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "7724:36:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_UserPoolTopup_$2274_storage",
																										"typeString": "struct Storage.UserPoolTopup storage ref"
																									}
																								},
																								"id": 1422,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": true,
																								"memberLocation": "7761:10:7",
																								"memberName": "reTopupAmt",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 2273,
																								"src": "7724:47:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "Assignment",
																							"operator": "+=",
																							"rightHandSide": {
																								"id": 1423,
																								"name": "amountPerLevel",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1322,
																								"src": "7775:14:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "7724:65:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1425,
																						"nodeType": "ExpressionStatement",
																						"src": "7724:65:7"
																					}
																				]
																			},
																			"id": 1427,
																			"nodeType": "IfStatement",
																			"src": "7558:251:7",
																			"trueBody": {
																				"id": 1416,
																				"nodeType": "Block",
																				"src": "7586:109:7",
																				"statements": [
																					{
																						"expression": {
																							"id": 1414,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftHandSide": {
																								"expression": {
																									"baseExpression": {
																										"baseExpression": {
																											"id": 1407,
																											"name": "userPooltopup",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2292,
																											"src": "7609:13:7",
																											"typeDescriptions": {
																												"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_UserPoolTopup_$2274_storage_$_$",
																												"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.UserPoolTopup storage ref))"
																											}
																										},
																										"id": 1410,
																										"indexExpression": {
																											"id": 1408,
																											"name": "_poolId",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1310,
																											"src": "7623:7:7",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "7609:22:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserPoolTopup_$2274_storage_$",
																											"typeString": "mapping(uint256 => struct Storage.UserPoolTopup storage ref)"
																										}
																									},
																									"id": 1411,
																									"indexExpression": {
																										"id": 1409,
																										"name": "parentMainId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1376,
																										"src": "7632:12:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "7609:36:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_UserPoolTopup_$2274_storage",
																										"typeString": "struct Storage.UserPoolTopup storage ref"
																									}
																								},
																								"id": 1412,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": true,
																								"memberLocation": "7646:11:7",
																								"memberName": "nextPoolAmt",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 2271,
																								"src": "7609:48:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "Assignment",
																							"operator": "+=",
																							"rightHandSide": {
																								"id": 1413,
																								"name": "amountPerLevel",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1322,
																								"src": "7661:14:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "7609:66:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1415,
																						"nodeType": "ExpressionStatement",
																						"src": "7609:66:7"
																					}
																				]
																			}
																		},
																		"id": 1428,
																		"nodeType": "IfStatement",
																		"src": "7417:392:7",
																		"trueBody": {
																			"id": 1402,
																			"nodeType": "Block",
																			"src": "7445:107:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"id": 1395,
																								"name": "parentMainId",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1376,
																								"src": "7483:12:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 1396,
																								"name": "_userMainId",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1312,
																								"src": "7497:11:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 1397,
																								"name": "amountPerLevel",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1322,
																								"src": "7510:14:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"hexValue": "31",
																								"id": 1398,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "7526:1:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							{
																								"hexValue": "3130",
																								"id": 1399,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "7529:2:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_10_by_1",
																									"typeString": "int_const 10"
																								},
																								"value": "10"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								{
																									"typeIdentifier": "t_rational_10_by_1",
																									"typeString": "int_const 10"
																								}
																							],
																							"id": 1394,
																							"name": "_payPoolIncome",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1564,
																							"src": "7468:14:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																								"typeString": "function (uint256,uint256,uint256,uint256,uint256)"
																							}
																						},
																						"id": 1400,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "7468:64:7",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 1401,
																					"nodeType": "ExpressionStatement",
																					"src": "7468:64:7"
																				}
																			]
																		}
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1433,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1431,
																	"name": "totalDistributed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1328,
																	"src": "7849:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1432,
																	"name": "amountPerLevel",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1322,
																	"src": "7869:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7849:34:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1434,
															"nodeType": "ExpressionStatement",
															"src": "7849:34:7"
														},
														{
															"expression": {
																"id": 1438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1435,
																	"name": "currentParent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1318,
																	"src": "7927:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1436,
																		"name": "userp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1368,
																		"src": "7943:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserPool_$2269_storage_ptr",
																			"typeString": "struct Storage.UserPool storage pointer"
																		}
																	},
																	"id": 1437,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7949:8:7",
																	"memberName": "parentId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2266,
																	"src": "7943:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7927:30:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1439,
															"nodeType": "ExpressionStatement",
															"src": "7927:30:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1335,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1332,
														"src": "6802:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "33",
														"id": 1336,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6804:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "6802:3:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1441,
												"initializationExpression": {
													"assignments": [
														1332
													],
													"declarations": [
														{
															"constant": false,
															"id": 1332,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6797:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 1441,
															"src": "6792:6:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1331,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "6792:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1334,
													"initialValue": {
														"hexValue": "30",
														"id": 1333,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6799:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6792:8:7"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1339,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6807:3:7",
														"subExpression": {
															"id": 1338,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "6807:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1340,
													"nodeType": "ExpressionStatement",
													"src": "6807:3:7"
												},
												"nodeType": "ForStatement",
												"src": "6788:1181:7"
											},
											{
												"assignments": [
													1443
												],
												"declarations": [
													{
														"constant": false,
														"id": 1443,
														"mutability": "mutable",
														"name": "_remaining",
														"nameLocation": "8068:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1457,
														"src": "8063:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1442,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8063:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1447,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1444,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1314,
														"src": "8081:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1445,
														"name": "totalDistributed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1328,
														"src": "8091:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8081:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8063:44:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1448,
														"name": "_remaining",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1443,
														"src": "8122:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1449,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8135:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8122:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1456,
												"nodeType": "IfStatement",
												"src": "8118:73:7",
												"trueBody": {
													"id": 1455,
													"nodeType": "Block",
													"src": "8138:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1452,
																		"name": "_remaining",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1443,
																		"src": "8168:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1451,
																	"name": "_sendToCreator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2518,
																	"src": "8153:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8153:26:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1454,
															"nodeType": "ExpressionStatement",
															"src": "8153:26:7"
														}
													]
												}
											}
										]
									},
									"id": 1458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_distributePoolIncome",
									"nameLocation": "6543:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "_parentId",
												"nameLocation": "6571:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1458,
												"src": "6566:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1307,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6566:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "6587:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1458,
												"src": "6582:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1309,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6582:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "_userMainId",
												"nameLocation": "6601:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1458,
												"src": "6596:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1311,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6596:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "6619:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1458,
												"src": "6614:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1313,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6614:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6564:63:7"
									},
									"returnParameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6636:0:7"
									},
									"scope": 1905,
									"src": "6534:1666:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1563,
										"nodeType": "Block",
										"src": "8318:847:7",
										"statements": [
											{
												"assignments": [
													1473
												],
												"declarations": [
													{
														"constant": false,
														"id": 1473,
														"mutability": "mutable",
														"name": "inc",
														"nameLocation": "8359:3:7",
														"nodeType": "VariableDeclaration",
														"scope": 1563,
														"src": "8340:22:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserIncome_$2078_storage_ptr",
															"typeString": "struct Storage.UserIncome"
														},
														"typeName": {
															"id": 1472,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1471,
																"name": "UserIncome",
																"nameLocations": [
																	"8340:10:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2078,
																"src": "8340:10:7"
															},
															"referencedDeclaration": 2078,
															"src": "8340:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserIncome_$2078_storage_ptr",
																"typeString": "struct Storage.UserIncome"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1477,
												"initialValue": {
													"baseExpression": {
														"id": 1474,
														"name": "userIncomes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2103,
														"src": "8365:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserIncome_$2078_storage_$",
															"typeString": "mapping(uint256 => struct Storage.UserIncome storage ref)"
														}
													},
													"id": 1476,
													"indexExpression": {
														"id": 1475,
														"name": "receiverId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1460,
														"src": "8377:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8365:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserIncome_$2078_storage",
														"typeString": "struct Storage.UserIncome storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8340:48:7"
											},
											{
												"expression": {
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1478,
															"name": "inc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1473,
															"src": "8399:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserIncome_$2078_storage_ptr",
																"typeString": "struct Storage.UserIncome storage pointer"
															}
														},
														"id": 1480,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8403:11:7",
														"memberName": "totalIncome",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2053,
														"src": "8399:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1481,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1464,
														"src": "8418:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8399:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1483,
												"nodeType": "ExpressionStatement",
												"src": "8399:25:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1484,
														"name": "_incomeType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1468,
														"src": "8438:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3130",
														"id": 1485,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8453:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "8438:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1494,
												"nodeType": "IfStatement",
												"src": "8435:73:7",
												"trueBody": {
													"id": 1493,
													"nodeType": "Block",
													"src": "8456:52:7",
													"statements": [
														{
															"expression": {
																"id": 1491,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1487,
																		"name": "inc",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1473,
																		"src": "8472:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserIncome_$2078_storage_ptr",
																			"typeString": "struct Storage.UserIncome storage pointer"
																		}
																	},
																	"id": 1489,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8476:10:7",
																	"memberName": "poolIncome",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2069,
																	"src": "8472:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1490,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1464,
																	"src": "8490:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8472:24:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1492,
															"nodeType": "ExpressionStatement",
															"src": "8472:24:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1495,
														"name": "_incomeType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1468,
														"src": "8521:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3131",
														"id": 1496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8536:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_11_by_1",
															"typeString": "int_const 11"
														},
														"value": "11"
													},
													"src": "8521:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1505,
												"nodeType": "IfStatement",
												"src": "8518:76:7",
												"trueBody": {
													"id": 1504,
													"nodeType": "Block",
													"src": "8539:55:7",
													"statements": [
														{
															"expression": {
																"id": 1502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1498,
																		"name": "inc",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1473,
																		"src": "8555:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserIncome_$2078_storage_ptr",
																			"typeString": "struct Storage.UserIncome storage pointer"
																		}
																	},
																	"id": 1500,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8559:13:7",
																	"memberName": "boosterIncome",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2071,
																	"src": "8555:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1501,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1464,
																	"src": "8576:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8555:27:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1503,
															"nodeType": "ExpressionStatement",
															"src": "8555:27:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1511,
																	"name": "fromId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1462,
																	"src": "8690:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1512,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1464,
																	"src": "8719:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1513,
																	"name": "packageLevel",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1466,
																	"src": "8754:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 1514,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "8792:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8798:9:7",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "8792:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1516,
																	"name": "_incomeType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1468,
																	"src": "8834:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1510,
																"name": "Income",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2089,
																"src": "8656:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Income_$2089_storage_ptr_$",
																	"typeString": "type(struct Storage.Income storage pointer)"
																}
															},
															"id": 1517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"8678:10:7",
																"8711:6:7",
																"8740:12:7",
																"8781:9:7",
																"8822:10:7"
															],
															"names": [
																"fromUserId",
																"amount",
																"packageLevel",
																"timestamp",
																"incomeType"
															],
															"nodeType": "FunctionCall",
															"src": "8656:225:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Income_$2089_memory_ptr",
																"typeString": "struct Storage.Income memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Income_$2089_memory_ptr",
																"typeString": "struct Storage.Income memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 1506,
																"name": "incomeHistory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2109,
																"src": "8625:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Income_$2089_storage_$dyn_storage_$",
																	"typeString": "mapping(uint256 => struct Storage.Income storage ref[] storage ref)"
																}
															},
															"id": 1508,
															"indexExpression": {
																"id": 1507,
																"name": "receiverId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1460,
																"src": "8639:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8625:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Income_$2089_storage_$dyn_storage",
																"typeString": "struct Storage.Income storage ref[] storage ref"
															}
														},
														"id": 1509,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8651:4:7",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "8625:30:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Income_$2089_storage_$dyn_storage_ptr_$_t_struct$_Income_$2089_storage_$returns$__$attached_to$_t_array$_t_struct$_Income_$2089_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct Storage.Income storage ref[] storage pointer,struct Storage.Income storage ref)"
														}
													},
													"id": 1518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8625:257:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1519,
												"nodeType": "ExpressionStatement",
												"src": "8625:257:7"
											},
											{
												"assignments": [
													1521
												],
												"declarations": [
													{
														"constant": false,
														"id": 1521,
														"mutability": "mutable",
														"name": "to",
														"nameLocation": "8903:2:7",
														"nodeType": "VariableDeclaration",
														"scope": 1563,
														"src": "8895:10:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1520,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8895:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1526,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1522,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2098,
															"src": "8908:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2051_storage_$",
																"typeString": "mapping(uint256 => struct Storage.User storage ref)"
															}
														},
														"id": 1524,
														"indexExpression": {
															"id": 1523,
															"name": "receiverId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1460,
															"src": "8914:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8908:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$2051_storage",
															"typeString": "struct Storage.User storage ref"
														}
													},
													"id": 1525,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8926:7:7",
													"memberName": "account",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2018,
													"src": "8908:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8895:38:7"
											},
											{
												"assignments": [
													1528
												],
												"declarations": [
													{
														"constant": false,
														"id": 1528,
														"mutability": "mutable",
														"name": "netamount",
														"nameLocation": "8949:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1563,
														"src": "8944:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1527,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8944:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1535,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1529,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1464,
																	"src": "8962:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3935",
																	"id": 1530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8970:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_95_by_1",
																		"typeString": "int_const 95"
																	},
																	"value": "95"
																},
																"src": "8962:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1532,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8961:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1533,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8975:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "8961:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8944:34:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1539,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1521,
															"src": "9003:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1540,
															"name": "netamount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1528,
															"src": "9007:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1536,
															"name": "usdt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1919,
															"src": "8989:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														"id": 1538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8994:8:7",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 199,
														"src": "8989:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8989:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1542,
												"nodeType": "ExpressionStatement",
												"src": "8989:28:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1544,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1464,
																			"src": "9044:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "35",
																			"id": 1545,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9051:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_5_by_1",
																				"typeString": "int_const 5"
																			},
																			"value": "5"
																		},
																		"src": "9044:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1547,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9043:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "313030",
																"id": 1548,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9056:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "9043:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1543,
														"name": "_sendToCreator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2518,
														"src": "9028:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9028:32:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1551,
												"nodeType": "ExpressionStatement",
												"src": "9028:32:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1553,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1521,
															"src": "9096:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1554,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2098,
																	"src": "9100:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2051_storage_$",
																		"typeString": "mapping(uint256 => struct Storage.User storage ref)"
																	}
																},
																"id": 1556,
																"indexExpression": {
																	"id": 1555,
																	"name": "fromId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1462,
																	"src": "9106:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9100:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$2051_storage",
																	"typeString": "struct Storage.User storage ref"
																}
															},
															"id": 1557,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9114:7:7",
															"memberName": "account",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2018,
															"src": "9100:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1558,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1464,
															"src": "9123:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1559,
															"name": "packageLevel",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1466,
															"src": "9131:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1560,
															"name": "_incomeType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "9145:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1552,
														"name": "IncomeDistributed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2179,
														"src": "9078:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint256)"
														}
													},
													"id": 1561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9078:79:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1562,
												"nodeType": "EmitStatement",
												"src": "9073:84:7"
											}
										]
									},
									"id": 1564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_payPoolIncome",
									"nameLocation": "8215:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "receiverId",
												"nameLocation": "8235:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "8230:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1459,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8230:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "fromId",
												"nameLocation": "8252:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "8247:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1461,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8247:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8265:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "8260:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1463,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8260:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "packageLevel",
												"nameLocation": "8278:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "8273:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1465,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8273:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "_incomeType",
												"nameLocation": "8297:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "8292:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1467,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8292:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8229:80:7"
									},
									"returnParameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8318:0:7"
									},
									"scope": 1905,
									"src": "8206:959:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1714,
										"nodeType": "Block",
										"src": "9228:1610:7",
										"statements": [
											{
												"assignments": [
													1571
												],
												"declarations": [
													{
														"constant": false,
														"id": 1571,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "9252:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1714,
														"src": "9239:17:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$2051_storage_ptr",
															"typeString": "struct Storage.User"
														},
														"typeName": {
															"id": 1570,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1569,
																"name": "User",
																"nameLocations": [
																	"9239:4:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2051,
																"src": "9239:4:7"
															},
															"referencedDeclaration": 2051,
															"src": "9239:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2051_storage_ptr",
																"typeString": "struct Storage.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1575,
												"initialValue": {
													"baseExpression": {
														"id": 1572,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2098,
														"src": "9259:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2051_storage_$",
															"typeString": "mapping(uint256 => struct Storage.User storage ref)"
														}
													},
													"id": 1574,
													"indexExpression": {
														"id": 1573,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1566,
														"src": "9265:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9259:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$2051_storage",
														"typeString": "struct Storage.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9239:34:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1577,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1571,
																	"src": "9292:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$2051_storage_ptr",
																		"typeString": "struct Storage.User storage pointer"
																	}
																},
																"id": 1578,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9297:7:7",
																"memberName": "account",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2018,
																"src": "9292:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1579,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "9308:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9312:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "9308:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9292:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420796f7572206163636f756e74",
															"id": 1582,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9320:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d2be5388e395114c9bc63051fd6def6e9e0facc3465cd48116ad48bef63b0e75",
																"typeString": "literal_string \"Not your account\""
															},
															"value": "Not your account"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d2be5388e395114c9bc63051fd6def6e9e0facc3465cd48116ad48bef63b0e75",
																"typeString": "literal_string \"Not your account\""
															}
														],
														"id": 1576,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9284:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9284:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1584,
												"nodeType": "ExpressionStatement",
												"src": "9284:55:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1586,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1571,
																	"src": "9358:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$2051_storage_ptr",
																		"typeString": "struct Storage.User storage pointer"
																	}
																},
																"id": 1587,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9363:12:7",
																"memberName": "boosterlevel",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2046,
																"src": "9358:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "38",
																"id": 1588,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9378:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_8_by_1",
																	"typeString": "int_const 8"
																},
																"value": "8"
															},
															"src": "9358:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4174206d6178206c6576656c",
															"id": 1590,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9381:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4f6d6f7b763be4c628a2ded4434e90bc0b02384f0d3a36303458913b65373af4",
																"typeString": "literal_string \"At max level\""
															},
															"value": "At max level"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4f6d6f7b763be4c628a2ded4434e90bc0b02384f0d3a36303458913b65373af4",
																"typeString": "literal_string \"At max level\""
															}
														],
														"id": 1585,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9350:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9350:46:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1592,
												"nodeType": "ExpressionStatement",
												"src": "9350:46:7"
											},
											{
												"assignments": [
													1594
												],
												"declarations": [
													{
														"constant": false,
														"id": 1594,
														"mutability": "mutable",
														"name": "nextPool",
														"nameLocation": "9471:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 1714,
														"src": "9466:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1593,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "9466:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1597,
												"initialValue": {
													"expression": {
														"id": 1595,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1571,
														"src": "9482:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$2051_storage_ptr",
															"typeString": "struct Storage.User storage pointer"
														}
													},
													"id": 1596,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "9487:12:7",
													"memberName": "boosterlevel",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2046,
													"src": "9482:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9466:33:7"
											},
											{
												"assignments": [
													1599
												],
												"declarations": [
													{
														"constant": false,
														"id": 1599,
														"mutability": "mutable",
														"name": "requiredLevel",
														"nameLocation": "9551:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 1714,
														"src": "9546:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1598,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "9546:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1603,
												"initialValue": {
													"baseExpression": {
														"id": 1600,
														"name": "minLevelForGlbBooster",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2245,
														"src": "9567:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$8_storage",
															"typeString": "uint256[8] storage ref"
														}
													},
													"id": 1602,
													"indexExpression": {
														"id": 1601,
														"name": "nextPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1594,
														"src": "9589:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9567:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9546:52:7"
											},
											{
												"assignments": [
													1605
												],
												"declarations": [
													{
														"constant": false,
														"id": 1605,
														"mutability": "mutable",
														"name": "requiredPool",
														"nameLocation": "9651:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 1714,
														"src": "9646:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1604,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "9646:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1609,
												"initialValue": {
													"baseExpression": {
														"id": 1606,
														"name": "minPoolForGlbBooster",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2258,
														"src": "9666:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$8_storage",
															"typeString": "uint256[8] storage ref"
														}
													},
													"id": 1608,
													"indexExpression": {
														"id": 1607,
														"name": "nextPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1594,
														"src": "9687:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9666:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9646:50:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1614,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1611,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1571,
																		"src": "9810:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$2051_storage_ptr",
																			"typeString": "struct Storage.User storage pointer"
																		}
																	},
																	"id": 1612,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9815:5:7",
																	"memberName": "level",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2032,
																	"src": "9810:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 1613,
																	"name": "requiredLevel",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1599,
																	"src": "9824:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9810:27:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1615,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1571,
																		"src": "9841:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$2051_storage_ptr",
																			"typeString": "struct Storage.User storage pointer"
																		}
																	},
																	"id": 1616,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9846:9:7",
																	"memberName": "poollevel",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2042,
																	"src": "9841:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 1617,
																	"name": "requiredPool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1605,
																	"src": "9859:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9841:30:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "9810:61:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5570677261646520536c6f7420616e6420506f6f6c",
															"id": 1620,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9873:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3630323abd6062c06a06ae3eee7055e3fb0eb90cf77f6c0f7f2936d0718def27",
																"typeString": "literal_string \"Upgrade Slot and Pool\""
															},
															"value": "Upgrade Slot and Pool"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3630323abd6062c06a06ae3eee7055e3fb0eb90cf77f6c0f7f2936d0718def27",
																"typeString": "literal_string \"Upgrade Slot and Pool\""
															}
														],
														"id": 1610,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9802:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9802:95:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1622,
												"nodeType": "ExpressionStatement",
												"src": "9802:95:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1623,
														"name": "nextPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1594,
														"src": "9977:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9988:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9977:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1635,
												"nodeType": "IfStatement",
												"src": "9973:110:7",
												"trueBody": {
													"id": 1634,
													"nodeType": "Block",
													"src": "9991:92:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1630,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1627,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1571,
																				"src": "10014:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_User_$2051_storage_ptr",
																					"typeString": "struct Storage.User storage pointer"
																				}
																			},
																			"id": 1628,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10019:12:7",
																			"memberName": "boosterlevel",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2046,
																			"src": "10014:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 1629,
																			"name": "nextPool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1594,
																			"src": "10035:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "10014:29:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4275792070726576696f757320706f6f6c206669727374",
																		"id": 1631,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10045:25:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_5f5fa9d58a74e1ce1932ae4e067a9f842704fbfbc24d932ec13f6cf4e6e7c5b8",
																			"typeString": "literal_string \"Buy previous pool first\""
																		},
																		"value": "Buy previous pool first"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_5f5fa9d58a74e1ce1932ae4e067a9f842704fbfbc24d932ec13f6cf4e6e7c5b8",
																			"typeString": "literal_string \"Buy previous pool first\""
																		}
																	],
																	"id": 1626,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "10006:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1632,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10006:65:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1633,
															"nodeType": "ExpressionStatement",
															"src": "10006:65:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "10101:34:7",
															"subExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1637,
																		"name": "userHasbooster",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2349,
																		"src": "10102:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
																			"typeString": "mapping(uint256 => mapping(uint256 => bool))"
																		}
																	},
																	"id": 1639,
																	"indexExpression": {
																		"id": 1638,
																		"name": "_userId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1566,
																		"src": "10117:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10102:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																		"typeString": "mapping(uint256 => bool)"
																	}
																},
																"id": 1641,
																"indexExpression": {
																	"id": 1640,
																	"name": "nextPool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1594,
																	"src": "10126:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10102:33:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f6f6c20616c726561647920707572636861736564",
															"id": 1643,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10137:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_909f3d3b7d1bfc91fce0554a59fdfa995b3e693af9ec22f5924ab4d305e96bc1",
																"typeString": "literal_string \"Pool already purchased\""
															},
															"value": "Pool already purchased"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_909f3d3b7d1bfc91fce0554a59fdfa995b3e693af9ec22f5924ab4d305e96bc1",
																"typeString": "literal_string \"Pool already purchased\""
															}
														],
														"id": 1636,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10093:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10093:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1645,
												"nodeType": "ExpressionStatement",
												"src": "10093:69:7"
											},
											{
												"assignments": [
													1647
												],
												"declarations": [
													{
														"constant": false,
														"id": 1647,
														"mutability": "mutable",
														"name": "packagePrice",
														"nameLocation": "10180:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 1714,
														"src": "10175:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1646,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "10175:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1651,
												"initialValue": {
													"baseExpression": {
														"id": 1648,
														"name": "glbBoosterPackages",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2220,
														"src": "10195:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1650,
													"indexExpression": {
														"id": 1649,
														"name": "nextPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1594,
														"src": "10214:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10195:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10175:48:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1655,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10309:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10313:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10309:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1659,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "10329:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_InfinityPool_$1905",
																		"typeString": "contract InfinityPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_InfinityPool_$1905",
																		"typeString": "contract InfinityPool"
																	}
																],
																"id": 1658,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10321:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1657,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10321:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10321:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1661,
															"name": "packagePrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1647,
															"src": "10336:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1652,
															"name": "usdt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1919,
															"src": "10291:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														"id": 1654,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10296:12:7",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 231,
														"src": "10291:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10291:58:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1663,
												"nodeType": "ExpressionStatement",
												"src": "10291:58:7"
											},
											{
												"expression": {
													"id": 1668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1664,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1571,
															"src": "10370:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2051_storage_ptr",
																"typeString": "struct Storage.User storage pointer"
															}
														},
														"id": 1666,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "10375:12:7",
														"memberName": "boosterlevel",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2046,
														"src": "10370:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1667,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10391:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "10370:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1669,
												"nodeType": "ExpressionStatement",
												"src": "10370:22:7"
											},
											{
												"expression": {
													"id": 1676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1670,
																"name": "userHasbooster",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2349,
																"src": "10403:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
																	"typeString": "mapping(uint256 => mapping(uint256 => bool))"
																}
															},
															"id": 1673,
															"indexExpression": {
																"id": 1671,
																"name": "_userId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1566,
																"src": "10418:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10403:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 1674,
														"indexExpression": {
															"id": 1672,
															"name": "nextPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1594,
															"src": "10427:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10403:33:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1675,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10439:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "10403:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1677,
												"nodeType": "ExpressionStatement",
												"src": "10403:40:7"
											},
											{
												"expression": {
													"id": 1682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1678,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1571,
															"src": "10454:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2051_storage_ptr",
																"typeString": "struct Storage.User storage pointer"
															}
														},
														"id": 1680,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "10459:14:7",
														"memberName": "boosterDeposit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2048,
														"src": "10454:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1681,
														"name": "packagePrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1647,
														"src": "10477:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10454:35:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1683,
												"nodeType": "ExpressionStatement",
												"src": "10454:35:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1685,
															"name": "nextPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1594,
															"src": "10516:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1686,
															"name": "_userId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1566,
															"src": "10526:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1687,
															"name": "packagePrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1647,
															"src": "10535:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1684,
														"name": "_placeInBooster",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1904,
														"src": "10500:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 1688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10500:48:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1689,
												"nodeType": "ExpressionStatement",
												"src": "10500:48:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1696,
																	"name": "packagePrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1647,
																	"src": "10641:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 1697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10679:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"expression": {
																		"id": 1698,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "10702:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10708:9:7",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "10702:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "3131",
																	"id": 1700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10744:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_11_by_1",
																		"typeString": "int_const 11"
																	},
																	"value": "11"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_11_by_1",
																		"typeString": "int_const 11"
																	}
																],
																"id": 1695,
																"name": "Deposit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2016,
																"src": "10610:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Deposit_$2016_storage_ptr_$",
																	"typeString": "type(struct Storage.Deposit storage pointer)"
																}
															},
															"id": 1701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"10633:6:7",
																"10668:9:7",
																"10695:5:7",
																"10732:11:7"
															],
															"names": [
																"amount",
																"withdrawn",
																"start",
																"depositType"
															],
															"nodeType": "FunctionCall",
															"src": "10610:148:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deposit_$2016_memory_ptr",
																"typeString": "struct Storage.Deposit memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Deposit_$2016_memory_ptr",
																"typeString": "struct Storage.Deposit memory"
															}
														],
														"expression": {
															"expression": {
																"id": 1690,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1571,
																"src": "10591:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$2051_storage_ptr",
																	"typeString": "struct Storage.User storage pointer"
																}
															},
															"id": 1693,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10596:8:7",
															"memberName": "deposits",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2022,
															"src": "10591:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Deposit_$2016_storage_$dyn_storage",
																"typeString": "struct Storage.Deposit storage ref[] storage ref"
															}
														},
														"id": 1694,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10605:4:7",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "10591:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Deposit_$2016_storage_$dyn_storage_ptr_$_t_struct$_Deposit_$2016_storage_$returns$__$attached_to$_t_array$_t_struct$_Deposit_$2016_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct Storage.Deposit storage ref[] storage pointer,struct Storage.Deposit storage ref)"
														}
													},
													"id": 1702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10591:168:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1703,
												"nodeType": "ExpressionStatement",
												"src": "10591:168:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1705,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10785:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10789:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10785:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1707,
															"name": "_userId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1566,
															"src": "10797:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1708,
																"name": "nextPool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1594,
																"src": "10806:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1709,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10817:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "10806:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "426f6f73746572",
															"id": 1711,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10820:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5f19a689ab4213e6b4258a9b8797f22ef5804c6ac6e1dd57ebfc2d159b9027ad",
																"typeString": "literal_string \"Booster\""
															},
															"value": "Booster"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5f19a689ab4213e6b4258a9b8797f22ef5804c6ac6e1dd57ebfc2d159b9027ad",
																"typeString": "literal_string \"Booster\""
															}
														],
														"id": 1704,
														"name": "Upgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2167,
														"src": "10777:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,string memory)"
														}
													},
													"id": 1712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10777:53:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1713,
												"nodeType": "EmitStatement",
												"src": "10772:58:7"
											}
										]
									},
									"functionSelector": "bc1fa7c0",
									"id": 1715,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeBooster",
									"nameLocation": "9190:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "_userId",
												"nameLocation": "9210:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1715,
												"src": "9205:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1565,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9205:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9204:14:7"
									},
									"returnParameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9228:0:7"
									},
									"scope": 1905,
									"src": "9181:1657:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1903,
										"nodeType": "Block",
										"src": "10937:2115:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1725,
																"name": "poolId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1717,
																"src": "10956:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 1726,
																	"name": "glbBoosterPackages",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2220,
																	"src": "10965:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 1727,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10984:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "10965:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10956:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964",
															"id": 1729,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10992:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c84d91f537f720db0d8ff8472db06e97a59d22ac83366d0af861134338d0e345",
																"typeString": "literal_string \"Invalid\""
															},
															"value": "Invalid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c84d91f537f720db0d8ff8472db06e97a59d22ac83366d0af861134338d0e345",
																"typeString": "literal_string \"Invalid\""
															}
														],
														"id": 1724,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10948:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10948:54:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1731,
												"nodeType": "ExpressionStatement",
												"src": "10948:54:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1733,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "11021:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11025:5:7",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "11021:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"baseExpression": {
																	"id": 1735,
																	"name": "glbBoosterPackages",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2220,
																	"src": "11034:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 1737,
																"indexExpression": {
																	"id": 1736,
																	"name": "poolId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1717,
																	"src": "11053:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11034:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11021:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e636f727265637420616d6f756e74",
															"id": 1739,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11062:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f313977f9f132db863cda3455f302e47301ce6a1616834c5cd6d5972d9a8c2f4",
																"typeString": "literal_string \"Incorrect amount\""
															},
															"value": "Incorrect amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f313977f9f132db863cda3455f302e47301ce6a1616834c5cd6d5972d9a8c2f4",
																"typeString": "literal_string \"Incorrect amount\""
															}
														],
														"id": 1732,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11013:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11013:68:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1741,
												"nodeType": "ExpressionStatement",
												"src": "11013:68:7"
											},
											{
												"assignments": [
													1743
												],
												"declarations": [
													{
														"constant": false,
														"id": 1743,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "11167:5:7",
														"nodeType": "VariableDeclaration",
														"scope": 1903,
														"src": "11162:10:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1742,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "11162:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1748,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1744,
															"name": "boosterUsers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2343,
															"src": "11175:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
																"typeString": "mapping(uint256 => uint256[] storage ref)"
															}
														},
														"id": 1746,
														"indexExpression": {
															"id": 1745,
															"name": "poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1717,
															"src": "11188:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11175:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "11196:6:7",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "11175:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11162:40:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1753,
															"name": "userMainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1719,
															"src": "11371:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 1749,
																"name": "boosterUsers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2343,
																"src": "11345:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(uint256 => uint256[] storage ref)"
																}
															},
															"id": 1751,
															"indexExpression": {
																"id": 1750,
																"name": "poolId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1717,
																"src": "11358:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11345:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1752,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11366:4:7",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "11345:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 1754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11345:37:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1755,
												"nodeType": "ExpressionStatement",
												"src": "11345:37:7"
											},
											{
												"assignments": [
													1757
												],
												"declarations": [
													{
														"constant": false,
														"id": 1757,
														"mutability": "mutable",
														"name": "parentIndex",
														"nameLocation": "11431:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1903,
														"src": "11423:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1756,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11423:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1764,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1758,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1743,
																	"src": "11446:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11454:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11446:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1761,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "11445:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "33",
														"id": 1762,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11459:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "11445:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11423:37:7"
											},
											{
												"assignments": [
													1766
												],
												"declarations": [
													{
														"constant": false,
														"id": 1766,
														"mutability": "mutable",
														"name": "parentId",
														"nameLocation": "11476:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 1903,
														"src": "11471:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1765,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "11471:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1772,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1767,
															"name": "boosterUsers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2343,
															"src": "11487:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
																"typeString": "mapping(uint256 => uint256[] storage ref)"
															}
														},
														"id": 1769,
														"indexExpression": {
															"id": 1768,
															"name": "poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1717,
															"src": "11500:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11487:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1771,
													"indexExpression": {
														"id": 1770,
														"name": "parentIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1757,
														"src": "11508:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11487:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11471:49:7"
											},
											{
												"expression": {
													"id": 1786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1773,
																"name": "userBoosterdtl",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2331,
																"src": "11558:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_UserBooster_$2285_storage_$_$",
																	"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.UserBooster storage ref))"
																}
															},
															"id": 1776,
															"indexExpression": {
																"id": 1774,
																"name": "poolId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1717,
																"src": "11573:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11558:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserBooster_$2285_storage_$",
																"typeString": "mapping(uint256 => struct Storage.UserBooster storage ref)"
															}
														},
														"id": 1777,
														"indexExpression": {
															"id": 1775,
															"name": "userMainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1719,
															"src": "11581:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11558:34:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserBooster_$2285_storage",
															"typeString": "struct Storage.UserBooster storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1779,
																"name": "userMainId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1719,
																"src": "11630:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1780,
																"name": "poolId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1717,
																"src": "11682:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1781,
																"name": "parentId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1766,
																"src": "11717:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "30",
																"id": 1782,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11756:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"expression": {
																	"id": 1783,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "11786:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11792:9:7",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "11786:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1778,
															"name": "UserBooster",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2285,
															"src": "11595:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_UserBooster_$2285_storage_ptr_$",
																"typeString": "type(struct Storage.UserBooster storage pointer)"
															}
														},
														"id": 1785,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"11626:2:7",
															"11674:6:7",
															"11707:8:7",
															"11744:10:7",
															"11776:8:7"
														],
														"names": [
															"id",
															"poolId",
															"parentId",
															"bonusCount",
															"joinTime"
														],
														"nodeType": "FunctionCall",
														"src": "11595:222:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserBooster_$2285_memory_ptr",
															"typeString": "struct Storage.UserBooster memory"
														}
													},
													"src": "11558:259:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserBooster_$2285_storage",
														"typeString": "struct Storage.UserBooster storage ref"
													}
												},
												"id": 1787,
												"nodeType": "ExpressionStatement",
												"src": "11558:259:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1794,
															"name": "userMainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1719,
															"src": "11871:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1788,
																	"name": "userBoosterChildren",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2338,
																	"src": "11828:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
																		"typeString": "mapping(uint256 => mapping(uint256 => uint256[] storage ref))"
																	}
																},
																"id": 1791,
																"indexExpression": {
																	"id": 1789,
																	"name": "poolId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1717,
																	"src": "11848:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11828:27:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(uint256 => uint256[] storage ref)"
																}
															},
															"id": 1792,
															"indexExpression": {
																"id": 1790,
																"name": "parentId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1766,
																"src": "11856:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11828:37:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1793,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11866:4:7",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "11828:42:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 1795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11828:54:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1796,
												"nodeType": "ExpressionStatement",
												"src": "11828:54:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1797,
														"name": "poolId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1717,
														"src": "11907:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1798,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11917:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "11907:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1853,
												"nodeType": "IfStatement",
												"src": "11904:584:7",
												"trueBody": {
													"id": 1852,
													"nodeType": "Block",
													"src": "11921:567:7",
													"statements": [
														{
															"assignments": [
																1802
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1802,
																	"mutability": "mutable",
																	"name": "userdtl",
																	"nameLocation": "11948:7:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1852,
																	"src": "11936:19:7",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$2051_memory_ptr",
																		"typeString": "struct Storage.User"
																	},
																	"typeName": {
																		"id": 1801,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1800,
																			"name": "User",
																			"nameLocations": [
																				"11936:4:7"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 2051,
																			"src": "11936:4:7"
																		},
																		"referencedDeclaration": 2051,
																		"src": "11936:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$2051_storage_ptr",
																			"typeString": "struct Storage.User"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1806,
															"initialValue": {
																"baseExpression": {
																	"id": 1803,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2098,
																	"src": "11958:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2051_storage_$",
																		"typeString": "mapping(uint256 => struct Storage.User storage ref)"
																	}
																},
																"id": 1805,
																"indexExpression": {
																	"id": 1804,
																	"name": "userMainId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1719,
																	"src": "11964:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11958:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$2051_storage",
																	"typeString": "struct Storage.User storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11936:39:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1814,
																		"name": "userMainId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1719,
																		"src": "12052:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 1807,
																				"name": "weeklyUserDirects",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2432,
																				"src": "11990:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
																					"typeString": "mapping(uint256 => mapping(uint256 => uint256[] storage ref))"
																				}
																			},
																			"id": 1811,
																			"indexExpression": {
																				"id": 1808,
																				"name": "currentWeeklyRound",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2364,
																				"src": "12008:18:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "11990:37:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
																				"typeString": "mapping(uint256 => uint256[] storage ref)"
																			}
																		},
																		"id": 1812,
																		"indexExpression": {
																			"expression": {
																				"id": 1809,
																				"name": "userdtl",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1802,
																				"src": "12028:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_User_$2051_memory_ptr",
																					"typeString": "struct Storage.User memory"
																				}
																			},
																			"id": 1810,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "12036:9:7",
																			"memberName": "sponsorId",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2028,
																			"src": "12028:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "11990:56:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 1813,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12047:4:7",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "11990:61:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
																		"typeString": "function (uint256[] storage pointer,uint256)"
																	}
																},
																"id": 1815,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11990:73:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1816,
															"nodeType": "ExpressionStatement",
															"src": "11990:73:7"
														},
														{
															"assignments": [
																1818
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1818,
																	"mutability": "mutable",
																	"name": "directsCount",
																	"nameLocation": "12083:12:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1852,
																	"src": "12078:17:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1817,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "12078:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1826,
															"initialValue": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1819,
																			"name": "weeklyUserDirects",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2432,
																			"src": "12098:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
																				"typeString": "mapping(uint256 => mapping(uint256 => uint256[] storage ref))"
																			}
																		},
																		"id": 1821,
																		"indexExpression": {
																			"id": 1820,
																			"name": "currentWeeklyRound",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2364,
																			"src": "12116:18:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12098:37:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
																			"typeString": "mapping(uint256 => uint256[] storage ref)"
																		}
																	},
																	"id": 1824,
																	"indexExpression": {
																		"expression": {
																			"id": 1822,
																			"name": "userdtl",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1802,
																			"src": "12136:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_User_$2051_memory_ptr",
																				"typeString": "struct Storage.User memory"
																			}
																		},
																		"id": 1823,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "12144:9:7",
																		"memberName": "sponsorId",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2028,
																		"src": "12136:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12098:56:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 1825,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12155:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "12098:63:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12078:83:7"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1833,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1827,
																			"name": "userdtl",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1802,
																			"src": "12181:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_User_$2051_memory_ptr",
																				"typeString": "struct Storage.User memory"
																			}
																		},
																		"id": 1828,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "12189:16:7",
																		"memberName": "registrationTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2050,
																		"src": "12181:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1829,
																		"name": "TIME_STEP",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1938,
																		"src": "12208:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "12181:36:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"expression": {
																		"id": 1831,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "12221:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1832,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12227:9:7",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "12221:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12181:55:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1840,
															"nodeType": "IfStatement",
															"src": "12178:150:7",
															"trueBody": {
																"id": 1839,
																"nodeType": "Block",
																"src": "12237:91:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1835,
																					"name": "userMainId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1719,
																					"src": "12281:10:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1836,
																					"name": "currentWeeklyRound",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2364,
																					"src": "12293:18:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1834,
																				"name": "_tryWeeklyContestQualify",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2732,
																				"src": "12256:24:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (uint256,uint256)"
																				}
																			},
																			"id": 1837,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12256:56:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1838,
																		"nodeType": "ExpressionStatement",
																		"src": "12256:56:7"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1841,
																	"name": "directsCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1818,
																	"src": "12346:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"hexValue": "35",
																	"id": 1842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12362:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	},
																	"value": "5"
																},
																"src": "12346:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1851,
															"nodeType": "IfStatement",
															"src": "12342:121:7",
															"trueBody": {
																"id": 1850,
																"nodeType": "Block",
																"src": "12364:99:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1845,
																						"name": "userdtl",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1802,
																						"src": "12409:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_User_$2051_memory_ptr",
																							"typeString": "struct Storage.User memory"
																						}
																					},
																					"id": 1846,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "12417:9:7",
																					"memberName": "sponsorId",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2028,
																					"src": "12409:17:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1847,
																					"name": "currentWeeklyRound",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2364,
																					"src": "12428:18:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1844,
																				"name": "_tryWeeklyContestQualify",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2732,
																				"src": "12384:24:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (uint256,uint256)"
																				}
																			},
																			"id": 1848,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12384:63:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1849,
																		"nodeType": "ExpressionStatement",
																		"src": "12384:63:7"
																	}
																]
															}
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1856,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1854,
															"name": "parentId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1766,
															"src": "12506:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1855,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12518:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "12506:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1859,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1857,
															"name": "parentId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1766,
															"src": "12523:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1858,
															"name": "defaultRefId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1927,
															"src": "12535:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "12523:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "12506:41:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1867,
												"nodeType": "IfStatement",
												"src": "12502:123:7",
												"trueBody": {
													"id": 1866,
													"nodeType": "Block",
													"src": "12549:76:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1862,
																		"name": "packagePrice",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1721,
																		"src": "12579:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1861,
																	"name": "_sendToCreator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2518,
																	"src": "12564:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1863,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12564:28:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1864,
															"nodeType": "ExpressionStatement",
															"src": "12564:28:7"
														},
														{
															"functionReturnParameters": 1723,
															"id": 1865,
															"nodeType": "Return",
															"src": "12607:7:7"
														}
													]
												}
											},
											{
												"assignments": [
													1870
												],
												"declarations": [
													{
														"constant": false,
														"id": 1870,
														"mutability": "mutable",
														"name": "userB",
														"nameLocation": "12657:5:7",
														"nodeType": "VariableDeclaration",
														"scope": 1903,
														"src": "12637:25:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserBooster_$2285_storage_ptr",
															"typeString": "struct Storage.UserBooster"
														},
														"typeName": {
															"id": 1869,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1868,
																"name": "UserBooster",
																"nameLocations": [
																	"12637:11:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2285,
																"src": "12637:11:7"
															},
															"referencedDeclaration": 2285,
															"src": "12637:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserBooster_$2285_storage_ptr",
																"typeString": "struct Storage.UserBooster"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1876,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1871,
															"name": "userBoosterdtl",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2331,
															"src": "12665:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_UserBooster_$2285_storage_$_$",
																"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.UserBooster storage ref))"
															}
														},
														"id": 1873,
														"indexExpression": {
															"id": 1872,
															"name": "poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1717,
															"src": "12680:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12665:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserBooster_$2285_storage_$",
															"typeString": "mapping(uint256 => struct Storage.UserBooster storage ref)"
														}
													},
													"id": 1875,
													"indexExpression": {
														"id": 1874,
														"name": "parentId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1766,
														"src": "12688:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12665:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserBooster_$2285_storage",
														"typeString": "struct Storage.UserBooster storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12637:60:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1877,
															"name": "userB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1870,
															"src": "12712:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserBooster_$2285_storage_ptr",
																"typeString": "struct Storage.UserBooster storage pointer"
															}
														},
														"id": 1878,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12718:10:7",
														"memberName": "bonusCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2282,
														"src": "12712:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "33",
														"id": 1879,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12729:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "12712:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1901,
													"nodeType": "Block",
													"src": "12877:76:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1897,
																		"name": "packagePrice",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1721,
																		"src": "12907:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1896,
																	"name": "_sendToCreator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2518,
																	"src": "12892:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1898,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12892:28:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1899,
															"nodeType": "ExpressionStatement",
															"src": "12892:28:7"
														},
														{
															"functionReturnParameters": 1723,
															"id": 1900,
															"nodeType": "Return",
															"src": "12935:7:7"
														}
													]
												},
												"id": 1902,
												"nodeType": "IfStatement",
												"src": "12708:245:7",
												"trueBody": {
													"id": 1895,
													"nodeType": "Block",
													"src": "12741:122:7",
													"statements": [
														{
															"expression": {
																"id": 1885,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1881,
																		"name": "userB",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1870,
																		"src": "12756:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserBooster_$2285_storage_ptr",
																			"typeString": "struct Storage.UserBooster storage pointer"
																		}
																	},
																	"id": 1883,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "12762:10:7",
																	"memberName": "bonusCount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2282,
																	"src": "12756:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12775:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "12756:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1886,
															"nodeType": "ExpressionStatement",
															"src": "12756:20:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1888,
																		"name": "parentId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1766,
																		"src": "12807:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1889,
																		"name": "userMainId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1719,
																		"src": "12817:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1890,
																		"name": "packagePrice",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1721,
																		"src": "12829:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "31",
																		"id": 1891,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12843:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	{
																		"hexValue": "3131",
																		"id": 1892,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12846:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_11_by_1",
																			"typeString": "int_const 11"
																		},
																		"value": "11"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		{
																			"typeIdentifier": "t_rational_11_by_1",
																			"typeString": "int_const 11"
																		}
																	],
																	"id": 1887,
																	"name": "_payPoolIncome",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1564,
																	"src": "12792:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256,uint256,uint256,uint256)"
																	}
																},
																"id": 1893,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12792:57:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1894,
															"nodeType": "ExpressionStatement",
															"src": "12792:57:7"
														}
													]
												}
											}
										]
									},
									"id": 1904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_placeInBooster",
									"nameLocation": "10861:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1717,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "10885:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "10877:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10877:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "userMainId",
												"nameLocation": "10898:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "10893:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1718,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10893:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "packagePrice",
												"nameLocation": "10915:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "10910:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1720,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10910:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10876:52:7"
									},
									"returnParameters": {
										"id": 1723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10937:0:7"
									},
									"scope": 1905,
									"src": "10852:2200:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1906,
							"src": "102:12964:7",
							"usedErrors": [
								244
							],
							"usedEvents": [
								2139,
								2147,
								2157,
								2167,
								2179,
								2189,
								2197,
								2446,
								2456,
								2464
							]
						}
					],
					"src": "37:13031:7"
				},
				"id": 7
			},
			"contracts/modules/Storage.sol": {
				"ast": {
					"absolutePath": "contracts/modules/Storage.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC20": [
							232
						],
						"ReentrancyGuard": [
							154
						],
						"SafeERC20": [
							696
						],
						"Storage": [
							2858
						]
					},
					"id": 2859,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1907,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".30"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1908,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2859,
							"sourceUnit": 155,
							"src": "99:62:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1909,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2859,
							"sourceUnit": 233,
							"src": "165:56:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1910,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2859,
							"sourceUnit": 697,
							"src": "223:65:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1911,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"312:15:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 154,
										"src": "312:15:8"
									},
									"id": 1912,
									"nodeType": "InheritanceSpecifier",
									"src": "312:15:8"
								}
							],
							"canonicalName": "Storage",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2858,
							"linearizedBaseContracts": [
								2858,
								154
							],
							"name": "Storage",
							"nameLocation": "301:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1916,
									"libraryName": {
										"id": 1913,
										"name": "SafeERC20",
										"nameLocations": [
											"341:9:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 696,
										"src": "341:9:8"
									},
									"nodeType": "UsingForDirective",
									"src": "335:27:8",
									"typeName": {
										"id": 1915,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1914,
											"name": "IERC20",
											"nameLocations": [
												"355:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 232,
											"src": "355:6:8"
										},
										"referencedDeclaration": 232,
										"src": "355:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$232",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "2f48ab7d",
									"id": 1919,
									"mutability": "mutable",
									"name": "usdt",
									"nameLocation": "382:4:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "368:18:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$232",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1918,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1917,
											"name": "IERC20",
											"nameLocations": [
												"368:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 232,
											"src": "368:6:8"
										},
										"referencedDeclaration": 232,
										"src": "368:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$232",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7cdc65f2",
									"id": 1921,
									"mutability": "mutable",
									"name": "creatorWallet",
									"nameLocation": "437:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "422:28:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1920,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "422:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e9e34a16",
									"id": 1923,
									"mutability": "mutable",
									"name": "systemMaintance",
									"nameLocation": "475:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "460:30:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1922,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "460:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f5d74d93",
									"id": 1925,
									"mutability": "mutable",
									"name": "teamDevelopment",
									"nameLocation": "512:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "497:30:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1924,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "497:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ec597e6f",
									"id": 1927,
									"mutability": "mutable",
									"name": "defaultRefId",
									"nameLocation": "546:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "534:24:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1926,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "534:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bff1f9e1",
									"id": 1929,
									"mutability": "mutable",
									"name": "totalUsers",
									"nameLocation": "577:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "565:22:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1928,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "565:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1932,
									"mutability": "constant",
									"name": "maxLayers",
									"nameLocation": "617:9:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "594:37:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1930,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "594:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3135",
										"id": 1931,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "629:2:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_15_by_1",
											"typeString": "int_const 15"
										},
										"value": "15"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"functionSelector": "01c234a8",
									"id": 1935,
									"mutability": "constant",
									"name": "PERCENTS_DIVIDER",
									"nameLocation": "664:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "640:48:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1933,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "640:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130303030",
										"id": 1934,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "683:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000_by_1",
											"typeString": "int_const 10000"
										},
										"value": "10000"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "32bc298c",
									"id": 1938,
									"mutability": "constant",
									"name": "TIME_STEP",
									"nameLocation": "719:9:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "695:42:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1936,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "695:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1937,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "731:6:8",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_86400_by_1",
											"typeString": "int_const 86400"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "375b43b4",
									"id": 1941,
									"mutability": "constant",
									"name": "ROI_CAP_MULTIPLIER",
									"nameLocation": "768:18:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "744:47:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1939,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "744:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3135",
										"id": 1940,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "789:2:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_15_by_1",
											"typeString": "int_const 15"
										},
										"value": "15"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "58c7d352",
									"id": 1944,
									"mutability": "constant",
									"name": "ROI_CAP_DIVIDER",
									"nameLocation": "830:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "806:44:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1942,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "806:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 1943,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "848:2:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "39ab3603",
									"id": 1947,
									"mutability": "mutable",
									"name": "registeredUserIds",
									"nameLocation": "878:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "864:31:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 1945,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "864:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1946,
										"nodeType": "ArrayTypeName",
										"src": "864:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1949,
									"mutability": "mutable",
									"name": "nonce",
									"nameLocation": "915:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "902:18:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1948,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "902:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "32fcd966",
									"id": 1952,
									"mutability": "constant",
									"name": "ACC_PRECISION",
									"nameLocation": "1104:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "1080:44:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1950,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1080:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653138",
										"id": 1951,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1120:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1e18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "78f6ad6d",
									"id": 1954,
									"mutability": "mutable",
									"name": "communityAccPerUser",
									"nameLocation": "1146:19:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "1131:34:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1953,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1131:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1958,
									"mutability": "mutable",
									"name": "communityDebt",
									"nameLocation": "1244:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "1210:47:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1957,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1955,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1218:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1210:24:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1956,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1226:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "c216212a",
									"id": 2007,
									"mutability": "mutable",
									"name": "packages",
									"nameLocation": "1302:8:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "1288:540:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 1959,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1288:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1960,
										"nodeType": "ArrayTypeName",
										"src": "1288:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"value": {
										"components": [
											{
												"commonType": {
													"typeIdentifier": "t_rational_15000000000000000000_by_1",
													"typeString": "int_const 15000000000000000000"
												},
												"id": 1963,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "3135",
													"id": 1961,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1324:2:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_15_by_1",
														"typeString": "int_const 15"
													},
													"value": "15"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 1962,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1329:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1324:9:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_15000000000000000000_by_1",
													"typeString": "int_const 15000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_25000000000000000000_by_1",
													"typeString": "int_const 25000000000000000000"
												},
												"id": 1966,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "3235",
													"id": 1964,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1356:2:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_25_by_1",
														"typeString": "int_const 25"
													},
													"value": "25"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 1965,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1361:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1356:9:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_25000000000000000000_by_1",
													"typeString": "int_const 25000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_50000000000000000000_by_1",
													"typeString": "int_const 50000000000000000000"
												},
												"id": 1969,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "3530",
													"id": 1967,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1388:2:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_50_by_1",
														"typeString": "int_const 50"
													},
													"value": "50"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 1968,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1393:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1388:9:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_50000000000000000000_by_1",
													"typeString": "int_const 50000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_100000000000000000000_by_1",
													"typeString": "int_const 100000000000000000000"
												},
												"id": 1972,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "313030",
													"id": 1970,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1420:3:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_100_by_1",
														"typeString": "int_const 100"
													},
													"value": "100"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 1971,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1426:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1420:10:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_100000000000000000000_by_1",
													"typeString": "int_const 100000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_200000000000000000000_by_1",
													"typeString": "int_const 200000000000000000000"
												},
												"id": 1975,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "323030",
													"id": 1973,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1453:3:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_200_by_1",
														"typeString": "int_const 200"
													},
													"value": "200"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 1974,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1459:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1453:10:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_200000000000000000000_by_1",
													"typeString": "int_const 200000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_400000000000000000000_by_1",
													"typeString": "int_const 400000000000000000000"
												},
												"id": 1978,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "343030",
													"id": 1976,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1486:3:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_400_by_1",
														"typeString": "int_const 400"
													},
													"value": "400"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 1977,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1492:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1486:10:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_400000000000000000000_by_1",
													"typeString": "int_const 400000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_800000000000000000000_by_1",
													"typeString": "int_const 800000000000000000000"
												},
												"id": 1981,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "383030",
													"id": 1979,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1519:3:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_800_by_1",
														"typeString": "int_const 800"
													},
													"value": "800"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 1980,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1525:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1519:10:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_800000000000000000000_by_1",
													"typeString": "int_const 800000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_1600000000000000000000_by_1",
													"typeString": "int_const 1600000000000000000000"
												},
												"id": 1984,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "31363030",
													"id": 1982,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1552:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1600_by_1",
														"typeString": "int_const 1600"
													},
													"value": "1600"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 1983,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1559:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1552:11:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1600000000000000000000_by_1",
													"typeString": "int_const 1600000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_3200000000000000000000_by_1",
													"typeString": "int_const 3200000000000000000000"
												},
												"id": 1987,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "33323030",
													"id": 1985,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1586:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_3200_by_1",
														"typeString": "int_const 3200"
													},
													"value": "3200"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 1986,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1593:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1586:11:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_3200000000000000000000_by_1",
													"typeString": "int_const 3200000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_6400000000000000000000_by_1",
													"typeString": "int_const 6400000000000000000000"
												},
												"id": 1990,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "36343030",
													"id": 1988,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1620:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6400_by_1",
														"typeString": "int_const 6400"
													},
													"value": "6400"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 1989,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1627:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1620:11:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_6400000000000000000000_by_1",
													"typeString": "int_const 6400000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_12800000000000000000000_by_1",
													"typeString": "int_const 12800000000000000000000"
												},
												"id": 1993,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "3132383030",
													"id": 1991,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1654:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_12800_by_1",
														"typeString": "int_const 12800"
													},
													"value": "12800"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 1992,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1662:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1654:12:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_12800000000000000000000_by_1",
													"typeString": "int_const 12800000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_25600000000000000000000_by_1",
													"typeString": "int_const 25600000000000000000000"
												},
												"id": 1996,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "3235363030",
													"id": 1994,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1689:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_25600_by_1",
														"typeString": "int_const 25600"
													},
													"value": "25600"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 1995,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1697:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1689:12:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_25600000000000000000000_by_1",
													"typeString": "int_const 25600000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_51200000000000000000000_by_1",
													"typeString": "int_const 51200000000000000000000"
												},
												"id": 1999,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "3531323030",
													"id": 1997,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1724:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_51200_by_1",
														"typeString": "int_const 51200"
													},
													"value": "51200"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 1998,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1732:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1724:12:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_51200000000000000000000_by_1",
													"typeString": "int_const 51200000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_102400000000000000000000_by_1",
													"typeString": "int_const 102400000000000000000000"
												},
												"id": 2002,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "313032343030",
													"id": 2000,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1759:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_102400_by_1",
														"typeString": "int_const 102400"
													},
													"value": "102400"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 2001,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1768:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1759:13:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_102400000000000000000000_by_1",
													"typeString": "int_const 102400000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_204800000000000000000000_by_1",
													"typeString": "int_const 204800000000000000000000"
												},
												"id": 2005,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "323034383030",
													"id": 2003,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1795:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_204800_by_1",
														"typeString": "int_const 204800"
													},
													"value": "204800"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 2004,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1804:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1795:13:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_204800000000000000000000_by_1",
													"typeString": "int_const 204800000000000000000000"
												}
											}
										],
										"id": 2006,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "1313:515:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint80_$15_memory_ptr",
											"typeString": "uint80[15] memory"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.Deposit",
									"id": 2016,
									"members": [
										{
											"constant": false,
											"id": 2009,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "1975:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 2016,
											"src": "1967:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2008,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1967:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2011,
											"mutability": "mutable",
											"name": "withdrawn",
											"nameLocation": "2000:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 2016,
											"src": "1992:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2010,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1992:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2013,
											"mutability": "mutable",
											"name": "start",
											"nameLocation": "2028:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 2016,
											"src": "2020:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2012,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2020:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2015,
											"mutability": "mutable",
											"name": "depositType",
											"nameLocation": "2051:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 2016,
											"src": "2045:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2014,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "2045:5:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Deposit",
									"nameLocation": "1948:7:8",
									"nodeType": "StructDefinition",
									"scope": 2858,
									"src": "1941:131:8",
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.User",
									"id": 2051,
									"members": [
										{
											"constant": false,
											"id": 2018,
											"mutability": "mutable",
											"name": "account",
											"nameLocation": "2111:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 2051,
											"src": "2103:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2017,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2103:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2022,
											"mutability": "mutable",
											"name": "deposits",
											"nameLocation": "2139:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 2051,
											"src": "2129:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Deposit_$2016_storage_$dyn_storage_ptr",
												"typeString": "struct Storage.Deposit[]"
											},
											"typeName": {
												"baseType": {
													"id": 2020,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2019,
														"name": "Deposit",
														"nameLocations": [
															"2129:7:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2016,
														"src": "2129:7:8"
													},
													"referencedDeclaration": 2016,
													"src": "2129:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Deposit_$2016_storage_ptr",
														"typeString": "struct Storage.Deposit"
													}
												},
												"id": 2021,
												"nodeType": "ArrayTypeName",
												"src": "2129:9:8",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Deposit_$2016_storage_$dyn_storage_ptr",
													"typeString": "struct Storage.Deposit[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2024,
											"mutability": "mutable",
											"name": "checkpoint",
											"nameLocation": "2166:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 2051,
											"src": "2158:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2023,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2158:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2026,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "2192:2:8",
											"nodeType": "VariableDeclaration",
											"scope": 2051,
											"src": "2187:7:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2025,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2187:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2028,
											"mutability": "mutable",
											"name": "sponsorId",
											"nameLocation": "2210:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 2051,
											"src": "2205:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2027,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2205:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2030,
											"mutability": "mutable",
											"name": "uplineId",
											"nameLocation": "2248:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 2051,
											"src": "2243:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2029,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2243:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2032,
											"mutability": "mutable",
											"name": "level",
											"nameLocation": "2297:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 2051,
											"src": "2292:10:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2031,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2292:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2034,
											"mutability": "mutable",
											"name": "directTeam",
											"nameLocation": "2355:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 2051,
											"src": "2350:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2033,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2350:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2036,
											"mutability": "mutable",
											"name": "directPoolQualified",
											"nameLocation": "2407:19:8",
											"nodeType": "VariableDeclaration",
											"scope": 2051,
											"src": "2402:24:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2035,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2402:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2038,
											"mutability": "mutable",
											"name": "totalMatrixTeam",
											"nameLocation": "2485:15:8",
											"nodeType": "VariableDeclaration",
											"scope": 2051,
											"src": "2480:20:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2037,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2480:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2040,
											"mutability": "mutable",
											"name": "totalDeposit",
											"nameLocation": "2541:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 2051,
											"src": "2536:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2039,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2536:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2042,
											"mutability": "mutable",
											"name": "poollevel",
											"nameLocation": "2569:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 2051,
											"src": "2564:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2041,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2564:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2044,
											"mutability": "mutable",
											"name": "poolDeposit",
											"nameLocation": "2594:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 2051,
											"src": "2589:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2043,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2589:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2046,
											"mutability": "mutable",
											"name": "boosterlevel",
											"nameLocation": "2621:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 2051,
											"src": "2616:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2045,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2616:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2048,
											"mutability": "mutable",
											"name": "boosterDeposit",
											"nameLocation": "2649:14:8",
											"nodeType": "VariableDeclaration",
											"scope": 2051,
											"src": "2644:19:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2047,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2644:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2050,
											"mutability": "mutable",
											"name": "registrationTime",
											"nameLocation": "2679:16:8",
											"nodeType": "VariableDeclaration",
											"scope": 2051,
											"src": "2674:21:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2049,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2674:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "User",
									"nameLocation": "2087:4:8",
									"nodeType": "StructDefinition",
									"scope": 2858,
									"src": "2080:625:8",
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.UserIncome",
									"id": 2078,
									"members": [
										{
											"constant": false,
											"id": 2053,
											"mutability": "mutable",
											"name": "totalIncome",
											"nameLocation": "2776:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 2078,
											"src": "2771:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2052,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2771:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2055,
											"mutability": "mutable",
											"name": "sponsorIncome",
											"nameLocation": "2803:13:8",
											"nodeType": "VariableDeclaration",
											"scope": 2078,
											"src": "2798:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2054,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2798:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2057,
											"mutability": "mutable",
											"name": "matrixIncome",
											"nameLocation": "2832:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 2078,
											"src": "2827:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2056,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2827:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2059,
											"mutability": "mutable",
											"name": "levelBoosterIncome",
											"nameLocation": "2860:18:8",
											"nodeType": "VariableDeclaration",
											"scope": 2078,
											"src": "2855:23:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2058,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2855:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2061,
											"mutability": "mutable",
											"name": "levelIncome",
											"nameLocation": "2894:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 2078,
											"src": "2889:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2060,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2889:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2063,
											"mutability": "mutable",
											"name": "royaltyIncome",
											"nameLocation": "2921:13:8",
											"nodeType": "VariableDeclaration",
											"scope": 2078,
											"src": "2916:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2062,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2916:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2065,
											"mutability": "mutable",
											"name": "royaltyIncomeClaimed",
											"nameLocation": "2950:20:8",
											"nodeType": "VariableDeclaration",
											"scope": 2078,
											"src": "2945:25:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2064,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2945:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2067,
											"mutability": "mutable",
											"name": "communityIncome",
											"nameLocation": "3023:15:8",
											"nodeType": "VariableDeclaration",
											"scope": 2078,
											"src": "3018:20:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2066,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3018:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2069,
											"mutability": "mutable",
											"name": "poolIncome",
											"nameLocation": "3103:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 2078,
											"src": "3098:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2068,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3098:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2071,
											"mutability": "mutable",
											"name": "boosterIncome",
											"nameLocation": "3164:13:8",
											"nodeType": "VariableDeclaration",
											"scope": 2078,
											"src": "3159:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2070,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3159:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2073,
											"mutability": "mutable",
											"name": "weeklyContestIncome",
											"nameLocation": "3222:19:8",
											"nodeType": "VariableDeclaration",
											"scope": 2078,
											"src": "3217:24:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2072,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3217:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2075,
											"mutability": "mutable",
											"name": "monthlyRoyalty",
											"nameLocation": "3293:14:8",
											"nodeType": "VariableDeclaration",
											"scope": 2078,
											"src": "3288:19:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2074,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3288:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2077,
											"mutability": "mutable",
											"name": "monthlyTopRoyalty",
											"nameLocation": "3359:17:8",
											"nodeType": "VariableDeclaration",
											"scope": 2078,
											"src": "3354:22:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2076,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3354:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserIncome",
									"nameLocation": "2749:10:8",
									"nodeType": "StructDefinition",
									"scope": 2858,
									"src": "2742:678:8",
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.Income",
									"id": 2089,
									"members": [
										{
											"constant": false,
											"id": 2080,
											"mutability": "mutable",
											"name": "fromUserId",
											"nameLocation": "3458:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 2089,
											"src": "3453:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2079,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3453:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2082,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "3484:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 2089,
											"src": "3479:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2081,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3479:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2084,
											"mutability": "mutable",
											"name": "packageLevel",
											"nameLocation": "3506:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 2089,
											"src": "3501:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2083,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3501:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2086,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "3534:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 2089,
											"src": "3529:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2085,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3529:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2088,
											"mutability": "mutable",
											"name": "incomeType",
											"nameLocation": "3559:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 2089,
											"src": "3554:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2087,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3554:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Income",
									"nameLocation": "3435:6:8",
									"nodeType": "StructDefinition",
									"scope": 2858,
									"src": "3428:309:8",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2093,
									"mutability": "mutable",
									"name": "addressToId",
									"nameLocation": "3783:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "3749:45:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 2092,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2090,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3757:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3749:24:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2091,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "3768:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2098,
									"mutability": "mutable",
									"name": "users",
									"nameLocation": "3832:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "3801:36:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2051_storage_$",
										"typeString": "mapping(uint256 => struct Storage.User)"
									},
									"typeName": {
										"id": 2097,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2094,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "3809:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "3801:21:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2051_storage_$",
											"typeString": "mapping(uint256 => struct Storage.User)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2096,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2095,
												"name": "User",
												"nameLocations": [
													"3817:4:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2051,
												"src": "3817:4:8"
											},
											"referencedDeclaration": 2051,
											"src": "3817:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_User_$2051_storage_ptr",
												"typeString": "struct Storage.User"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2103,
									"mutability": "mutable",
									"name": "userIncomes",
									"nameLocation": "3881:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "3844:48:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserIncome_$2078_storage_$",
										"typeString": "mapping(uint256 => struct Storage.UserIncome)"
									},
									"typeName": {
										"id": 2102,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2099,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "3852:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "3844:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserIncome_$2078_storage_$",
											"typeString": "mapping(uint256 => struct Storage.UserIncome)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2101,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2100,
												"name": "UserIncome",
												"nameLocations": [
													"3860:10:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2078,
												"src": "3860:10:8"
											},
											"referencedDeclaration": 2078,
											"src": "3860:10:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserIncome_$2078_storage_ptr",
												"typeString": "struct Storage.UserIncome"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2109,
									"mutability": "mutable",
									"name": "incomeHistory",
									"nameLocation": "3965:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "3930:48:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Income_$2089_storage_$dyn_storage_$",
										"typeString": "mapping(uint256 => struct Storage.Income[])"
									},
									"typeName": {
										"id": 2108,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2104,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "3938:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "3930:25:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Income_$2089_storage_$dyn_storage_$",
											"typeString": "mapping(uint256 => struct Storage.Income[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 2106,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2105,
													"name": "Income",
													"nameLocations": [
														"3946:6:8"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2089,
													"src": "3946:6:8"
												},
												"referencedDeclaration": 2089,
												"src": "3946:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Income_$2089_storage_ptr",
													"typeString": "struct Storage.Income"
												}
											},
											"id": 2107,
											"nodeType": "ArrayTypeName",
											"src": "3946:8:8",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Income_$2089_storage_$dyn_storage_ptr",
												"typeString": "struct Storage.Income[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2116,
									"mutability": "mutable",
									"name": "teams",
									"nameLocation": "4035:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "3985:55:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => uint256[]))"
									},
									"typeName": {
										"id": 2115,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2110,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "3993:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "3985:40:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => uint256[]))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2114,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2111,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "4009:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "4001:23:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
												"typeString": "mapping(uint256 => uint256[])"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"baseType": {
													"id": 2112,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4017:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2113,
												"nodeType": "ArrayTypeName",
												"src": "4017:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2120,
									"mutability": "mutable",
									"name": "matrixDirect",
									"nameLocation": "4112:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "4081:43:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 2119,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2117,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "4089:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4081:21:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2118,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "4097:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2125,
									"mutability": "mutable",
									"name": "directReferrals",
									"nameLocation": "4200:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "4167:48:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(uint256 => uint256[])"
									},
									"typeName": {
										"id": 2124,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2121,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "4175:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4167:23:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(uint256 => uint256[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 2122,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "4183:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 2123,
											"nodeType": "ArrayTypeName",
											"src": "4183:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "0c28361b1bd0a8a8cd2daf76b402a306e7c3ed3e7bb56820ba81a5edab4636e0",
									"id": 2139,
									"name": "UserJoined",
									"nameLocation": "4230:10:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2127,
												"indexed": true,
												"mutability": "mutable",
												"name": "matrixId",
												"nameLocation": "4255:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2139,
												"src": "4241:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2126,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4241:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2129,
												"indexed": true,
												"mutability": "mutable",
												"name": "userId",
												"nameLocation": "4280:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2139,
												"src": "4265:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2128,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4265:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2131,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4304:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2139,
												"src": "4288:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4288:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2133,
												"indexed": false,
												"mutability": "mutable",
												"name": "parentId",
												"nameLocation": "4317:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2139,
												"src": "4310:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2132,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4310:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2135,
												"indexed": false,
												"mutability": "mutable",
												"name": "parentAddr",
												"nameLocation": "4335:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2139,
												"src": "4327:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2137,
												"indexed": false,
												"mutability": "mutable",
												"name": "position",
												"nameLocation": "4353:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2139,
												"src": "4347:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2136,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4347:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4240:122:8"
									},
									"src": "4224:139:8"
								},
								{
									"anonymous": false,
									"eventSelector": "792af4ddd1dc413b17bea369ca90e7ae463cc96b773c936c70b33d8b08bc096f",
									"id": 2147,
									"name": "RewardSent",
									"nameLocation": "4375:10:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2141,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4402:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "4386:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4386:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2143,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4414:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "4406:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4406:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2145,
												"indexed": false,
												"mutability": "mutable",
												"name": "level",
												"nameLocation": "4429:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "4422:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2144,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4422:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4385:50:8"
									},
									"src": "4369:67:8"
								},
								{
									"anonymous": false,
									"eventSelector": "309bb360e8b69c23937ccc5fb01f9aeeead1c95a99604e175113ff82f2b1723a",
									"id": 2157,
									"name": "Registration",
									"nameLocation": "4466:12:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2149,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4495:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "4479:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4479:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2151,
												"indexed": true,
												"mutability": "mutable",
												"name": "sponsor",
												"nameLocation": "4517:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "4501:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4501:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2153,
												"indexed": true,
												"mutability": "mutable",
												"name": "userId",
												"nameLocation": "4539:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "4526:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2152,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4526:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2155,
												"indexed": false,
												"mutability": "mutable",
												"name": "uplineId",
												"nameLocation": "4552:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "4547:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2154,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4547:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4478:83:8"
									},
									"src": "4460:102:8"
								},
								{
									"anonymous": false,
									"eventSelector": "babb6a363fd9a057996d09882c0b74b710d121707d19eeffd91c51c3171a7c91",
									"id": 2167,
									"name": "Upgrade",
									"nameLocation": "4574:7:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2159,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4598:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "4582:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4582:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2161,
												"indexed": true,
												"mutability": "mutable",
												"name": "userId",
												"nameLocation": "4617:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "4604:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2160,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4604:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2163,
												"indexed": false,
												"mutability": "mutable",
												"name": "packageLevel",
												"nameLocation": "4630:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "4625:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2162,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4625:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2165,
												"indexed": false,
												"mutability": "mutable",
												"name": "depositType",
												"nameLocation": "4651:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "4644:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2164,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4644:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4581:82:8"
									},
									"src": "4568:96:8"
								},
								{
									"anonymous": false,
									"eventSelector": "e17b61d324ce17328f433d0ab62581c0f0aa997312bae80fbdfcd2aa9b91d6e3",
									"id": 2179,
									"name": "IncomeDistributed",
									"nameLocation": "4676:17:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2169,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4710:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2179,
												"src": "4694:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4694:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2171,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4730:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2179,
												"src": "4714:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4714:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2173,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4741:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2179,
												"src": "4736:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2172,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4736:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2175,
												"indexed": false,
												"mutability": "mutable",
												"name": "packageLevel",
												"nameLocation": "4754:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2179,
												"src": "4749:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2174,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4749:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2177,
												"indexed": false,
												"mutability": "mutable",
												"name": "incomeType",
												"nameLocation": "4773:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2179,
												"src": "4768:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2176,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4768:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4693:91:8"
									},
									"src": "4670:115:8"
								},
								{
									"anonymous": false,
									"eventSelector": "5cbb4caf17c10875f33a7c303c1862bcd2fca5faed9a98d1f6e8f41bf720491f",
									"id": 2189,
									"name": "LotteryReward",
									"nameLocation": "4797:13:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2181,
												"indexed": true,
												"mutability": "mutable",
												"name": "winner",
												"nameLocation": "4827:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2189,
												"src": "4811:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4811:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2183,
												"indexed": true,
												"mutability": "mutable",
												"name": "fromUserId",
												"nameLocation": "4848:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2189,
												"src": "4835:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2182,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4835:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2185,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4865:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2189,
												"src": "4860:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2184,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4860:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2187,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "4878:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2189,
												"src": "4873:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2186,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4873:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4810:78:8"
									},
									"src": "4791:98:8"
								},
								{
									"anonymous": false,
									"eventSelector": "ed2ed4e697131e475ee1946b709d36d74793101a68ffaa7386f98886a32d8d9f",
									"id": 2197,
									"name": "CommunityBonusDistributed",
									"nameLocation": "4901:25:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2191,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4932:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2197,
												"src": "4927:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2190,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4927:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2193,
												"indexed": false,
												"mutability": "mutable",
												"name": "usersCount",
												"nameLocation": "4945:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2197,
												"src": "4940:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2192,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4940:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2195,
												"indexed": false,
												"mutability": "mutable",
												"name": "perUser",
												"nameLocation": "4962:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2197,
												"src": "4957:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2194,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4957:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4926:44:8"
									},
									"src": "4895:76:8"
								},
								{
									"constant": false,
									"functionSelector": "ae4708dc",
									"id": 2208,
									"mutability": "mutable",
									"name": "poolPackages",
									"nameLocation": "5042:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "5028:93:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 2198,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "5028:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 2199,
										"nodeType": "ArrayTypeName",
										"src": "5028:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"value": {
										"components": [
											{
												"hexValue": "3735653138",
												"id": 2200,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5058:5:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_75000000000000000000_by_1",
													"typeString": "int_const 75000000000000000000"
												},
												"value": "75e18"
											},
											{
												"hexValue": "333030653138",
												"id": 2201,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5065:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_300000000000000000000_by_1",
													"typeString": "int_const 300000000000000000000"
												},
												"value": "300e18"
											},
											{
												"hexValue": "31323030653138",
												"id": 2202,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5073:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1200000000000000000000_by_1",
													"typeString": "int_const 1200000000000000000000"
												},
												"value": "1200e18"
											},
											{
												"hexValue": "34383030653138",
												"id": 2203,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5082:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_4800000000000000000000_by_1",
													"typeString": "int_const 4800000000000000000000"
												},
												"value": "4800e18"
											},
											{
												"hexValue": "3139323030653138",
												"id": 2204,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5091:8:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_19200000000000000000000_by_1",
													"typeString": "int_const 19200000000000000000000"
												},
												"value": "19200e18"
											},
											{
												"hexValue": "3736383030653138",
												"id": 2205,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5101:8:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_76800000000000000000000_by_1",
													"typeString": "int_const 76800000000000000000000"
												},
												"value": "76800e18"
											},
											{
												"hexValue": "333037323030653138",
												"id": 2206,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5111:9:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_307200000000000000000000_by_1",
													"typeString": "int_const 307200000000000000000000"
												},
												"value": "307200e18"
											}
										],
										"id": 2207,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "5057:64:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint80_$7_memory_ptr",
											"typeString": "uint80[7] memory"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2350268f",
									"id": 2220,
									"mutability": "mutable",
									"name": "glbBoosterPackages",
									"nameLocation": "5142:18:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "5128:105:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 2209,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "5128:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 2210,
										"nodeType": "ArrayTypeName",
										"src": "5128:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"value": {
										"components": [
											{
												"hexValue": "313030653138",
												"id": 2211,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5165:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_100000000000000000000_by_1",
													"typeString": "int_const 100000000000000000000"
												},
												"value": "100e18"
											},
											{
												"hexValue": "323030653138",
												"id": 2212,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5173:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_200000000000000000000_by_1",
													"typeString": "int_const 200000000000000000000"
												},
												"value": "200e18"
											},
											{
												"hexValue": "343030653138",
												"id": 2213,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5181:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_400000000000000000000_by_1",
													"typeString": "int_const 400000000000000000000"
												},
												"value": "400e18"
											},
											{
												"hexValue": "383030653138",
												"id": 2214,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5189:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_800000000000000000000_by_1",
													"typeString": "int_const 800000000000000000000"
												},
												"value": "800e18"
											},
											{
												"hexValue": "31363030653138",
												"id": 2215,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5197:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1600000000000000000000_by_1",
													"typeString": "int_const 1600000000000000000000"
												},
												"value": "1600e18"
											},
											{
												"hexValue": "33323030653138",
												"id": 2216,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5206:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_3200000000000000000000_by_1",
													"typeString": "int_const 3200000000000000000000"
												},
												"value": "3200e18"
											},
											{
												"hexValue": "36343030653138",
												"id": 2217,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5215:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_6400000000000000000000_by_1",
													"typeString": "int_const 6400000000000000000000"
												},
												"value": "6400e18"
											},
											{
												"hexValue": "3132383030653138",
												"id": 2218,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5224:8:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_12800000000000000000000_by_1",
													"typeString": "int_const 12800000000000000000000"
												},
												"value": "12800e18"
											}
										],
										"id": 2219,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "5163:70:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint80_$8_memory_ptr",
											"typeString": "uint80[8] memory"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2132d204",
									"id": 2232,
									"mutability": "mutable",
									"name": "minLevelForPool",
									"nameLocation": "5255:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "5240:57:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$7_storage",
										"typeString": "uint256[7]"
									},
									"typeName": {
										"baseType": {
											"id": 2221,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "5240:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 2223,
										"length": {
											"hexValue": "37",
											"id": 2222,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "5245:1:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_7_by_1",
												"typeString": "int_const 7"
											},
											"value": "7"
										},
										"nodeType": "ArrayTypeName",
										"src": "5240:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$7_storage_ptr",
											"typeString": "uint256[7]"
										}
									},
									"value": {
										"components": [
											{
												"hexValue": "33",
												"id": 2224,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5274:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_3_by_1",
													"typeString": "int_const 3"
												},
												"value": "3"
											},
											{
												"hexValue": "35",
												"id": 2225,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5277:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_5_by_1",
													"typeString": "int_const 5"
												},
												"value": "5"
											},
											{
												"hexValue": "37",
												"id": 2226,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5280:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_7_by_1",
													"typeString": "int_const 7"
												},
												"value": "7"
											},
											{
												"hexValue": "39",
												"id": 2227,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5283:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_9_by_1",
													"typeString": "int_const 9"
												},
												"value": "9"
											},
											{
												"hexValue": "3131",
												"id": 2228,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5286:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_11_by_1",
													"typeString": "int_const 11"
												},
												"value": "11"
											},
											{
												"hexValue": "3133",
												"id": 2229,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5290:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_13_by_1",
													"typeString": "int_const 13"
												},
												"value": "13"
											},
											{
												"hexValue": "3135",
												"id": 2230,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5294:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_15_by_1",
													"typeString": "int_const 15"
												},
												"value": "15"
											}
										],
										"id": 2231,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "5273:24:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint8_$7_memory_ptr",
											"typeString": "uint8[7] memory"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d0a2fd79",
									"id": 2245,
									"mutability": "mutable",
									"name": "minLevelForGlbBooster",
									"nameLocation": "5319:21:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "5304:64:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$8_storage",
										"typeString": "uint256[8]"
									},
									"typeName": {
										"baseType": {
											"id": 2233,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "5304:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 2235,
										"length": {
											"hexValue": "38",
											"id": 2234,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "5309:1:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_8_by_1",
												"typeString": "int_const 8"
											},
											"value": "8"
										},
										"nodeType": "ArrayTypeName",
										"src": "5304:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$8_storage_ptr",
											"typeString": "uint256[8]"
										}
									},
									"value": {
										"components": [
											{
												"hexValue": "34",
												"id": 2236,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5344:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_4_by_1",
													"typeString": "int_const 4"
												},
												"value": "4"
											},
											{
												"hexValue": "35",
												"id": 2237,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5347:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_5_by_1",
													"typeString": "int_const 5"
												},
												"value": "5"
											},
											{
												"hexValue": "36",
												"id": 2238,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5350:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_6_by_1",
													"typeString": "int_const 6"
												},
												"value": "6"
											},
											{
												"hexValue": "37",
												"id": 2239,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5353:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_7_by_1",
													"typeString": "int_const 7"
												},
												"value": "7"
											},
											{
												"hexValue": "38",
												"id": 2240,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5356:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_8_by_1",
													"typeString": "int_const 8"
												},
												"value": "8"
											},
											{
												"hexValue": "39",
												"id": 2241,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5359:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_9_by_1",
													"typeString": "int_const 9"
												},
												"value": "9"
											},
											{
												"hexValue": "3130",
												"id": 2242,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5362:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											{
												"hexValue": "3131",
												"id": 2243,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5365:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_11_by_1",
													"typeString": "int_const 11"
												},
												"value": "11"
											}
										],
										"id": 2244,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "5343:25:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint8_$8_memory_ptr",
											"typeString": "uint8[8] memory"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "956a3228",
									"id": 2258,
									"mutability": "mutable",
									"name": "minPoolForGlbBooster",
									"nameLocation": "5390:20:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "5375:61:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$8_storage",
										"typeString": "uint256[8]"
									},
									"typeName": {
										"baseType": {
											"id": 2246,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "5375:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 2248,
										"length": {
											"hexValue": "38",
											"id": 2247,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "5380:1:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_8_by_1",
												"typeString": "int_const 8"
											},
											"value": "8"
										},
										"nodeType": "ArrayTypeName",
										"src": "5375:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$8_storage_ptr",
											"typeString": "uint256[8]"
										}
									},
									"value": {
										"components": [
											{
												"hexValue": "30",
												"id": 2249,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5414:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0"
											},
											{
												"hexValue": "31",
												"id": 2250,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5417:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											{
												"hexValue": "31",
												"id": 2251,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5420:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											{
												"hexValue": "31",
												"id": 2252,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5423:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											{
												"hexValue": "31",
												"id": 2253,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5426:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											{
												"hexValue": "31",
												"id": 2254,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5429:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											{
												"hexValue": "31",
												"id": 2255,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5432:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											{
												"hexValue": "31",
												"id": 2256,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5434:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											}
										],
										"id": 2257,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "5413:23:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint8_$8_memory_ptr",
											"typeString": "uint8[8] memory"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.UserPool",
									"id": 2269,
									"members": [
										{
											"constant": false,
											"id": 2260,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "5479:2:8",
											"nodeType": "VariableDeclaration",
											"scope": 2269,
											"src": "5474:7:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2259,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "5474:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2262,
											"mutability": "mutable",
											"name": "mainid",
											"nameLocation": "5512:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 2269,
											"src": "5507:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2261,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "5507:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2264,
											"mutability": "mutable",
											"name": "poolId",
											"nameLocation": "5534:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 2269,
											"src": "5529:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2263,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "5529:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2266,
											"mutability": "mutable",
											"name": "parentId",
											"nameLocation": "5556:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 2269,
											"src": "5551:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2265,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "5551:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2268,
											"mutability": "mutable",
											"name": "bonusCount",
											"nameLocation": "5582:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 2269,
											"src": "5577:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2267,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "5577:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserPool",
									"nameLocation": "5454:8:8",
									"nodeType": "StructDefinition",
									"scope": 2858,
									"src": "5447:165:8",
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.UserPoolTopup",
									"id": 2274,
									"members": [
										{
											"constant": false,
											"id": 2271,
											"mutability": "mutable",
											"name": "nextPoolAmt",
											"nameLocation": "5661:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 2274,
											"src": "5656:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2270,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "5656:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2273,
											"mutability": "mutable",
											"name": "reTopupAmt",
											"nameLocation": "5695:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 2274,
											"src": "5690:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2272,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "5690:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserPoolTopup",
									"nameLocation": "5631:13:8",
									"nodeType": "StructDefinition",
									"scope": 2858,
									"src": "5624:94:8",
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.UserBooster",
									"id": 2285,
									"members": [
										{
											"constant": false,
											"id": 2276,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "5786:2:8",
											"nodeType": "VariableDeclaration",
											"scope": 2285,
											"src": "5781:7:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2275,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "5781:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2278,
											"mutability": "mutable",
											"name": "poolId",
											"nameLocation": "5805:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 2285,
											"src": "5800:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2277,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "5800:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2280,
											"mutability": "mutable",
											"name": "parentId",
											"nameLocation": "5827:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 2285,
											"src": "5822:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2279,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "5822:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2282,
											"mutability": "mutable",
											"name": "bonusCount",
											"nameLocation": "5853:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 2285,
											"src": "5848:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2281,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "5848:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2284,
											"mutability": "mutable",
											"name": "joinTime",
											"nameLocation": "5880:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 2285,
											"src": "5875:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2283,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "5875:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserBooster",
									"nameLocation": "5758:11:8",
									"nodeType": "StructDefinition",
									"scope": 2858,
									"src": "5751:157:8",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2292,
									"mutability": "mutable",
									"name": "userPooltopup",
									"nameLocation": "6010:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "5952:71:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_UserPoolTopup_$2274_storage_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.UserPoolTopup))"
									},
									"typeName": {
										"id": 2291,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2286,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "5960:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "5952:48:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_UserPoolTopup_$2274_storage_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.UserPoolTopup))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2290,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2287,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "5977:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "5969:30:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserPoolTopup_$2274_storage_$",
												"typeString": "mapping(uint256 => struct Storage.UserPoolTopup)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 2289,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2288,
													"name": "UserPoolTopup",
													"nameLocations": [
														"5985:13:8"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2274,
													"src": "5985:13:8"
												},
												"referencedDeclaration": 2274,
												"src": "5985:13:8",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserPoolTopup_$2274_storage_ptr",
													"typeString": "struct Storage.UserPoolTopup"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2299,
									"mutability": "mutable",
									"name": "userPooldtl",
									"nameLocation": "6085:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "6032:64:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_UserPool_$2269_storage_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.UserPool))"
									},
									"typeName": {
										"id": 2298,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2293,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "6040:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "6032:43:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_UserPool_$2269_storage_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.UserPool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2297,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2294,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "6057:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "6049:25:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserPool_$2269_storage_$",
												"typeString": "mapping(uint256 => struct Storage.UserPool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 2296,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2295,
													"name": "UserPool",
													"nameLocations": [
														"6065:8:8"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2269,
													"src": "6065:8:8"
												},
												"referencedDeclaration": 2269,
												"src": "6065:8:8",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserPool_$2269_storage_ptr",
													"typeString": "struct Storage.UserPool"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2306,
									"mutability": "mutable",
									"name": "userChildren",
									"nameLocation": "6153:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "6103:62:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => uint256[]))"
									},
									"typeName": {
										"id": 2305,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2300,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "6111:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "6103:40:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => uint256[]))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2304,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2301,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "6127:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "6119:23:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
												"typeString": "mapping(uint256 => uint256[])"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"baseType": {
													"id": 2302,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6135:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2303,
												"nodeType": "ArrayTypeName",
												"src": "6135:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2313,
									"mutability": "mutable",
									"name": "userIdPerPool",
									"nameLocation": "6245:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "6195:63:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => uint256[]))"
									},
									"typeName": {
										"id": 2312,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2307,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "6203:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "6195:40:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => uint256[]))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2311,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2308,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "6219:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "6211:23:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
												"typeString": "mapping(uint256 => uint256[])"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"baseType": {
													"id": 2309,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6227:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2310,
												"nodeType": "ArrayTypeName",
												"src": "6227:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2318,
									"mutability": "mutable",
									"name": "poolUsers",
									"nameLocation": "6330:9:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "6297:42:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(uint256 => uint256[])"
									},
									"typeName": {
										"id": 2317,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2314,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "6305:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "6297:23:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(uint256 => uint256[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 2315,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "6313:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 2316,
											"nodeType": "ArrayTypeName",
											"src": "6313:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2324,
									"mutability": "mutable",
									"name": "userHasPool",
									"nameLocation": "6424:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "6376:59:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => bool))"
									},
									"typeName": {
										"id": 2323,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2319,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "6384:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "6376:38:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2322,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2320,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "6400:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "6392:21:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
												"typeString": "mapping(uint256 => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 2321,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "6408:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2331,
									"mutability": "mutable",
									"name": "userBoosterdtl",
									"nameLocation": "6539:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "6483:70:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_UserBooster_$2285_storage_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.UserBooster))"
									},
									"typeName": {
										"id": 2330,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2325,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "6491:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "6483:46:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_UserBooster_$2285_storage_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.UserBooster))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2329,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2326,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "6508:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "6500:28:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserBooster_$2285_storage_$",
												"typeString": "mapping(uint256 => struct Storage.UserBooster)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 2328,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2327,
													"name": "UserBooster",
													"nameLocations": [
														"6516:11:8"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2285,
													"src": "6516:11:8"
												},
												"referencedDeclaration": 2285,
												"src": "6516:11:8",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserBooster_$2285_storage_ptr",
													"typeString": "struct Storage.UserBooster"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2338,
									"mutability": "mutable",
									"name": "userBoosterChildren",
									"nameLocation": "6611:19:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "6560:70:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => uint256[]))"
									},
									"typeName": {
										"id": 2337,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2332,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "6568:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "6560:41:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => uint256[]))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2336,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2333,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "6585:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "6577:23:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
												"typeString": "mapping(uint256 => uint256[])"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"baseType": {
													"id": 2334,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6593:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2335,
												"nodeType": "ArrayTypeName",
												"src": "6593:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2343,
									"mutability": "mutable",
									"name": "boosterUsers",
									"nameLocation": "6670:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "6637:45:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(uint256 => uint256[])"
									},
									"typeName": {
										"id": 2342,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2339,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "6645:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "6637:23:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(uint256 => uint256[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 2340,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "6653:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 2341,
											"nodeType": "ArrayTypeName",
											"src": "6653:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2349,
									"mutability": "mutable",
									"name": "userHasbooster",
									"nameLocation": "6770:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "6722:62:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => bool))"
									},
									"typeName": {
										"id": 2348,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2344,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "6730:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "6722:38:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2347,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2345,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "6746:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "6738:21:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
												"typeString": "mapping(uint256 => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 2346,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "6754:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"functionSelector": "76f5f700",
									"id": 2352,
									"mutability": "constant",
									"name": "WEEK_DURATION",
									"nameLocation": "6878:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "6857:43:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2350,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "6857:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "37",
										"id": 2351,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6894:6:8",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_604800_by_1",
											"typeString": "int_const 604800"
										},
										"value": "7"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "2a891534",
									"id": 2355,
									"mutability": "constant",
									"name": "MONTH_DURATION",
									"nameLocation": "6928:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "6907:45:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2353,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "6907:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3330",
										"id": 2354,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6945:7:8",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2592000_by_1",
											"typeString": "int_const 2592000"
										},
										"value": "30"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "ebe0ff15",
									"id": 2358,
									"mutability": "constant",
									"name": "WeeklyCapping",
									"nameLocation": "6980:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "6959:44:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2356,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "6959:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030653138",
										"id": 2357,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6996:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000"
										},
										"value": "1000e18"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "c8df2908",
									"id": 2361,
									"mutability": "constant",
									"name": "monthlyCapping",
									"nameLocation": "7031:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "7010:46:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2359,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "7010:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130303030653138",
										"id": 2360,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7048:8:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000000"
										},
										"value": "10000e18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ca8e9121",
									"id": 2364,
									"mutability": "mutable",
									"name": "currentWeeklyRound",
									"nameLocation": "7077:18:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "7065:34:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2362,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "7065:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 2363,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7098:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c9ed0708",
									"id": 2367,
									"mutability": "mutable",
									"name": "currentMonthlyRound",
									"nameLocation": "7122:19:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "7110:35:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2365,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "7110:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 2366,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7144:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fddc806f",
									"id": 2370,
									"mutability": "mutable",
									"name": "currentWeeklyStartTime",
									"nameLocation": "7164:22:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "7152:38:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2368,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "7152:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 2369,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7189:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e898fc38",
									"id": 2373,
									"mutability": "mutable",
									"name": "currentMonthlyStartTime",
									"nameLocation": "7209:23:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "7197:39:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2371,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "7197:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 2372,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7235:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3080b5bc",
									"id": 2376,
									"mutability": "mutable",
									"name": "WeeklyTotalReward",
									"nameLocation": "7255:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "7243:33:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2374,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "7243:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 2375,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7275:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.WeeklyContest",
									"id": 2395,
									"members": [
										{
											"constant": false,
											"id": 2378,
											"mutability": "mutable",
											"name": "roundId",
											"nameLocation": "7324:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 2395,
											"src": "7319:12:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2377,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7319:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2380,
											"mutability": "mutable",
											"name": "totalReward",
											"nameLocation": "7351:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 2395,
											"src": "7346:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2379,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7346:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2382,
											"mutability": "mutable",
											"name": "totalUsers",
											"nameLocation": "7378:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 2395,
											"src": "7373:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2381,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7373:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2384,
											"mutability": "mutable",
											"name": "perUserReward",
											"nameLocation": "7404:13:8",
											"nodeType": "VariableDeclaration",
											"scope": 2395,
											"src": "7399:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2383,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7399:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2386,
											"mutability": "mutable",
											"name": "claimedCount",
											"nameLocation": "7433:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 2395,
											"src": "7428:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2385,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7428:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2388,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "7461:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 2395,
											"src": "7456:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2387,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7456:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2390,
											"mutability": "mutable",
											"name": "endTime",
											"nameLocation": "7486:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 2395,
											"src": "7481:12:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2389,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7481:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2392,
											"mutability": "mutable",
											"name": "carryForward",
											"nameLocation": "7509:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 2395,
											"src": "7504:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2391,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7504:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2394,
											"mutability": "mutable",
											"name": "closed",
											"nameLocation": "7537:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 2395,
											"src": "7532:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2393,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "7532:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "WeeklyContest",
									"nameLocation": "7294:13:8",
									"nodeType": "StructDefinition",
									"scope": 2858,
									"src": "7287:264:8",
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.weeklyUser",
									"id": 2408,
									"members": [
										{
											"constant": false,
											"id": 2397,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "7595:2:8",
											"nodeType": "VariableDeclaration",
											"scope": 2408,
											"src": "7590:7:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2396,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7590:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2399,
											"mutability": "mutable",
											"name": "joinTime",
											"nameLocation": "7613:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 2408,
											"src": "7608:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2398,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7608:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2401,
											"mutability": "mutable",
											"name": "roundId",
											"nameLocation": "7637:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 2408,
											"src": "7632:12:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2400,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7632:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2403,
											"mutability": "mutable",
											"name": "claimTime",
											"nameLocation": "7661:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 2408,
											"src": "7656:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2402,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7656:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2405,
											"mutability": "mutable",
											"name": "isClaimed",
											"nameLocation": "7686:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 2408,
											"src": "7681:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2404,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "7681:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2407,
											"mutability": "mutable",
											"name": "isQualified",
											"nameLocation": "7712:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 2408,
											"src": "7707:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2406,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "7707:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "weeklyUser",
									"nameLocation": "7569:10:8",
									"nodeType": "StructDefinition",
									"scope": 2858,
									"src": "7562:169:8",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2413,
									"mutability": "mutable",
									"name": "weeklyContestdtl",
									"nameLocation": "7778:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "7737:57:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_WeeklyContest_$2395_storage_$",
										"typeString": "mapping(uint256 => struct Storage.WeeklyContest)"
									},
									"typeName": {
										"id": 2412,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2409,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "7746:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "7737:31:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_WeeklyContest_$2395_storage_$",
											"typeString": "mapping(uint256 => struct Storage.WeeklyContest)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2411,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2410,
												"name": "WeeklyContest",
												"nameLocations": [
													"7754:13:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2395,
												"src": "7754:13:8"
											},
											"referencedDeclaration": 2395,
											"src": "7754:13:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_WeeklyContest_$2395_storage_ptr",
												"typeString": "struct Storage.WeeklyContest"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2418,
									"mutability": "mutable",
									"name": "weeklyQualifiedUsers",
									"nameLocation": "7852:20:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "7829:43:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(uint256 => uint256[])"
									},
									"typeName": {
										"id": 2417,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2414,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "7837:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "7829:22:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(uint256 => uint256[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 2415,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7844:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 2416,
											"nodeType": "ArrayTypeName",
											"src": "7844:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2425,
									"mutability": "mutable",
									"name": "weeklyUserdtl",
									"nameLocation": "7956:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "7902:67:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_weeklyUser_$2408_storage_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.weeklyUser))"
									},
									"typeName": {
										"id": 2424,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2419,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "7910:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "7902:44:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_weeklyUser_$2408_storage_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.weeklyUser))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2423,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2420,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7926:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "7918:27:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_weeklyUser_$2408_storage_$",
												"typeString": "mapping(uint256 => struct Storage.weeklyUser)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 2422,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2421,
													"name": "weeklyUser",
													"nameLocations": [
														"7934:10:8"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2408,
													"src": "7934:10:8"
												},
												"referencedDeclaration": 2408,
												"src": "7934:10:8",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_weeklyUser_$2408_storage_ptr",
													"typeString": "struct Storage.weeklyUser"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2432,
									"mutability": "mutable",
									"name": "weeklyUserDirects",
									"nameLocation": "8053:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 2858,
									"src": "8003:67:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => uint256[]))"
									},
									"typeName": {
										"id": 2431,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2426,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "8011:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "8003:40:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => uint256[]))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2430,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2427,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8027:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "8019:23:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
												"typeString": "mapping(uint256 => uint256[])"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"baseType": {
													"id": 2428,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8035:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2429,
												"nodeType": "ArrayTypeName",
												"src": "8035:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "09b877a20710744b3d7c0ecbb29b17f65def43eaf6ce93cb499baf66769ee4ab",
									"id": 2446,
									"name": "WeeklyClosed",
									"nameLocation": "8129:12:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2434,
												"indexed": false,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "8147:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2446,
												"src": "8142:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2433,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8142:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2436,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalUsers",
												"nameLocation": "8161:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2446,
												"src": "8156:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2435,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8156:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2438,
												"indexed": false,
												"mutability": "mutable",
												"name": "perUserReward",
												"nameLocation": "8178:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 2446,
												"src": "8173:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2437,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8173:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2440,
												"indexed": false,
												"mutability": "mutable",
												"name": "distributedAmount",
												"nameLocation": "8198:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 2446,
												"src": "8193:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2439,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8193:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2442,
												"indexed": false,
												"mutability": "mutable",
												"name": "leftoverReward",
												"nameLocation": "8222:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 2446,
												"src": "8217:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2441,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8217:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2444,
												"indexed": false,
												"mutability": "mutable",
												"name": "endTime",
												"nameLocation": "8243:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2446,
												"src": "8238:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2443,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8238:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8141:110:8"
									},
									"src": "8123:129:8"
								},
								{
									"anonymous": false,
									"eventSelector": "96ee4f374d0394c5383b347dc3b7ec04a1eceddcd2e25521157bce21c42b24d5",
									"id": 2456,
									"name": "WeeklyRewardClaim",
									"nameLocation": "8264:17:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2448,
												"indexed": false,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "8287:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2456,
												"src": "8282:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2447,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8282:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2450,
												"indexed": false,
												"mutability": "mutable",
												"name": "userId",
												"nameLocation": "8301:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2456,
												"src": "8296:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2449,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8296:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2452,
												"indexed": false,
												"mutability": "mutable",
												"name": "perUserReward",
												"nameLocation": "8314:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 2456,
												"src": "8309:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2451,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8309:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2454,
												"indexed": false,
												"mutability": "mutable",
												"name": "claimTime",
												"nameLocation": "8335:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2456,
												"src": "8330:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2453,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8330:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8281:64:8"
									},
									"src": "8258:88:8"
								},
								{
									"anonymous": false,
									"eventSelector": "360cb96d3e85b4fc299ddfa9a572850fc70961c86f0f1703f033143b0e5a82cf",
									"id": 2464,
									"name": "WeeklyContestQualified",
									"nameLocation": "8358:22:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2458,
												"indexed": false,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "8386:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2464,
												"src": "8381:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2457,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8381:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2460,
												"indexed": false,
												"mutability": "mutable",
												"name": "userId",
												"nameLocation": "8400:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2464,
												"src": "8395:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2459,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8395:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2462,
												"indexed": false,
												"mutability": "mutable",
												"name": "joinTime",
												"nameLocation": "8413:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2464,
												"src": "8408:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2461,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8408:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8380:42:8"
									},
									"src": "8352:71:8"
								},
								{
									"body": {
										"id": 2467,
										"nodeType": "Block",
										"src": "8452:17:8",
										"statements": []
									},
									"id": 2468,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8449:2:8"
									},
									"returnParameters": {
										"id": 2466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8452:0:8"
									},
									"scope": 2858,
									"src": "8438:31:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2517,
										"nodeType": "Block",
										"src": "8530:564:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2474,
																"name": "creatorWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1921,
																"src": "8545:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2477,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8570:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2476,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8562:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2475,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8562:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 2478,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8562:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8545:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "666565206164647273206e6f7420736574",
															"id": 2480,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8573:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24633079efecc28c5aede41112c3990abdd9e7b0bb26db3b9a203d1a67268b03",
																"typeString": "literal_string \"fee addrs not set\""
															},
															"value": "fee addrs not set"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24633079efecc28c5aede41112c3990abdd9e7b0bb26db3b9a203d1a67268b03",
																"typeString": "literal_string \"fee addrs not set\""
															}
														],
														"id": 2473,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8537:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8537:56:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2482,
												"nodeType": "ExpressionStatement",
												"src": "8537:56:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2486,
															"name": "creatorWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1921,
															"src": "8709:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2487,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2470,
															"src": "8724:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2483,
															"name": "usdt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1919,
															"src": "8691:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														"id": 2485,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8696:12:8",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 277,
														"src": "8691:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$232_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8691:41:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2489,
												"nodeType": "ExpressionStatement",
												"src": "8691:41:8"
											},
											{
												"assignments": [
													2492
												],
												"declarations": [
													{
														"constant": false,
														"id": 2492,
														"mutability": "mutable",
														"name": "creatorIncome",
														"nameLocation": "8811:13:8",
														"nodeType": "VariableDeclaration",
														"scope": 2517,
														"src": "8792:32:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserIncome_$2078_storage_ptr",
															"typeString": "struct Storage.UserIncome"
														},
														"typeName": {
															"id": 2491,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2490,
																"name": "UserIncome",
																"nameLocations": [
																	"8792:10:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2078,
																"src": "8792:10:8"
															},
															"referencedDeclaration": 2078,
															"src": "8792:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserIncome_$2078_storage_ptr",
																"typeString": "struct Storage.UserIncome"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2496,
												"initialValue": {
													"baseExpression": {
														"id": 2493,
														"name": "userIncomes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2103,
														"src": "8827:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserIncome_$2078_storage_$",
															"typeString": "mapping(uint256 => struct Storage.UserIncome storage ref)"
														}
													},
													"id": 2495,
													"indexExpression": {
														"id": 2494,
														"name": "defaultRefId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1927,
														"src": "8839:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8827:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserIncome_$2078_storage",
														"typeString": "struct Storage.UserIncome storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8792:60:8"
											},
											{
												"expression": {
													"id": 2501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2497,
															"name": "creatorIncome",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2492,
															"src": "8859:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserIncome_$2078_storage_ptr",
																"typeString": "struct Storage.UserIncome storage pointer"
															}
														},
														"id": 2499,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8873:11:8",
														"memberName": "totalIncome",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2053,
														"src": "8859:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2500,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2470,
														"src": "8888:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8859:36:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2502,
												"nodeType": "ExpressionStatement",
												"src": "8859:36:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2508,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8967:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"id": 2509,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2470,
																	"src": "8987:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 2510,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9019:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"expression": {
																		"id": 2511,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "9042:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9048:9:8",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "9042:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "35",
																	"id": 2513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9080:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	},
																	"value": "5"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	}
																],
																"id": 2507,
																"name": "Income",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2089,
																"src": "8937:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Income_$2089_storage_ptr_$",
																	"typeString": "type(struct Storage.Income storage pointer)"
																}
															},
															"id": 2514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"8955:10:8",
																"8979:6:8",
																"9005:12:8",
																"9031:9:8",
																"9068:10:8"
															],
															"names": [
																"fromUserId",
																"amount",
																"packageLevel",
																"timestamp",
																"incomeType"
															],
															"nodeType": "FunctionCall",
															"src": "8937:152:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Income_$2089_memory_ptr",
																"typeString": "struct Storage.Income memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Income_$2089_memory_ptr",
																"typeString": "struct Storage.Income memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 2503,
																"name": "incomeHistory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2109,
																"src": "8904:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Income_$2089_storage_$dyn_storage_$",
																	"typeString": "mapping(uint256 => struct Storage.Income storage ref[] storage ref)"
																}
															},
															"id": 2505,
															"indexExpression": {
																"id": 2504,
																"name": "defaultRefId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1927,
																"src": "8918:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8904:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Income_$2089_storage_$dyn_storage",
																"typeString": "struct Storage.Income storage ref[] storage ref"
															}
														},
														"id": 2506,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8932:4:8",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "8904:32:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Income_$2089_storage_$dyn_storage_ptr_$_t_struct$_Income_$2089_storage_$returns$__$attached_to$_t_array$_t_struct$_Income_$2089_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct Storage.Income storage ref[] storage pointer,struct Storage.Income storage ref)"
														}
													},
													"id": 2515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8904:186:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2516,
												"nodeType": "ExpressionStatement",
												"src": "8904:186:8"
											}
										]
									},
									"id": 2518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_sendToCreator",
									"nameLocation": "8492:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2470,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "8512:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "8507:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2469,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8507:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8506:14:8"
									},
									"returnParameters": {
										"id": 2472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8530:0:8"
									},
									"scope": 2858,
									"src": "8483:611:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2709,
										"nodeType": "Block",
										"src": "9218:1816:8",
										"statements": [
											{
												"assignments": [
													2533
												],
												"declarations": [
													{
														"constant": false,
														"id": 2533,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "9238:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 2709,
														"src": "9225:17:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$2051_storage_ptr",
															"typeString": "struct Storage.User"
														},
														"typeName": {
															"id": 2532,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2531,
																"name": "User",
																"nameLocations": [
																	"9225:4:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2051,
																"src": "9225:4:8"
															},
															"referencedDeclaration": 2051,
															"src": "9225:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2051_storage_ptr",
																"typeString": "struct Storage.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2537,
												"initialValue": {
													"baseExpression": {
														"id": 2534,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2098,
														"src": "9245:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2051_storage_$",
															"typeString": "mapping(uint256 => struct Storage.User storage ref)"
														}
													},
													"id": 2536,
													"indexExpression": {
														"id": 2535,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2520,
														"src": "9251:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9245:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$2051_storage",
														"typeString": "struct Storage.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9225:34:8"
											},
											{
												"assignments": [
													2539
												],
												"declarations": [
													{
														"constant": false,
														"id": 2539,
														"mutability": "mutable",
														"name": "userAddress",
														"nameLocation": "9274:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 2709,
														"src": "9266:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2538,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9266:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2542,
												"initialValue": {
													"expression": {
														"id": 2540,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2533,
														"src": "9288:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$2051_storage_ptr",
															"typeString": "struct Storage.User storage pointer"
														}
													},
													"id": 2541,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "9293:7:8",
													"memberName": "account",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2018,
													"src": "9288:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9266:34:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2544,
																"name": "userAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2539,
																"src": "9315:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9338:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9330:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2545,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9330:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 2548,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9330:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9315:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642075736572",
															"id": 2550,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9342:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d34e7942b50fb081b1a15c529d5017673bd90fd52cb4962fa3d50206a7121a1b",
																"typeString": "literal_string \"Invalid user\""
															},
															"value": "Invalid user"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d34e7942b50fb081b1a15c529d5017673bd90fd52cb4962fa3d50206a7121a1b",
																"typeString": "literal_string \"Invalid user\""
															}
														],
														"id": 2543,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9307:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9307:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2552,
												"nodeType": "ExpressionStatement",
												"src": "9307:50:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2554,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2524,
																"src": "9372:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2555,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9382:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9372:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f20616d6f756e74",
															"id": 2557,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9385:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4",
																"typeString": "literal_string \"Zero amount\""
															},
															"value": "Zero amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4",
																"typeString": "literal_string \"Zero amount\""
															}
														],
														"id": 2553,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9364:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9364:35:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2559,
												"nodeType": "ExpressionStatement",
												"src": "9364:35:8"
											},
											{
												"assignments": [
													2562
												],
												"declarations": [
													{
														"constant": false,
														"id": 2562,
														"mutability": "mutable",
														"name": "income",
														"nameLocation": "9534:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 2709,
														"src": "9515:25:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserIncome_$2078_storage_ptr",
															"typeString": "struct Storage.UserIncome"
														},
														"typeName": {
															"id": 2561,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2560,
																"name": "UserIncome",
																"nameLocations": [
																	"9515:10:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2078,
																"src": "9515:10:8"
															},
															"referencedDeclaration": 2078,
															"src": "9515:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserIncome_$2078_storage_ptr",
																"typeString": "struct Storage.UserIncome"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2566,
												"initialValue": {
													"baseExpression": {
														"id": 2563,
														"name": "userIncomes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2103,
														"src": "9543:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserIncome_$2078_storage_$",
															"typeString": "mapping(uint256 => struct Storage.UserIncome storage ref)"
														}
													},
													"id": 2565,
													"indexExpression": {
														"id": 2564,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2520,
														"src": "9555:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9543:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserIncome_$2078_storage",
														"typeString": "struct Storage.UserIncome storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9515:48:8"
											},
											{
												"expression": {
													"id": 2571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2567,
															"name": "income",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2562,
															"src": "9570:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserIncome_$2078_storage_ptr",
																"typeString": "struct Storage.UserIncome storage pointer"
															}
														},
														"id": 2569,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9577:11:8",
														"memberName": "totalIncome",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2053,
														"src": "9570:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2570,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2524,
														"src": "9592:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9570:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2572,
												"nodeType": "ExpressionStatement",
												"src": "9570:29:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2573,
														"name": "_incomeType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2528,
														"src": "9678:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2574,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9693:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "9678:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2584,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2582,
															"name": "_incomeType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2528,
															"src": "9743:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "32",
															"id": 2583,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9758:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "9743:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2591,
																"name": "_incomeType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2528,
																"src": "9807:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "33",
																"id": 2592,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9822:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"src": "9807:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2600,
																	"name": "_incomeType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2528,
																	"src": "9877:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9892:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9877:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2609,
																		"name": "_incomeType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2528,
																		"src": "10081:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "38",
																		"id": 2610,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10096:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	"src": "10081:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2618,
																			"name": "_incomeType",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2528,
																			"src": "10153:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "3130",
																			"id": 2619,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10168:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "10153:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2629,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2627,
																				"name": "_incomeType",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2528,
																				"src": "10216:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "3131",
																				"id": 2628,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_11_by_1",
																					"typeString": "int_const 11"
																				},
																				"value": "11"
																			},
																			"src": "10216:17:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2638,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2636,
																					"name": "_incomeType",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2528,
																					"src": "10282:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"hexValue": "3132",
																					"id": 2637,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "10297:2:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_12_by_1",
																						"typeString": "int_const 12"
																					},
																					"value": "12"
																				},
																				"src": "10282:17:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseBody": {
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2647,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2645,
																						"name": "_incomeType",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2528,
																						"src": "10354:11:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "3133",
																						"id": 2646,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "10369:2:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_13_by_1",
																							"typeString": "int_const 13"
																						},
																						"value": "13"
																					},
																					"src": "10354:17:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2656,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2654,
																							"name": "_incomeType",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2528,
																							"src": "10421:11:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "3134",
																							"id": 2655,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "10436:2:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_14_by_1",
																								"typeString": "int_const 14"
																							},
																							"value": "14"
																						},
																						"src": "10421:17:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": {
																						"expression": {
																							"arguments": [
																								{
																									"hexValue": "556e6b6e6f776e20696e636f6d652074797065",
																									"id": 2664,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "string",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "10494:21:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_stringliteral_362cd1cd93870aa625050dba699b71f0dd1830454709724c3f6a93954bf62033",
																										"typeString": "literal_string \"Unknown income type\""
																									},
																									"value": "Unknown income type"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_stringliteral_362cd1cd93870aa625050dba699b71f0dd1830454709724c3f6a93954bf62033",
																										"typeString": "literal_string \"Unknown income type\""
																									}
																								],
																								"id": 2663,
																								"name": "revert",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [
																									4294967277,
																									4294967277
																								],
																								"referencedDeclaration": 4294967277,
																								"src": "10487:6:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																									"typeString": "function (string memory) pure"
																								}
																							},
																							"id": 2665,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "10487:29:8",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_tuple$__$",
																								"typeString": "tuple()"
																							}
																						},
																						"id": 2666,
																						"nodeType": "ExpressionStatement",
																						"src": "10487:29:8"
																					},
																					"id": 2667,
																					"nodeType": "IfStatement",
																					"src": "10417:99:8",
																					"trueBody": {
																						"expression": {
																							"id": 2661,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftHandSide": {
																								"expression": {
																									"id": 2657,
																									"name": "income",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2562,
																									"src": "10440:6:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_UserIncome_$2078_storage_ptr",
																										"typeString": "struct Storage.UserIncome storage pointer"
																									}
																								},
																								"id": 2659,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": true,
																								"memberLocation": "10447:17:8",
																								"memberName": "monthlyTopRoyalty",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 2077,
																								"src": "10440:24:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "Assignment",
																							"operator": "+=",
																							"rightHandSide": {
																								"id": 2660,
																								"name": "_amount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2524,
																								"src": "10468:7:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "10440:35:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 2662,
																						"nodeType": "ExpressionStatement",
																						"src": "10440:35:8"
																					}
																				},
																				"id": 2668,
																				"nodeType": "IfStatement",
																				"src": "10350:166:8",
																				"trueBody": {
																					"expression": {
																						"id": 2652,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"expression": {
																								"id": 2648,
																								"name": "income",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2562,
																								"src": "10373:6:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserIncome_$2078_storage_ptr",
																									"typeString": "struct Storage.UserIncome storage pointer"
																								}
																							},
																							"id": 2650,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"memberLocation": "10380:14:8",
																							"memberName": "monthlyRoyalty",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2075,
																							"src": "10373:21:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "+=",
																						"rightHandSide": {
																							"id": 2651,
																							"name": "_amount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2524,
																							"src": "10398:7:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "10373:32:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2653,
																					"nodeType": "ExpressionStatement",
																					"src": "10373:32:8"
																				}
																			},
																			"id": 2669,
																			"nodeType": "IfStatement",
																			"src": "10278:238:8",
																			"trueBody": {
																				"expression": {
																					"id": 2643,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"id": 2639,
																							"name": "income",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2562,
																							"src": "10301:6:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserIncome_$2078_storage_ptr",
																								"typeString": "struct Storage.UserIncome storage pointer"
																							}
																						},
																						"id": 2641,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberLocation": "10308:19:8",
																						"memberName": "weeklyContestIncome",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2073,
																						"src": "10301:26:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "+=",
																					"rightHandSide": {
																						"id": 2642,
																						"name": "_amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2524,
																						"src": "10331:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10301:37:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2644,
																				"nodeType": "ExpressionStatement",
																				"src": "10301:37:8"
																			}
																		},
																		"id": 2670,
																		"nodeType": "IfStatement",
																		"src": "10212:304:8",
																		"trueBody": {
																			"expression": {
																				"id": 2634,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"expression": {
																						"id": 2630,
																						"name": "income",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2562,
																						"src": "10235:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserIncome_$2078_storage_ptr",
																							"typeString": "struct Storage.UserIncome storage pointer"
																						}
																					},
																					"id": 2632,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": true,
																					"memberLocation": "10242:13:8",
																					"memberName": "boosterIncome",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2071,
																					"src": "10235:20:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "+=",
																				"rightHandSide": {
																					"id": 2633,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2524,
																					"src": "10259:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10235:31:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2635,
																			"nodeType": "ExpressionStatement",
																			"src": "10235:31:8"
																		}
																	},
																	"id": 2671,
																	"nodeType": "IfStatement",
																	"src": "10149:367:8",
																	"trueBody": {
																		"expression": {
																			"id": 2625,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 2621,
																					"name": "income",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2562,
																					"src": "10172:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserIncome_$2078_storage_ptr",
																						"typeString": "struct Storage.UserIncome storage pointer"
																					}
																				},
																				"id": 2623,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "10179:10:8",
																				"memberName": "poolIncome",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2069,
																				"src": "10172:17:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 2624,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2524,
																				"src": "10193:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10172:28:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2626,
																		"nodeType": "ExpressionStatement",
																		"src": "10172:28:8"
																	}
																},
																"id": 2672,
																"nodeType": "IfStatement",
																"src": "10077:439:8",
																"trueBody": {
																	"expression": {
																		"id": 2616,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"expression": {
																				"id": 2612,
																				"name": "income",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2562,
																				"src": "10099:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserIncome_$2078_storage_ptr",
																					"typeString": "struct Storage.UserIncome storage pointer"
																				}
																			},
																			"id": 2614,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberLocation": "10106:15:8",
																			"memberName": "communityIncome",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2067,
																			"src": "10099:22:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 2615,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2524,
																			"src": "10125:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "10099:33:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2617,
																	"nodeType": "ExpressionStatement",
																	"src": "10099:33:8"
																}
															},
															"id": 2673,
															"nodeType": "IfStatement",
															"src": "9873:643:8",
															"trueBody": {
																"expression": {
																	"id": 2607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"id": 2603,
																			"name": "income",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2562,
																			"src": "9895:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserIncome_$2078_storage_ptr",
																				"typeString": "struct Storage.UserIncome storage pointer"
																			}
																		},
																		"id": 2605,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberLocation": "9902:11:8",
																		"memberName": "levelIncome",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2061,
																		"src": "9895:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "+=",
																	"rightHandSide": {
																		"id": 2606,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2524,
																		"src": "9917:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9895:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2608,
																"nodeType": "ExpressionStatement",
																"src": "9895:29:8"
															}
														},
														"id": 2674,
														"nodeType": "IfStatement",
														"src": "9803:713:8",
														"trueBody": {
															"expression": {
																"id": 2598,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2594,
																		"name": "income",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2562,
																		"src": "9825:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserIncome_$2078_storage_ptr",
																			"typeString": "struct Storage.UserIncome storage pointer"
																		}
																	},
																	"id": 2596,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "9832:18:8",
																	"memberName": "levelBoosterIncome",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2059,
																	"src": "9825:25:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 2597,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2524,
																	"src": "9854:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9825:36:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2599,
															"nodeType": "ExpressionStatement",
															"src": "9825:36:8"
														}
													},
													"id": 2675,
													"nodeType": "IfStatement",
													"src": "9739:777:8",
													"trueBody": {
														"expression": {
															"id": 2589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 2585,
																	"name": "income",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2562,
																	"src": "9761:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserIncome_$2078_storage_ptr",
																		"typeString": "struct Storage.UserIncome storage pointer"
																	}
																},
																"id": 2587,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "9768:12:8",
																"memberName": "matrixIncome",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2057,
																"src": "9761:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2588,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2524,
																"src": "9784:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9761:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2590,
														"nodeType": "ExpressionStatement",
														"src": "9761:30:8"
													}
												},
												"id": 2676,
												"nodeType": "IfStatement",
												"src": "9669:847:8",
												"trueBody": {
													"expression": {
														"id": 2580,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"expression": {
																"id": 2576,
																"name": "income",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2562,
																"src": "9696:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserIncome_$2078_storage_ptr",
																	"typeString": "struct Storage.UserIncome storage pointer"
																}
															},
															"id": 2578,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"memberLocation": "9703:13:8",
															"memberName": "sponsorIncome",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2055,
															"src": "9696:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"id": 2579,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2524,
															"src": "9720:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9696:31:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2581,
													"nodeType": "ExpressionStatement",
													"src": "9696:31:8"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2682,
																	"name": "_fromUserId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2522,
																	"src": "10672:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2683,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2524,
																	"src": "10702:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2684,
																	"name": "_packageLevel",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2526,
																	"src": "10734:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 2685,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "10769:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10775:9:8",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "10769:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2687,
																	"name": "_incomeType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2528,
																	"src": "10807:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2681,
																"name": "Income",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2089,
																"src": "10642:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Income_$2089_storage_ptr_$",
																	"typeString": "type(struct Storage.Income storage pointer)"
																}
															},
															"id": 2688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"10660:10:8",
																"10694:6:8",
																"10720:12:8",
																"10758:9:8",
																"10795:10:8"
															],
															"names": [
																"fromUserId",
																"amount",
																"packageLevel",
																"timestamp",
																"incomeType"
															],
															"nodeType": "FunctionCall",
															"src": "10642:184:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Income_$2089_memory_ptr",
																"typeString": "struct Storage.Income memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Income_$2089_memory_ptr",
																"typeString": "struct Storage.Income memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 2677,
																"name": "incomeHistory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2109,
																"src": "10614:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Income_$2089_storage_$dyn_storage_$",
																	"typeString": "mapping(uint256 => struct Storage.Income storage ref[] storage ref)"
																}
															},
															"id": 2679,
															"indexExpression": {
																"id": 2678,
																"name": "_userId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2520,
																"src": "10628:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10614:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Income_$2089_storage_$dyn_storage",
																"typeString": "struct Storage.Income storage ref[] storage ref"
															}
														},
														"id": 2680,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10637:4:8",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "10614:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Income_$2089_storage_$dyn_storage_ptr_$_t_struct$_Income_$2089_storage_$returns$__$attached_to$_t_array$_t_struct$_Income_$2089_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct Storage.Income storage ref[] storage pointer,struct Storage.Income storage ref)"
														}
													},
													"id": 2689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10614:213:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2690,
												"nodeType": "ExpressionStatement",
												"src": "10614:213:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2694,
															"name": "userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2539,
															"src": "10900:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2695,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2524,
															"src": "10913:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2691,
															"name": "usdt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1919,
															"src": "10882:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														"id": 2693,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10887:12:8",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 277,
														"src": "10882:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$232_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10882:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2697,
												"nodeType": "ExpressionStatement",
												"src": "10882:39:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2699,
															"name": "userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2539,
															"src": "10953:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 2700,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2098,
																	"src": "10966:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2051_storage_$",
																		"typeString": "mapping(uint256 => struct Storage.User storage ref)"
																	}
																},
																"id": 2702,
																"indexExpression": {
																	"id": 2701,
																	"name": "_fromUserId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2522,
																	"src": "10972:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10966:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$2051_storage",
																	"typeString": "struct Storage.User storage ref"
																}
															},
															"id": 2703,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10985:7:8",
															"memberName": "account",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2018,
															"src": "10966:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2704,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2524,
															"src": "10994:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2705,
															"name": "_packageLevel",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2526,
															"src": "11003:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2706,
															"name": "_incomeType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2528,
															"src": "11018:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2698,
														"name": "IncomeDistributed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2179,
														"src": "10935:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint256)"
														}
													},
													"id": 2707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10935:95:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2708,
												"nodeType": "EmitStatement",
												"src": "10930:100:8"
											}
										]
									},
									"id": 2710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_distributeIncome",
									"nameLocation": "9109:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2520,
												"mutability": "mutable",
												"name": "_userId",
												"nameLocation": "9132:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2710,
												"src": "9127:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2519,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9127:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2522,
												"mutability": "mutable",
												"name": "_fromUserId",
												"nameLocation": "9145:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2710,
												"src": "9140:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2521,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9140:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2524,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "9162:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2710,
												"src": "9157:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2523,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9157:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2526,
												"mutability": "mutable",
												"name": "_packageLevel",
												"nameLocation": "9176:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 2710,
												"src": "9171:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2525,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9171:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2528,
												"mutability": "mutable",
												"name": "_incomeType",
												"nameLocation": "9196:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2710,
												"src": "9191:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2527,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9191:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9126:82:8"
									},
									"returnParameters": {
										"id": 2530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9218:0:8"
									},
									"scope": 2858,
									"src": "9100:1934:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2731,
										"nodeType": "Block",
										"src": "11109:142:8",
										"statements": [
											{
												"condition": {
													"id": 2723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "11124:45:8",
													"subExpression": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 2717,
																	"name": "weeklyUserdtl",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2425,
																	"src": "11125:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_weeklyUser_$2408_storage_$_$",
																		"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.weeklyUser storage ref))"
																	}
																},
																"id": 2719,
																"indexExpression": {
																	"id": 2718,
																	"name": "_roundId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2714,
																	"src": "11139:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11125:23:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_weeklyUser_$2408_storage_$",
																	"typeString": "mapping(uint256 => struct Storage.weeklyUser storage ref)"
																}
															},
															"id": 2721,
															"indexExpression": {
																"id": 2720,
																"name": "_userId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2712,
																"src": "11149:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11125:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_weeklyUser_$2408_storage",
																"typeString": "struct Storage.weeklyUser storage ref"
															}
														},
														"id": 2722,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11158:11:8",
														"memberName": "isQualified",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2407,
														"src": "11125:44:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2730,
												"nodeType": "IfStatement",
												"src": "11120:124:8",
												"trueBody": {
													"id": 2729,
													"nodeType": "Block",
													"src": "11171:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2725,
																		"name": "_userId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2712,
																		"src": "11214:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2726,
																		"name": "_roundId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2714,
																		"src": "11223:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2724,
																	"name": "_weeklyContestQualifier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2857,
																	"src": "11190:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256)"
																	}
																},
																"id": 2727,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11190:42:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2728,
															"nodeType": "ExpressionStatement",
															"src": "11190:42:8"
														}
													]
												}
											}
										]
									},
									"id": 2732,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_tryWeeklyContestQualify",
									"nameLocation": "11047:24:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2712,
												"mutability": "mutable",
												"name": "_userId",
												"nameLocation": "11077:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2732,
												"src": "11072:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2711,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11072:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2714,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "11091:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2732,
												"src": "11086:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2713,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11086:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11071:29:8"
									},
									"returnParameters": {
										"id": 2716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11109:0:8"
									},
									"scope": 2858,
									"src": "11038:213:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2856,
										"nodeType": "Block",
										"src": "11327:1432:8",
										"statements": [
											{
												"assignments": [
													2740
												],
												"declarations": [
													{
														"constant": false,
														"id": 2740,
														"mutability": "mutable",
														"name": "currentRound",
														"nameLocation": "11352:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 2856,
														"src": "11347:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2739,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "11347:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2742,
												"initialValue": {
													"id": 2741,
													"name": "currentWeeklyRound",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2364,
													"src": "11367:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11347:38:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2744,
																"name": "_roundId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2736,
																"src": "11412:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2745,
																"name": "currentWeeklyRound",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2364,
																"src": "11424:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11412:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420726f756e64",
															"id": 2747,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11444:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_44c340b938e2069377635f73a0f638cb6cf336fba68596e44d590f0f2dbd81ab",
																"typeString": "literal_string \"Invalid round\""
															},
															"value": "Invalid round"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_44c340b938e2069377635f73a0f638cb6cf336fba68596e44d590f0f2dbd81ab",
																"typeString": "literal_string \"Invalid round\""
															}
														],
														"id": 2743,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11404:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11404:56:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2749,
												"nodeType": "ExpressionStatement",
												"src": "11404:56:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "11479:34:8",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 2751,
																		"name": "weeklyContestdtl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2413,
																		"src": "11480:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_WeeklyContest_$2395_storage_$",
																			"typeString": "mapping(uint256 => struct Storage.WeeklyContest storage ref)"
																		}
																	},
																	"id": 2753,
																	"indexExpression": {
																		"id": 2752,
																		"name": "_roundId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2736,
																		"src": "11497:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11480:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_WeeklyContest_$2395_storage",
																		"typeString": "struct Storage.WeeklyContest storage ref"
																	}
																},
																"id": 2754,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11507:6:8",
																"memberName": "closed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2394,
																"src": "11480:33:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f756e6420636c6f736564",
															"id": 2756,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11515:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7cb136aac2cef2ec9b6251ba0be0eaf9eb87f73f326b238f4495e8c0d58e6f97",
																"typeString": "literal_string \"Round closed\""
															},
															"value": "Round closed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7cb136aac2cef2ec9b6251ba0be0eaf9eb87f73f326b238f4495e8c0d58e6f97",
																"typeString": "literal_string \"Round closed\""
															}
														],
														"id": 2750,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11471:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11471:59:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2758,
												"nodeType": "ExpressionStatement",
												"src": "11471:59:8"
											},
											{
												"assignments": [
													2761
												],
												"declarations": [
													{
														"constant": false,
														"id": 2761,
														"mutability": "mutable",
														"name": "userBoosterJoinDtl",
														"nameLocation": "11560:18:8",
														"nodeType": "VariableDeclaration",
														"scope": 2856,
														"src": "11541:37:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserBooster_$2285_memory_ptr",
															"typeString": "struct Storage.UserBooster"
														},
														"typeName": {
															"id": 2760,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2759,
																"name": "UserBooster",
																"nameLocations": [
																	"11541:11:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2285,
																"src": "11541:11:8"
															},
															"referencedDeclaration": 2285,
															"src": "11541:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserBooster_$2285_storage_ptr",
																"typeString": "struct Storage.UserBooster"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2767,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2762,
															"name": "userBoosterdtl",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2331,
															"src": "11581:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_UserBooster_$2285_storage_$_$",
																"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.UserBooster storage ref))"
															}
														},
														"id": 2764,
														"indexExpression": {
															"hexValue": "31",
															"id": 2763,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11596:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11581:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserBooster_$2285_storage_$",
															"typeString": "mapping(uint256 => struct Storage.UserBooster storage ref)"
														}
													},
													"id": 2766,
													"indexExpression": {
														"id": 2765,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2734,
														"src": "11599:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11581:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserBooster_$2285_storage",
														"typeString": "struct Storage.UserBooster storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11541:66:8"
											},
											{
												"assignments": [
													2769
												],
												"declarations": [
													{
														"constant": false,
														"id": 2769,
														"mutability": "mutable",
														"name": "hasEnoughDirects",
														"nameLocation": "11625:16:8",
														"nodeType": "VariableDeclaration",
														"scope": 2856,
														"src": "11620:21:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2768,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "11620:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2778,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 2770,
																	"name": "weeklyUserDirects",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2432,
																	"src": "11644:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
																		"typeString": "mapping(uint256 => mapping(uint256 => uint256[] storage ref))"
																	}
																},
																"id": 2772,
																"indexExpression": {
																	"id": 2771,
																	"name": "currentRound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2740,
																	"src": "11662:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11644:31:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(uint256 => uint256[] storage ref)"
																}
															},
															"id": 2774,
															"indexExpression": {
																"id": 2773,
																"name": "_userId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2734,
																"src": "11676:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11644:40:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 2775,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11685:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "11644:47:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "35",
														"id": 2776,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11695:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "11644:52:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11620:76:8"
											},
											{
												"assignments": [
													2780
												],
												"declarations": [
													{
														"constant": false,
														"id": 2780,
														"mutability": "mutable",
														"name": "boosterEarlyJoin",
														"nameLocation": "11712:16:8",
														"nodeType": "VariableDeclaration",
														"scope": 2856,
														"src": "11707:21:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2779,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "11707:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2796,
												"initialValue": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2781,
																		"name": "userBoosterJoinDtl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2761,
																		"src": "11746:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserBooster_$2285_memory_ptr",
																			"typeString": "struct Storage.UserBooster memory"
																		}
																	},
																	"id": 2782,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11765:2:8",
																	"memberName": "id",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2276,
																	"src": "11746:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2783,
																	"name": "_userId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2734,
																	"src": "11771:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11746:32:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2785,
																		"name": "userBoosterJoinDtl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2761,
																		"src": "11796:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserBooster_$2285_memory_ptr",
																			"typeString": "struct Storage.UserBooster memory"
																		}
																	},
																	"id": 2786,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11815:8:8",
																	"memberName": "joinTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2284,
																	"src": "11796:27:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 2787,
																				"name": "users",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2098,
																				"src": "11827:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2051_storage_$",
																					"typeString": "mapping(uint256 => struct Storage.User storage ref)"
																				}
																			},
																			"id": 2789,
																			"indexExpression": {
																				"id": 2788,
																				"name": "_userId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2734,
																				"src": "11833:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "11827:14:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_User_$2051_storage",
																				"typeString": "struct Storage.User storage ref"
																			}
																		},
																		"id": 2790,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "11842:16:8",
																		"memberName": "registrationTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2050,
																		"src": "11827:31:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 2791,
																		"name": "TIME_STEP",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1938,
																		"src": "11861:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11827:43:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11796:74:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "11746:124:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 2795,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "11731:150:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11707:174:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2798,
																"name": "hasEnoughDirects",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2769,
																"src": "11900:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"id": 2799,
																"name": "boosterEarlyJoin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2780,
																"src": "11920:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "11900:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656c696769626c6520666f72207765656b6c7920636f6e74657374",
															"id": 2801,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11938:33:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_118c80ebb328a86f89c9abb7dbb00582133be73c782846c45c96fae9ea1c5087",
																"typeString": "literal_string \"Not eligible for weekly contest\""
															},
															"value": "Not eligible for weekly contest"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_118c80ebb328a86f89c9abb7dbb00582133be73c782846c45c96fae9ea1c5087",
																"typeString": "literal_string \"Not eligible for weekly contest\""
															}
														],
														"id": 2797,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11892:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11892:80:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2803,
												"nodeType": "ExpressionStatement",
												"src": "11892:80:8"
											},
											{
												"assignments": [
													2806
												],
												"declarations": [
													{
														"constant": false,
														"id": 2806,
														"mutability": "mutable",
														"name": "weeklyuserdtl",
														"nameLocation": "12321:13:8",
														"nodeType": "VariableDeclaration",
														"scope": 2856,
														"src": "12302:32:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_weeklyUser_$2408_storage_ptr",
															"typeString": "struct Storage.weeklyUser"
														},
														"typeName": {
															"id": 2805,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2804,
																"name": "weeklyUser",
																"nameLocations": [
																	"12302:10:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2408,
																"src": "12302:10:8"
															},
															"referencedDeclaration": 2408,
															"src": "12302:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_weeklyUser_$2408_storage_ptr",
																"typeString": "struct Storage.weeklyUser"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2812,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2807,
															"name": "weeklyUserdtl",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2425,
															"src": "12337:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_weeklyUser_$2408_storage_$_$",
																"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.weeklyUser storage ref))"
															}
														},
														"id": 2809,
														"indexExpression": {
															"id": 2808,
															"name": "currentRound",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2740,
															"src": "12351:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12337:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_weeklyUser_$2408_storage_$",
															"typeString": "mapping(uint256 => struct Storage.weeklyUser storage ref)"
														}
													},
													"id": 2811,
													"indexExpression": {
														"id": 2810,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2734,
														"src": "12365:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12337:36:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_weeklyUser_$2408_storage",
														"typeString": "struct Storage.weeklyUser storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12302:71:8"
											},
											{
												"condition": {
													"expression": {
														"id": 2813,
														"name": "weeklyuserdtl",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2806,
														"src": "12388:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_weeklyUser_$2408_storage_ptr",
															"typeString": "struct Storage.weeklyUser storage pointer"
														}
													},
													"id": 2814,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "12402:11:8",
													"memberName": "isQualified",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2407,
													"src": "12388:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2816,
												"nodeType": "IfStatement",
												"src": "12384:38:8",
												"trueBody": {
													"functionReturnParameters": 2738,
													"id": 2815,
													"nodeType": "Return",
													"src": "12415:7:8"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "12440:26:8",
															"subExpression": {
																"expression": {
																	"id": 2818,
																	"name": "weeklyuserdtl",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2806,
																	"src": "12441:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_weeklyUser_$2408_storage_ptr",
																		"typeString": "struct Storage.weeklyUser storage pointer"
																	}
																},
																"id": 2819,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12455:11:8",
																"memberName": "isQualified",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2407,
																"src": "12441:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616c7265616479205175616c6966696564",
															"id": 2821,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12468:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_399ca2f997c2fc8a2f7ce1d19c94796738fd981bf8b1d0dce11a52d57ce1b131",
																"typeString": "literal_string \"already Qualified\""
															},
															"value": "already Qualified"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_399ca2f997c2fc8a2f7ce1d19c94796738fd981bf8b1d0dce11a52d57ce1b131",
																"typeString": "literal_string \"already Qualified\""
															}
														],
														"id": 2817,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12432:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12432:56:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2823,
												"nodeType": "ExpressionStatement",
												"src": "12432:56:8"
											},
											{
												"expression": {
													"id": 2828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2824,
															"name": "weeklyuserdtl",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2806,
															"src": "12501:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_weeklyUser_$2408_storage_ptr",
																"typeString": "struct Storage.weeklyUser storage pointer"
															}
														},
														"id": 2826,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "12515:2:8",
														"memberName": "id",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2397,
														"src": "12501:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2827,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2734,
														"src": "12520:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12501:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2829,
												"nodeType": "ExpressionStatement",
												"src": "12501:26:8"
											},
											{
												"expression": {
													"id": 2835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2830,
															"name": "weeklyuserdtl",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2806,
															"src": "12538:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_weeklyUser_$2408_storage_ptr",
																"typeString": "struct Storage.weeklyUser storage pointer"
															}
														},
														"id": 2832,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "12552:8:8",
														"memberName": "joinTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2399,
														"src": "12538:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2833,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "12563:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2834,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12569:9:8",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "12563:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12538:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2836,
												"nodeType": "ExpressionStatement",
												"src": "12538:40:8"
											},
											{
												"expression": {
													"id": 2841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2837,
															"name": "weeklyuserdtl",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2806,
															"src": "12589:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_weeklyUser_$2408_storage_ptr",
																"typeString": "struct Storage.weeklyUser storage pointer"
															}
														},
														"id": 2839,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "12603:7:8",
														"memberName": "roundId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2401,
														"src": "12589:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2840,
														"name": "currentRound",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2740,
														"src": "12613:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12589:36:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2842,
												"nodeType": "ExpressionStatement",
												"src": "12589:36:8"
											},
											{
												"expression": {
													"id": 2847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2843,
															"name": "weeklyuserdtl",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2806,
															"src": "12636:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_weeklyUser_$2408_storage_ptr",
																"typeString": "struct Storage.weeklyUser storage pointer"
															}
														},
														"id": 2845,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "12650:11:8",
														"memberName": "isQualified",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2407,
														"src": "12636:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2846,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12664:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "12636:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2848,
												"nodeType": "ExpressionStatement",
												"src": "12636:32:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2850,
															"name": "currentRound",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2740,
															"src": "12712:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2851,
															"name": "_userId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2734,
															"src": "12726:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2852,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "12735:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12741:9:8",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "12735:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2849,
														"name": "WeeklyContestQualified",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2464,
														"src": "12689:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 2854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12689:62:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2855,
												"nodeType": "EmitStatement",
												"src": "12684:67:8"
											}
										]
									},
									"id": 2857,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_weeklyContestQualifier",
									"nameLocation": "11266:23:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2734,
												"mutability": "mutable",
												"name": "_userId",
												"nameLocation": "11295:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2857,
												"src": "11290:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2733,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11290:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2736,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "11309:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2857,
												"src": "11304:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2735,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11304:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11289:29:8"
									},
									"returnParameters": {
										"id": 2738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11327:0:8"
									},
									"scope": 2858,
									"src": "11257:1502:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2859,
							"src": "292:12470:8",
							"usedErrors": [],
							"usedEvents": [
								2139,
								2147,
								2157,
								2167,
								2179,
								2189,
								2197,
								2446,
								2456,
								2464
							]
						}
					],
					"src": "33:12729:8"
				},
				"id": 8
			}
		}
	}
}